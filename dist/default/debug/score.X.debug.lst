

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Thu Jul 18 18:19:26 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F870
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	intentry,global,class=CODE,delta=2
    27                           	psect	functab,global,class=ENTRY,delta=2
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    29                           	dabs	1,0x7E,2
    30     0000                     
    31                           ; Generated 12/10/2023 GMT
    32                           ; 
    33                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution. Publication is not required when
    47                           ;        this file is used in an embedded application.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F870 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65     0000                     	;# 
    66     0001                     	;# 
    67     0002                     	;# 
    68     0003                     	;# 
    69     0004                     	;# 
    70     0005                     	;# 
    71     0006                     	;# 
    72     0007                     	;# 
    73     000A                     	;# 
    74     000B                     	;# 
    75     000C                     	;# 
    76     000D                     	;# 
    77     000E                     	;# 
    78     000E                     	;# 
    79     000F                     	;# 
    80     0010                     	;# 
    81     0011                     	;# 
    82     0012                     	;# 
    83     0015                     	;# 
    84     0015                     	;# 
    85     0016                     	;# 
    86     0017                     	;# 
    87     0018                     	;# 
    88     0019                     	;# 
    89     001A                     	;# 
    90     001E                     	;# 
    91     001F                     	;# 
    92     0081                     	;# 
    93     0085                     	;# 
    94     0086                     	;# 
    95     0087                     	;# 
    96     008C                     	;# 
    97     008D                     	;# 
    98     008E                     	;# 
    99     0092                     	;# 
   100     0098                     	;# 
   101     0099                     	;# 
   102     009E                     	;# 
   103     009F                     	;# 
   104     010C                     	;# 
   105     010D                     	;# 
   106     010E                     	;# 
   107     010F                     	;# 
   108     018C                     	;# 
   109     018D                     	;# 
   110     0000                     	;# 
   111     0001                     	;# 
   112     0002                     	;# 
   113     0003                     	;# 
   114     0004                     	;# 
   115     0005                     	;# 
   116     0006                     	;# 
   117     0007                     	;# 
   118     000A                     	;# 
   119     000B                     	;# 
   120     000C                     	;# 
   121     000D                     	;# 
   122     000E                     	;# 
   123     000E                     	;# 
   124     000F                     	;# 
   125     0010                     	;# 
   126     0011                     	;# 
   127     0012                     	;# 
   128     0015                     	;# 
   129     0015                     	;# 
   130     0016                     	;# 
   131     0017                     	;# 
   132     0018                     	;# 
   133     0019                     	;# 
   134     001A                     	;# 
   135     001E                     	;# 
   136     001F                     	;# 
   137     0081                     	;# 
   138     0085                     	;# 
   139     0086                     	;# 
   140     0087                     	;# 
   141     008C                     	;# 
   142     008D                     	;# 
   143     008E                     	;# 
   144     0092                     	;# 
   145     0098                     	;# 
   146     0099                     	;# 
   147     009E                     	;# 
   148     009F                     	;# 
   149     010C                     	;# 
   150     010D                     	;# 
   151     010E                     	;# 
   152     010F                     	;# 
   153     018C                     	;# 
   154     018D                     	;# 
   155     0000                     	;# 
   156     0001                     	;# 
   157     0002                     	;# 
   158     0003                     	;# 
   159     0004                     	;# 
   160     0005                     	;# 
   161     0006                     	;# 
   162     0007                     	;# 
   163     000A                     	;# 
   164     000B                     	;# 
   165     000C                     	;# 
   166     000D                     	;# 
   167     000E                     	;# 
   168     000E                     	;# 
   169     000F                     	;# 
   170     0010                     	;# 
   171     0011                     	;# 
   172     0012                     	;# 
   173     0015                     	;# 
   174     0015                     	;# 
   175     0016                     	;# 
   176     0017                     	;# 
   177     0018                     	;# 
   178     0019                     	;# 
   179     001A                     	;# 
   180     001E                     	;# 
   181     001F                     	;# 
   182     0081                     	;# 
   183     0085                     	;# 
   184     0086                     	;# 
   185     0087                     	;# 
   186     008C                     	;# 
   187     008D                     	;# 
   188     008E                     	;# 
   189     0092                     	;# 
   190     0098                     	;# 
   191     0099                     	;# 
   192     009E                     	;# 
   193     009F                     	;# 
   194     010C                     	;# 
   195     010D                     	;# 
   196     010E                     	;# 
   197     010F                     	;# 
   198     018C                     	;# 
   199     018D                     	;# 
   200     0000                     	;# 
   201     0001                     	;# 
   202     0002                     	;# 
   203     0003                     	;# 
   204     0004                     	;# 
   205     0005                     	;# 
   206     0006                     	;# 
   207     0007                     	;# 
   208     000A                     	;# 
   209     000B                     	;# 
   210     000C                     	;# 
   211     000D                     	;# 
   212     000E                     	;# 
   213     000E                     	;# 
   214     000F                     	;# 
   215     0010                     	;# 
   216     0011                     	;# 
   217     0012                     	;# 
   218     0015                     	;# 
   219     0015                     	;# 
   220     0016                     	;# 
   221     0017                     	;# 
   222     0018                     	;# 
   223     0019                     	;# 
   224     001A                     	;# 
   225     001E                     	;# 
   226     001F                     	;# 
   227     0081                     	;# 
   228     0085                     	;# 
   229     0086                     	;# 
   230     0087                     	;# 
   231     008C                     	;# 
   232     008D                     	;# 
   233     008E                     	;# 
   234     0092                     	;# 
   235     0098                     	;# 
   236     0099                     	;# 
   237     009E                     	;# 
   238     009F                     	;# 
   239     010C                     	;# 
   240     010D                     	;# 
   241     010E                     	;# 
   242     010F                     	;# 
   243     018C                     	;# 
   244     018D                     	;# 
   245     0000                     	;# 
   246     0001                     	;# 
   247     0002                     	;# 
   248     0003                     	;# 
   249     0004                     	;# 
   250     0005                     	;# 
   251     0006                     	;# 
   252     0007                     	;# 
   253     000A                     	;# 
   254     000B                     	;# 
   255     000C                     	;# 
   256     000D                     	;# 
   257     000E                     	;# 
   258     000E                     	;# 
   259     000F                     	;# 
   260     0010                     	;# 
   261     0011                     	;# 
   262     0012                     	;# 
   263     0015                     	;# 
   264     0015                     	;# 
   265     0016                     	;# 
   266     0017                     	;# 
   267     0018                     	;# 
   268     0019                     	;# 
   269     001A                     	;# 
   270     001E                     	;# 
   271     001F                     	;# 
   272     0081                     	;# 
   273     0085                     	;# 
   274     0086                     	;# 
   275     0087                     	;# 
   276     008C                     	;# 
   277     008D                     	;# 
   278     008E                     	;# 
   279     0092                     	;# 
   280     0098                     	;# 
   281     0099                     	;# 
   282     009E                     	;# 
   283     009F                     	;# 
   284     010C                     	;# 
   285     010D                     	;# 
   286     010E                     	;# 
   287     010F                     	;# 
   288     018C                     	;# 
   289     018D                     	;# 
   290                           
   291                           	psect	strings
   292     020A                     __pstrings:
   293     020A                     stringtab:
   294     020A                     __stringtab:
   295     020A                     stringcode:	
   296                           ;	String table - string pointers are 1 byte each
   297                           
   298     020A                     stringdir:
   299     020A  3002               	movlw	high stringdir
   300     020B  008A               	movwf	10
   301     020C  0804               	movf	4,w
   302     020D  0A84               	incf	4,f
   303     020E  0782               	addwf	2,f
   304     020F                     __stringbase:
   305     020F  3400               	retlw	0
   306     0210                     __end_of__stringtab:
   307     0210                     _NUMBERS:
   308     0210  343F               	retlw	63
   309     0211  3406               	retlw	6
   310     0212  345B               	retlw	91
   311     0213  344F               	retlw	79
   312     0214  3466               	retlw	102
   313     0215  346D               	retlw	109
   314     0216  347D               	retlw	125
   315     0217  3407               	retlw	7
   316     0218  347F               	retlw	127
   317     0219  344F               	retlw	79
   318     021A                     __end_of_NUMBERS:
   319     021A                     _DIGITS:
   320     021A  343E               	retlw	62
   321     021B  343D               	retlw	61
   322     021C  343B               	retlw	59
   323     021D  3437               	retlw	55
   324     021E  342F               	retlw	47
   325     021F  341F               	retlw	31
   326     0220                     __end_of_DIGITS:
   327     000E                     _TMR1	set	14
   328     000C                     _PIR1bits	set	12
   329     0005                     _PORTAbits	set	5
   330     001F                     _ADCON0	set	31
   331     0010                     _T1CONbits	set	16
   332     0010                     _T1CON	set	16
   333     0007                     _PORTC	set	7
   334     0006                     _PORTB	set	6
   335     005F                     _GIE	set	95
   336     005E                     _PEIE	set	94
   337     008C                     _PIE1bits	set	140
   338     009F                     _ADCON1bits	set	159
   339     0087                     _TRISC	set	135
   340     0086                     _TRISB	set	134
   341     0085                     _TRISA	set	133
   342                           
   343                           	psect	cinit
   344     000B                     start_initialization:	
   345                           ; #config settings
   346                           
   347     000B                     __initialization:
   348                           
   349                           ; Clear objects allocated to COMMON
   350     000B  01FA               	clrf	__pbssCOMMON& (0+127)
   351     000C  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   352                           
   353                           ; Clear objects allocated to BANK0
   354     000D  1283               	bcf	3,5	;RP0=0, select bank0
   355     000E  1303               	bcf	3,6	;RP1=0, select bank0
   356     000F  01AB               	clrf	__pbssBANK0& (0+127)
   357     0010  01AC               	clrf	(__pbssBANK0+1)& (0+127)
   358     0011  01AD               	clrf	(__pbssBANK0+2)& (0+127)
   359     0012  01AE               	clrf	(__pbssBANK0+3)& (0+127)
   360     0013  01AF               	clrf	(__pbssBANK0+4)& (0+127)
   361     0014  01B0               	clrf	(__pbssBANK0+5)& (0+127)
   362     0015  01B1               	clrf	(__pbssBANK0+6)& (0+127)
   363     0016  01B2               	clrf	(__pbssBANK0+7)& (0+127)
   364     0017  01B3               	clrf	(__pbssBANK0+8)& (0+127)
   365     0018                     end_of_initialization:	
   366                           ;End of C runtime variable initialization code
   367                           
   368     0018                     __end_of__initialization:
   369     0018  0183               	clrf	3
   370     0019  2A35               	ljmp	_main	;jump to C main() function
   371                           
   372                           	psect	bssCOMMON
   373     007A                     __pbssCOMMON:
   374     007A                     _button:
   375     007A                     	ds	2
   376                           
   377                           	psect	bssBANK0
   378     002B                     __pbssBANK0:
   379     002B                     _score:
   380     002B                     	ds	5
   381     0030                     _timers:
   382     0030                     	ds	4
   383                           
   384                           	psect	cstackCOMMON
   385     0070                     __pcstackCOMMON:
   386     0070                     ?_checkButtons:
   387     0070                     ?_updateDisplay:	
   388                           ; 1 bytes @ 0x0
   389                           
   390     0070                     ?_setup:	
   391                           ; 1 bytes @ 0x0
   392                           
   393     0070                     ?_main:	
   394                           ; 1 bytes @ 0x0
   395                           
   396     0070                     ?_up1:	
   397                           ; 1 bytes @ 0x0
   398                           
   399     0070                     ?_up2:	
   400                           ; 1 bytes @ 0x0
   401                           
   402     0070                     ?_down1:	
   403                           ; 1 bytes @ 0x0
   404                           
   405     0070                     ?_down2:	
   406                           ; 1 bytes @ 0x0
   407                           
   408     0070                     ?_change:	
   409                           ; 1 bytes @ 0x0
   410                           
   411     0070                     ?_win:	
   412                           ; 1 bytes @ 0x0
   413                           
   414     0070                     ?_getNumber:	
   415                           ; 1 bytes @ 0x0
   416                           
   417     0070                     ?_isr:	
   418                           ; 1 bytes @ 0x0
   419                           
   420     0070                     ??_isr:	
   421                           ; 1 bytes @ 0x0
   422                           
   423                           
   424                           ; 1 bytes @ 0x0
   425     0070                     	ds	2
   426     0072                     ??_setup:
   427     0072                     ??_up1:	
   428                           ; 1 bytes @ 0x2
   429                           
   430     0072                     ??_up2:	
   431                           ; 1 bytes @ 0x2
   432                           
   433     0072                     ??_down1:	
   434                           ; 1 bytes @ 0x2
   435                           
   436     0072                     ??_down2:	
   437                           ; 1 bytes @ 0x2
   438                           
   439     0072                     ??_change:	
   440                           ; 1 bytes @ 0x2
   441                           
   442     0072                     ??_win:	
   443                           ; 1 bytes @ 0x2
   444                           
   445     0072                     ?___bmul:	
   446                           ; 1 bytes @ 0x2
   447                           
   448     0072                     ?___awdiv:	
   449                           ; 1 bytes @ 0x2
   450                           
   451     0072                     change@aux:	
   452                           ; 2 bytes @ 0x2
   453                           
   454     0072                     ___bmul@multiplicand:	
   455                           ; 1 bytes @ 0x2
   456                           
   457     0072                     ___awdiv@divisor:	
   458                           ; 1 bytes @ 0x2
   459                           
   460                           
   461                           ; 2 bytes @ 0x2
   462     0072                     	ds	1
   463     0073                     ?_checkButton:
   464     0073                     ??___bmul:	
   465                           ; 1 bytes @ 0x3
   466                           
   467     0073                     checkButton@action:	
   468                           ; 1 bytes @ 0x3
   469                           
   470     0073                     ___bmul@product:	
   471                           ; 1 bytes @ 0x3
   472                           
   473                           
   474                           ; 1 bytes @ 0x3
   475     0073                     	ds	1
   476     0074                     ??_checkButton:
   477     0074                     checkButton@btn:	
   478                           ; 1 bytes @ 0x4
   479                           
   480     0074                     ___bmul@multiplier:	
   481                           ; 1 bytes @ 0x4
   482                           
   483     0074                     ___awdiv@dividend:	
   484                           ; 1 bytes @ 0x4
   485                           
   486                           
   487                           ; 2 bytes @ 0x4
   488     0074                     	ds	1
   489     0075                     ??_checkButtons:
   490                           
   491                           ; 1 bytes @ 0x5
   492     0075                     	ds	1
   493     0076                     ??___awdiv:
   494     0076                     _checkButtons$219:	
   495                           ; 1 bytes @ 0x6
   496                           
   497     0076                     ___awdiv@counter:	
   498                           ; 1 bytes @ 0x6
   499                           
   500                           
   501                           ; 1 bytes @ 0x6
   502     0076                     	ds	1
   503     0077                     ___awdiv@sign:
   504                           
   505                           ; 1 bytes @ 0x7
   506     0077                     	ds	1
   507     0078                     ___awdiv@quotient:
   508                           
   509                           ; 2 bytes @ 0x8
   510     0078                     	ds	2
   511     007A                     ??_updateDisplay:
   512     007A                     ??_getNumber:	
   513                           ; 1 bytes @ 0xA
   514                           
   515                           
   516                           	psect	cstackBANK0
   517     0020                     __pcstackBANK0:	
   518                           ; 1 bytes @ 0xA
   519                           
   520     0020                     ?_calcDigit:
   521     0020                     calcDigit@digit:	
   522                           ; 1 bytes @ 0x0
   523                           
   524                           
   525                           ; 1 bytes @ 0x0
   526     0020                     	ds	1
   527     0021                     ??_calcDigit:
   528                           
   529                           ; 1 bytes @ 0x1
   530     0021                     	ds	2
   531     0023                     calcDigit@u:
   532                           
   533                           ; 1 bytes @ 0x3
   534     0023                     	ds	1
   535     0024                     _calcDigit$241:
   536                           
   537                           ; 2 bytes @ 0x4
   538     0024                     	ds	2
   539     0026                     calcDigit@value:
   540                           
   541                           ; 1 bytes @ 0x6
   542     0026                     	ds	1
   543     0027                     calcDigit@d:
   544                           
   545                           ; 1 bytes @ 0x7
   546     0027                     	ds	1
   547     0028                     ??_main:
   548                           
   549                           ; 1 bytes @ 0x8
   550     0028                     	ds	3
   551                           
   552                           	psect	maintext
   553     0235                     __pmaintext:	
   554 ;;
   555 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   556 ;;
   557 ;; *************** function _main *****************
   558 ;; Defined at:
   559 ;;		line 22 in file "main.c"
   560 ;; Parameters:    Size  Location     Type
   561 ;;		None
   562 ;; Auto vars:     Size  Location     Type
   563 ;;		None
   564 ;; Return value:  Size  Location     Type
   565 ;;                  1    wreg      void 
   566 ;; Registers used:
   567 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   568 ;; Tracked objects:
   569 ;;		On entry : B00/0
   570 ;;		On exit  : 0/0
   571 ;;		Unchanged: 0/0
   572 ;; Data sizes:     COMMON   BANK0   BANK1
   573 ;;      Params:         0       0       0
   574 ;;      Locals:         0       0       0
   575 ;;      Temps:          0       3       0
   576 ;;      Totals:         0       3       0
   577 ;;Total ram usage:        3 bytes
   578 ;; Hardware stack levels required when called: 5
   579 ;; This function calls:
   580 ;;		_checkButtons
   581 ;;		_setup
   582 ;;		_updateDisplay
   583 ;; This function is called by:
   584 ;;		Startup code after reset
   585 ;; This function uses a non-reentrant model
   586 ;;
   587                           
   588     0235                     _main:	
   589                           ;psect for function _main
   590                           
   591     0235                     l1213:	
   592                           ;incstack = 0
   593                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   594                           
   595                           
   596                           ;main.c: 24:     setup();
   597     0235  21DA               	fcall	_setup
   598     0236                     l1215:
   599                           
   600                           ;main.c: 26:     _delay((unsigned long)((500)*(12800000L/4000.0)));
   601     0236  3009               	movlw	9
   602     0237  1283               	bcf	3,5	;RP0=0, select bank0
   603     0238  1303               	bcf	3,6	;RP1=0, select bank0
   604     0239  00AA               	movwf	??_main+2
   605     023A  301E               	movlw	30
   606     023B  00A9               	movwf	??_main+1
   607     023C  30E4               	movlw	228
   608     023D  00A8               	movwf	??_main
   609     023E                     u907:
   610     023E  0BA8               	decfsz	??_main,f
   611     023F  2A3E               	goto	u907
   612     0240  0BA9               	decfsz	??_main+1,f
   613     0241  2A3E               	goto	u907
   614     0242  0BAA               	decfsz	??_main+2,f
   615     0243  2A3E               	goto	u907
   616     0244                     l1217:
   617                           
   618                           ;main.c: 29:         checkButtons();
   619     0244  208D               	fcall	_checkButtons
   620     0245                     l1219:
   621                           
   622                           ;main.c: 30:         updateDisplay();
   623     0245  21B5               	fcall	_updateDisplay
   624     0246  2A44               	goto	l1217
   625     0247  280A               	ljmp	start
   626     0248                     __end_of_main:
   627                           
   628                           	psect	text1
   629     01B5                     __ptext1:	
   630 ;; *************** function _updateDisplay *****************
   631 ;; Defined at:
   632 ;;		line 17 in file "display.c"
   633 ;; Parameters:    Size  Location     Type
   634 ;;		None
   635 ;; Auto vars:     Size  Location     Type
   636 ;;		None
   637 ;; Return value:  Size  Location     Type
   638 ;;                  1    wreg      void 
   639 ;; Registers used:
   640 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   641 ;; Tracked objects:
   642 ;;		On entry : 0/0
   643 ;;		On exit  : 0/0
   644 ;;		Unchanged: 0/0
   645 ;; Data sizes:     COMMON   BANK0   BANK1
   646 ;;      Params:         0       0       0
   647 ;;      Locals:         0       0       0
   648 ;;      Temps:          0       0       0
   649 ;;      Totals:         0       0       0
   650 ;;Total ram usage:        0 bytes
   651 ;; Hardware stack levels used: 1
   652 ;; Hardware stack levels required when called: 4
   653 ;; This function calls:
   654 ;;		_getNumber
   655 ;; This function is called by:
   656 ;;		_main
   657 ;; This function uses a non-reentrant model
   658 ;;
   659                           
   660     01B5                     _updateDisplay:	
   661                           ;psect for function _updateDisplay
   662                           
   663     01B5                     l1199:	
   664                           ;incstack = 0
   665                           ; Regs used in _updateDisplay: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   666                           
   667                           
   668                           ;display.c: 18:     if (timers[0]) return;
   669     01B5  1283               	bcf	3,5	;RP0=0, select bank0
   670     01B6  1303               	bcf	3,6	;RP1=0, select bank0
   671     01B7  0830               	movf	_timers,w	;volatile
   672     01B8  0431               	iorwf	_timers+1,w	;volatile
   673     01B9  1903               	btfsc	3,2
   674     01BA  29BC               	goto	u881
   675     01BB  29BD               	goto	u880
   676     01BC                     u881:
   677     01BC  29BE               	goto	l1203
   678     01BD                     u880:
   679     01BD  29D9               	goto	l136
   680     01BE                     l1203:
   681                           
   682                           ;display.c: 19:     timers[0] = 100;
   683     01BE  3064               	movlw	100
   684     01BF  00B0               	movwf	_timers	;volatile
   685     01C0  3000               	movlw	0
   686     01C1  00B1               	movwf	_timers+1	;volatile
   687     01C2                     l1205:
   688                           
   689                           ;display.c: 21:     if (++score.digit > 6) score.digit = 0;
   690     01C2  3001               	movlw	1
   691     01C3  00FF               	movwf	btemp+1
   692     01C4  087F               	movf	btemp+1,w
   693     01C5  07AF               	addwf	_score+4,f
   694     01C6  3007               	movlw	7
   695     01C7  022F               	subwf	_score+4,w
   696     01C8  1C03               	skipc
   697     01C9  29CB               	goto	u891
   698     01CA  29CC               	goto	u890
   699     01CB                     u891:
   700     01CB  29CD               	goto	l1209
   701     01CC                     u890:
   702     01CC                     l1207:
   703     01CC  01AF               	clrf	_score+4
   704     01CD                     l1209:
   705                           
   706                           ;display.c: 23:     PORTB = NUMBERS[getNumber()];
   707     01CD  213E               	fcall	_getNumber
   708     01CE  3E01               	addlw	low ((_NUMBERS-__stringbase)| (0+32768))
   709     01CF  0084               	movwf	4
   710     01D0  220A               	fcall	stringdir
   711     01D1  1283               	bcf	3,5	;RP0=0, select bank0
   712     01D2  1303               	bcf	3,6	;RP1=0, select bank0
   713     01D3  0086               	movwf	6	;volatile
   714     01D4                     l1211:
   715                           
   716                           ;display.c: 24:     PORTC = DIGITS[score.digit];
   717     01D4  082F               	movf	_score+4,w
   718     01D5  3E0B               	addlw	low ((_DIGITS-__stringbase)| (0+32768))
   719     01D6  0084               	movwf	4
   720     01D7  220A               	fcall	stringdir
   721     01D8  0087               	movwf	7	;volatile
   722     01D9                     l136:
   723     01D9  0008               	return
   724     01DA                     __end_of_updateDisplay:
   725                           
   726                           	psect	text2
   727     013E                     __ptext2:	
   728 ;; *************** function _getNumber *****************
   729 ;; Defined at:
   730 ;;		line 9 in file "display.c"
   731 ;; Parameters:    Size  Location     Type
   732 ;;		None
   733 ;; Auto vars:     Size  Location     Type
   734 ;;		None
   735 ;; Return value:  Size  Location     Type
   736 ;;                  1    wreg      unsigned char 
   737 ;; Registers used:
   738 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   739 ;; Tracked objects:
   740 ;;		On entry : 0/0
   741 ;;		On exit  : 0/0
   742 ;;		Unchanged: 0/0
   743 ;; Data sizes:     COMMON   BANK0   BANK1
   744 ;;      Params:         0       0       0
   745 ;;      Locals:         0       0       0
   746 ;;      Temps:          0       0       0
   747 ;;      Totals:         0       0       0
   748 ;;Total ram usage:        0 bytes
   749 ;; Hardware stack levels used: 1
   750 ;; Hardware stack levels required when called: 3
   751 ;; This function calls:
   752 ;;		_calcDigit
   753 ;; This function is called by:
   754 ;;		_updateDisplay
   755 ;; This function uses a non-reentrant model
   756 ;;
   757                           
   758     013E                     _getNumber:	
   759                           ;psect for function _getNumber
   760                           
   761     013E                     l1171:	
   762                           ;incstack = 0
   763                           ; Regs used in _getNumber: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   764                           
   765                           
   766                           ;display.c: 10:     if (score.digit < 2) return calcDigit(score.team1, 0);
   767     013E  3002               	movlw	2
   768     013F  1283               	bcf	3,5	;RP0=0, select bank0
   769     0140  1303               	bcf	3,6	;RP1=0, select bank0
   770     0141  022F               	subwf	_score+4,w
   771     0142  1803               	skipnc
   772     0143  2945               	goto	u841
   773     0144  2946               	goto	u840
   774     0145                     u841:
   775     0145  294A               	goto	l1177
   776     0146                     u840:
   777     0146                     l1173:
   778     0146  01A0               	clrf	calcDigit@digit
   779     0147  082B               	movf	_score,w
   780     0148  20E2               	fcall	_calcDigit
   781     0149  2966               	goto	l129
   782     014A                     l1177:
   783                           
   784                           ;display.c: 11:     if (score.digit < 4) return calcDigit(score.team2, 2);
   785     014A  3004               	movlw	4
   786     014B  022F               	subwf	_score+4,w
   787     014C  1803               	skipnc
   788     014D  294F               	goto	u851
   789     014E  2950               	goto	u850
   790     014F                     u851:
   791     014F  2955               	goto	l1183
   792     0150                     u850:
   793     0150                     l1179:
   794     0150  3002               	movlw	2
   795     0151  00A0               	movwf	calcDigit@digit
   796     0152  082C               	movf	_score+1,w
   797     0153  20E2               	fcall	_calcDigit
   798     0154  2966               	goto	l129
   799     0155                     l1183:
   800                           
   801                           ;display.c: 12:     if (score.digit == 4) return score.win1;
   802     0155  3004               	movlw	4
   803     0156  062F               	xorwf	_score+4,w
   804     0157  1D03               	btfss	3,2
   805     0158  295A               	goto	u861
   806     0159  295B               	goto	u860
   807     015A                     u861:
   808     015A  295D               	goto	l1189
   809     015B                     u860:
   810     015B                     l1185:
   811     015B  082D               	movf	_score+2,w
   812     015C  2966               	goto	l129
   813     015D                     l1189:
   814                           
   815                           ;display.c: 13:     if (score.digit == 5) return score.win2;
   816     015D  3005               	movlw	5
   817     015E  062F               	xorwf	_score+4,w
   818     015F  1D03               	btfss	3,2
   819     0160  2962               	goto	u871
   820     0161  2963               	goto	u870
   821     0162                     u871:
   822     0162  2965               	goto	l1195
   823     0163                     u870:
   824     0163                     l1191:
   825     0163  082E               	movf	_score+3,w
   826     0164  2966               	goto	l129
   827     0165                     l1195:
   828                           
   829                           ;display.c: 14:     return 0;
   830     0165  3000               	movlw	0
   831     0166                     l129:
   832     0166  0008               	return
   833     0167                     __end_of_getNumber:
   834                           
   835                           	psect	text3
   836     00E2                     __ptext3:	
   837 ;; *************** function _calcDigit *****************
   838 ;; Defined at:
   839 ;;		line 3 in file "display.c"
   840 ;; Parameters:    Size  Location     Type
   841 ;;  value           1    wreg     char 
   842 ;;  digit           1    0[BANK0 ] unsigned char 
   843 ;; Auto vars:     Size  Location     Type
   844 ;;  value           1    6[BANK0 ] char 
   845 ;;  d               1    7[BANK0 ] unsigned char 
   846 ;;  u               1    3[BANK0 ] unsigned char 
   847 ;; Return value:  Size  Location     Type
   848 ;;                  1    wreg      unsigned char 
   849 ;; Registers used:
   850 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   851 ;; Tracked objects:
   852 ;;		On entry : 0/0
   853 ;;		On exit  : 0/0
   854 ;;		Unchanged: 0/0
   855 ;; Data sizes:     COMMON   BANK0   BANK1
   856 ;;      Params:         0       1       0
   857 ;;      Locals:         0       5       0
   858 ;;      Temps:          0       2       0
   859 ;;      Totals:         0       8       0
   860 ;;Total ram usage:        8 bytes
   861 ;; Hardware stack levels used: 1
   862 ;; Hardware stack levels required when called: 2
   863 ;; This function calls:
   864 ;;		___awdiv
   865 ;;		___bmul
   866 ;; This function is called by:
   867 ;;		_getNumber
   868 ;; This function uses a non-reentrant model
   869 ;;
   870                           
   871     00E2                     _calcDigit:	
   872                           ;psect for function _calcDigit
   873                           
   874                           
   875                           ;incstack = 0
   876                           ; Regs used in _calcDigit: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   877                           ;calcDigit@value stored from wreg
   878     00E2  1283               	bcf	3,5	;RP0=0, select bank0
   879     00E3  1303               	bcf	3,6	;RP1=0, select bank0
   880     00E4  00A6               	movwf	calcDigit@value
   881     00E5                     l1161:
   882                           
   883                           ;display.c: 4:     char d = (char)value / 10;
   884     00E5  300A               	movlw	10
   885     00E6  00F2               	movwf	___awdiv@divisor
   886     00E7  3000               	movlw	0
   887     00E8  00F3               	movwf	___awdiv@divisor+1
   888     00E9  0826               	movf	calcDigit@value,w
   889     00EA  00A1               	movwf	??_calcDigit
   890     00EB  01A2               	clrf	??_calcDigit+1
   891     00EC  0821               	movf	??_calcDigit,w
   892     00ED  00F4               	movwf	___awdiv@dividend
   893     00EE  0822               	movf	??_calcDigit+1,w
   894     00EF  00F5               	movwf	___awdiv@dividend+1
   895     00F0  2026               	fcall	___awdiv
   896     00F1  0872               	movf	?___awdiv,w
   897     00F2  1283               	bcf	3,5	;RP0=0, select bank0
   898     00F3  1303               	bcf	3,6	;RP1=0, select bank0
   899     00F4  00A7               	movwf	calcDigit@d
   900                           
   901                           ;display.c: 5:     char u = (char)value - d * 10;
   902     00F5  30F6               	movlw	246
   903     00F6  00F2               	movwf	___bmul@multiplicand
   904     00F7  0827               	movf	calcDigit@d,w
   905     00F8  2220               	fcall	___bmul
   906     00F9  1283               	bcf	3,5	;RP0=0, select bank0
   907     00FA  1303               	bcf	3,6	;RP1=0, select bank0
   908     00FB  0726               	addwf	calcDigit@value,w
   909     00FC  00A3               	movwf	calcDigit@u
   910     00FD                     l1163:
   911                           
   912                           ;display.c: 6:     return score.digit == digit ? d : u;
   913     00FD  082F               	movf	_score+4,w
   914     00FE  0620               	xorwf	calcDigit@digit,w
   915     00FF  1903               	skipnz
   916     0100  2902               	goto	u831
   917     0101  2903               	goto	u830
   918     0102                     u831:
   919     0102  290B               	goto	l1167
   920     0103                     u830:
   921     0103                     l1165:
   922     0103  0823               	movf	calcDigit@u,w
   923     0104  00A1               	movwf	??_calcDigit
   924     0105  01A2               	clrf	??_calcDigit+1
   925     0106  0821               	movf	??_calcDigit,w
   926     0107  00A4               	movwf	_calcDigit$241
   927     0108  0822               	movf	??_calcDigit+1,w
   928     0109  00A5               	movwf	_calcDigit$241+1
   929     010A  2912               	goto	l124
   930     010B                     l1167:
   931     010B  0827               	movf	calcDigit@d,w
   932     010C  00A1               	movwf	??_calcDigit
   933     010D  01A2               	clrf	??_calcDigit+1
   934     010E  0821               	movf	??_calcDigit,w
   935     010F  00A4               	movwf	_calcDigit$241
   936     0110  0822               	movf	??_calcDigit+1,w
   937     0111  00A5               	movwf	_calcDigit$241+1
   938     0112                     l124:
   939     0112  0824               	movf	_calcDigit$241,w
   940     0113                     l125:
   941     0113  0008               	return
   942     0114                     __end_of_calcDigit:
   943                           
   944                           	psect	text4
   945     0220                     __ptext4:	
   946 ;; *************** function ___bmul *****************
   947 ;; Defined at:
   948 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul8.c"
   949 ;; Parameters:    Size  Location     Type
   950 ;;  multiplier      1    wreg     unsigned char 
   951 ;;  multiplicand    1    2[COMMON] unsigned char 
   952 ;; Auto vars:     Size  Location     Type
   953 ;;  multiplier      1    4[COMMON] unsigned char 
   954 ;;  product         1    3[COMMON] unsigned char 
   955 ;; Return value:  Size  Location     Type
   956 ;;                  1    wreg      unsigned char 
   957 ;; Registers used:
   958 ;;		wreg, status,2, status,0, btemp+1
   959 ;; Tracked objects:
   960 ;;		On entry : 0/0
   961 ;;		On exit  : 0/0
   962 ;;		Unchanged: 0/0
   963 ;; Data sizes:     COMMON   BANK0   BANK1
   964 ;;      Params:         1       0       0
   965 ;;      Locals:         2       0       0
   966 ;;      Temps:          0       0       0
   967 ;;      Totals:         3       0       0
   968 ;;Total ram usage:        3 bytes
   969 ;; Hardware stack levels used: 1
   970 ;; Hardware stack levels required when called: 1
   971 ;; This function calls:
   972 ;;		Nothing
   973 ;; This function is called by:
   974 ;;		_calcDigit
   975 ;; This function uses a non-reentrant model
   976 ;;
   977                           
   978     0220                     ___bmul:	
   979                           ;psect for function ___bmul
   980                           
   981                           
   982                           ;incstack = 0
   983                           ; Regs used in ___bmul: [wreg+status,2+status,0+btemp+1]
   984                           ;___bmul@multiplier stored from wreg
   985     0220  00F4               	movwf	___bmul@multiplier
   986     0221                     l945:
   987     0221  01F3               	clrf	___bmul@product
   988     0222                     l947:
   989     0222  1C74               	btfss	___bmul@multiplier,0
   990     0223  2A25               	goto	u421
   991     0224  2A26               	goto	u420
   992     0225                     u421:
   993     0225  2A2A               	goto	l951
   994     0226                     u420:
   995     0226                     l949:
   996     0226  0872               	movf	___bmul@multiplicand,w
   997     0227  00FF               	movwf	btemp+1
   998     0228  087F               	movf	btemp+1,w
   999     0229  07F3               	addwf	___bmul@product,f
  1000     022A                     l951:
  1001     022A  1003               	clrc
  1002     022B  0DF2               	rlf	___bmul@multiplicand,f
  1003     022C                     l953:
  1004     022C  1003               	clrc
  1005     022D  0CF4               	rrf	___bmul@multiplier,f
  1006     022E                     l955:
  1007     022E  0874               	movf	___bmul@multiplier,w
  1008     022F  1D03               	btfss	3,2
  1009     0230  2A32               	goto	u431
  1010     0231  2A33               	goto	u430
  1011     0232                     u431:
  1012     0232  2A22               	goto	l947
  1013     0233                     u430:
  1014     0233                     l957:
  1015     0233  0873               	movf	___bmul@product,w
  1016     0234                     l271:
  1017     0234  0008               	return
  1018     0235                     __end_of___bmul:
  1019                           
  1020                           	psect	text5
  1021     0026                     __ptext5:	
  1022 ;; *************** function ___awdiv *****************
  1023 ;; Defined at:
  1024 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
  1025 ;; Parameters:    Size  Location     Type
  1026 ;;  divisor         2    2[COMMON] int 
  1027 ;;  dividend        2    4[COMMON] int 
  1028 ;; Auto vars:     Size  Location     Type
  1029 ;;  quotient        2    8[COMMON] int 
  1030 ;;  sign            1    7[COMMON] unsigned char 
  1031 ;;  counter         1    6[COMMON] unsigned char 
  1032 ;; Return value:  Size  Location     Type
  1033 ;;                  2    2[COMMON] int 
  1034 ;; Registers used:
  1035 ;;		wreg, status,2, status,0, btemp+1
  1036 ;; Tracked objects:
  1037 ;;		On entry : 0/0
  1038 ;;		On exit  : 0/0
  1039 ;;		Unchanged: 0/0
  1040 ;; Data sizes:     COMMON   BANK0   BANK1
  1041 ;;      Params:         4       0       0
  1042 ;;      Locals:         4       0       0
  1043 ;;      Temps:          0       0       0
  1044 ;;      Totals:         8       0       0
  1045 ;;Total ram usage:        8 bytes
  1046 ;; Hardware stack levels used: 1
  1047 ;; Hardware stack levels required when called: 1
  1048 ;; This function calls:
  1049 ;;		Nothing
  1050 ;; This function is called by:
  1051 ;;		_calcDigit
  1052 ;; This function uses a non-reentrant model
  1053 ;;
  1054                           
  1055     0026                     ___awdiv:	
  1056                           ;psect for function ___awdiv
  1057                           
  1058     0026                     l961:	
  1059                           ;incstack = 0
  1060                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  1061                           
  1062     0026  01F7               	clrf	___awdiv@sign
  1063     0027                     l963:
  1064     0027  1FF3               	btfss	___awdiv@divisor+1,7
  1065     0028  282A               	goto	u441
  1066     0029  282B               	goto	u440
  1067     002A                     u441:
  1068     002A  2832               	goto	l969
  1069     002B                     u440:
  1070     002B                     l965:
  1071     002B  09F2               	comf	___awdiv@divisor,f
  1072     002C  09F3               	comf	___awdiv@divisor+1,f
  1073     002D  0AF2               	incf	___awdiv@divisor,f
  1074     002E  1903               	skipnz
  1075     002F  0AF3               	incf	___awdiv@divisor+1,f
  1076     0030                     l967:
  1077     0030  01F7               	clrf	___awdiv@sign
  1078     0031  0AF7               	incf	___awdiv@sign,f
  1079     0032                     l969:
  1080     0032  1FF5               	btfss	___awdiv@dividend+1,7
  1081     0033  2835               	goto	u451
  1082     0034  2836               	goto	u450
  1083     0035                     u451:
  1084     0035  283F               	goto	l975
  1085     0036                     u450:
  1086     0036                     l971:
  1087     0036  09F4               	comf	___awdiv@dividend,f
  1088     0037  09F5               	comf	___awdiv@dividend+1,f
  1089     0038  0AF4               	incf	___awdiv@dividend,f
  1090     0039  1903               	skipnz
  1091     003A  0AF5               	incf	___awdiv@dividend+1,f
  1092     003B                     l973:
  1093     003B  3001               	movlw	1
  1094     003C  00FF               	movwf	btemp+1
  1095     003D  087F               	movf	btemp+1,w
  1096     003E  06F7               	xorwf	___awdiv@sign,f
  1097     003F                     l975:
  1098     003F  01F8               	clrf	___awdiv@quotient
  1099     0040  01F9               	clrf	___awdiv@quotient+1
  1100     0041                     l977:
  1101     0041  0872               	movf	___awdiv@divisor,w
  1102     0042  0473               	iorwf	___awdiv@divisor+1,w
  1103     0043  1903               	btfsc	3,2
  1104     0044  2846               	goto	u461
  1105     0045  2847               	goto	u460
  1106     0046                     u461:
  1107     0046  287E               	goto	l997
  1108     0047                     u460:
  1109     0047                     l979:
  1110     0047  01F6               	clrf	___awdiv@counter
  1111     0048  0AF6               	incf	___awdiv@counter,f
  1112     0049  2855               	goto	l985
  1113     004A                     l981:
  1114     004A  3001               	movlw	1
  1115     004B                     u475:
  1116     004B  1003               	clrc
  1117     004C  0DF2               	rlf	___awdiv@divisor,f
  1118     004D  0DF3               	rlf	___awdiv@divisor+1,f
  1119     004E  3EFF               	addlw	-1
  1120     004F  1D03               	skipz
  1121     0050  284B               	goto	u475
  1122     0051                     l983:
  1123     0051  3001               	movlw	1
  1124     0052  00FF               	movwf	btemp+1
  1125     0053  087F               	movf	btemp+1,w
  1126     0054  07F6               	addwf	___awdiv@counter,f
  1127     0055                     l985:
  1128     0055  1FF3               	btfss	___awdiv@divisor+1,7
  1129     0056  2858               	goto	u481
  1130     0057  2859               	goto	u480
  1131     0058                     u481:
  1132     0058  284A               	goto	l981
  1133     0059                     u480:
  1134     0059                     l987:
  1135     0059  3001               	movlw	1
  1136     005A                     u495:
  1137     005A  1003               	clrc
  1138     005B  0DF8               	rlf	___awdiv@quotient,f
  1139     005C  0DF9               	rlf	___awdiv@quotient+1,f
  1140     005D  3EFF               	addlw	-1
  1141     005E  1D03               	skipz
  1142     005F  285A               	goto	u495
  1143     0060  0873               	movf	___awdiv@divisor+1,w
  1144     0061  0275               	subwf	___awdiv@dividend+1,w
  1145     0062  1D03               	skipz
  1146     0063  2866               	goto	u505
  1147     0064  0872               	movf	___awdiv@divisor,w
  1148     0065  0274               	subwf	___awdiv@dividend,w
  1149     0066                     u505:
  1150     0066  1C03               	skipc
  1151     0067  2869               	goto	u501
  1152     0068  286A               	goto	u500
  1153     0069                     u501:
  1154     0069  2871               	goto	l993
  1155     006A                     u500:
  1156     006A                     l989:
  1157     006A  0872               	movf	___awdiv@divisor,w
  1158     006B  02F4               	subwf	___awdiv@dividend,f
  1159     006C  0873               	movf	___awdiv@divisor+1,w
  1160     006D  1C03               	skipc
  1161     006E  03F5               	decf	___awdiv@dividend+1,f
  1162     006F  02F5               	subwf	___awdiv@dividend+1,f
  1163     0070                     l991:
  1164     0070  1478               	bsf	___awdiv@quotient,0
  1165     0071                     l993:
  1166     0071  3001               	movlw	1
  1167     0072                     u515:
  1168     0072  1003               	clrc
  1169     0073  0CF3               	rrf	___awdiv@divisor+1,f
  1170     0074  0CF2               	rrf	___awdiv@divisor,f
  1171     0075  3EFF               	addlw	-1
  1172     0076  1D03               	skipz
  1173     0077  2872               	goto	u515
  1174     0078                     l995:
  1175     0078  3001               	movlw	1
  1176     0079  02F6               	subwf	___awdiv@counter,f
  1177     007A  1D03               	btfss	3,2
  1178     007B  287D               	goto	u521
  1179     007C  287E               	goto	u520
  1180     007D                     u521:
  1181     007D  2859               	goto	l987
  1182     007E                     u520:
  1183     007E                     l997:
  1184     007E  0877               	movf	___awdiv@sign,w
  1185     007F  1903               	btfsc	3,2
  1186     0080  2882               	goto	u531
  1187     0081  2883               	goto	u530
  1188     0082                     u531:
  1189     0082  2888               	goto	l1001
  1190     0083                     u530:
  1191     0083                     l999:
  1192     0083  09F8               	comf	___awdiv@quotient,f
  1193     0084  09F9               	comf	___awdiv@quotient+1,f
  1194     0085  0AF8               	incf	___awdiv@quotient,f
  1195     0086  1903               	skipnz
  1196     0087  0AF9               	incf	___awdiv@quotient+1,f
  1197     0088                     l1001:
  1198     0088  0879               	movf	___awdiv@quotient+1,w
  1199     0089  00F3               	movwf	?___awdiv+1
  1200     008A  0878               	movf	___awdiv@quotient,w
  1201     008B  00F2               	movwf	?___awdiv
  1202     008C                     l398:
  1203     008C  0008               	return
  1204     008D                     __end_of___awdiv:
  1205                           
  1206                           	psect	text6
  1207     01DA                     __ptext6:	
  1208 ;; *************** function _setup *****************
  1209 ;; Defined at:
  1210 ;;		line 3 in file "main.c"
  1211 ;; Parameters:    Size  Location     Type
  1212 ;;		None
  1213 ;; Auto vars:     Size  Location     Type
  1214 ;;		None
  1215 ;; Return value:  Size  Location     Type
  1216 ;;                  1    wreg      void 
  1217 ;; Registers used:
  1218 ;;		wreg, status,2, status,0
  1219 ;; Tracked objects:
  1220 ;;		On entry : 0/0
  1221 ;;		On exit  : 0/0
  1222 ;;		Unchanged: 0/0
  1223 ;; Data sizes:     COMMON   BANK0   BANK1
  1224 ;;      Params:         0       0       0
  1225 ;;      Locals:         0       0       0
  1226 ;;      Temps:          0       0       0
  1227 ;;      Totals:         0       0       0
  1228 ;;Total ram usage:        0 bytes
  1229 ;; Hardware stack levels used: 1
  1230 ;; Hardware stack levels required when called: 1
  1231 ;; This function calls:
  1232 ;;		Nothing
  1233 ;; This function is called by:
  1234 ;;		_main
  1235 ;; This function uses a non-reentrant model
  1236 ;;
  1237                           
  1238     01DA                     _setup:	
  1239                           ;psect for function _setup
  1240                           
  1241     01DA                     l865:	
  1242                           ;incstack = 0
  1243                           ; Regs used in _setup: [wreg+status,2+status,0]
  1244                           
  1245                           
  1246                           ;main.c: 4:     TRISA = 0xFF;
  1247     01DA  30FF               	movlw	255
  1248     01DB  1683               	bsf	3,5	;RP0=1, select bank1
  1249     01DC  1303               	bcf	3,6	;RP1=0, select bank1
  1250     01DD  0085               	movwf	5	;volatile
  1251     01DE                     l867:
  1252                           
  1253                           ;main.c: 5:     TRISB = 0x00;
  1254     01DE  0186               	clrf	6	;volatile
  1255     01DF                     l869:
  1256                           
  1257                           ;main.c: 6:     TRISC = 0x00;
  1258     01DF  0187               	clrf	7	;volatile
  1259     01E0                     l871:
  1260                           
  1261                           ;main.c: 7:     PORTB = 0;
  1262     01E0  1283               	bcf	3,5	;RP0=0, select bank0
  1263     01E1  1303               	bcf	3,6	;RP1=0, select bank0
  1264     01E2  0186               	clrf	6	;volatile
  1265     01E3                     l873:
  1266                           
  1267                           ;main.c: 8:     PORTC = 0;
  1268     01E3  0187               	clrf	7	;volatile
  1269     01E4                     l875:
  1270                           
  1271                           ;main.c: 10:     T1CON = 0;
  1272     01E4  0190               	clrf	16	;volatile
  1273     01E5                     l877:
  1274                           
  1275                           ;main.c: 11:     T1CONbits.TMR1CS = 0;
  1276     01E5  1090               	bcf	16,1	;volatile
  1277     01E6                     l879:
  1278                           
  1279                           ;main.c: 12:     T1CONbits.TMR1ON = 1;
  1280     01E6  1410               	bsf	16,0	;volatile
  1281     01E7                     l881:
  1282                           
  1283                           ;main.c: 14:     ADCON0 = 0;
  1284     01E7  019F               	clrf	31	;volatile
  1285     01E8                     l883:
  1286                           
  1287                           ;main.c: 15:     ADCON1bits.PCFG = 0b0110;
  1288     01E8  1683               	bsf	3,5	;RP0=1, select bank1
  1289     01E9  1303               	bcf	3,6	;RP1=0, select bank1
  1290     01EA  081F               	movf	31,w	;volatile
  1291     01EB  39F0               	andlw	-16
  1292     01EC  3806               	iorlw	6
  1293     01ED  009F               	movwf	31	;volatile
  1294     01EE                     l885:
  1295                           
  1296                           ;main.c: 17:     PIE1bits.TMR1IE = 1;
  1297     01EE  140C               	bsf	12,0	;volatile
  1298     01EF                     l887:
  1299                           
  1300                           ;main.c: 18:     PEIE = 1;
  1301     01EF  170B               	bsf	11,6	;volatile
  1302     01F0                     l889:
  1303                           
  1304                           ;main.c: 19:     GIE = 1;
  1305     01F0  178B               	bsf	11,7	;volatile
  1306     01F1                     l43:
  1307     01F1  0008               	return
  1308     01F2                     __end_of_setup:
  1309                           
  1310                           	psect	text7
  1311     008D                     __ptext7:	
  1312 ;; *************** function _checkButtons *****************
  1313 ;; Defined at:
  1314 ;;		line 45 in file "buttons.c"
  1315 ;; Parameters:    Size  Location     Type
  1316 ;;		None
  1317 ;; Auto vars:     Size  Location     Type
  1318 ;;		None
  1319 ;; Return value:  Size  Location     Type
  1320 ;;                  1    wreg      void 
  1321 ;; Registers used:
  1322 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1323 ;; Tracked objects:
  1324 ;;		On entry : 0/0
  1325 ;;		On exit  : 0/0
  1326 ;;		Unchanged: 0/0
  1327 ;; Data sizes:     COMMON   BANK0   BANK1
  1328 ;;      Params:         0       0       0
  1329 ;;      Locals:         1       0       0
  1330 ;;      Temps:          1       0       0
  1331 ;;      Totals:         2       0       0
  1332 ;;Total ram usage:        2 bytes
  1333 ;; Hardware stack levels used: 1
  1334 ;; Hardware stack levels required when called: 3
  1335 ;; This function calls:
  1336 ;;		_checkButton
  1337 ;; This function is called by:
  1338 ;;		_main
  1339 ;; This function uses a non-reentrant model
  1340 ;;
  1341                           
  1342     008D                     _checkButtons:	
  1343                           ;psect for function _checkButtons
  1344                           
  1345     008D                     l1107:	
  1346                           ;incstack = 0
  1347                           ; Regs used in _checkButtons: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1348                           
  1349                           
  1350                           ;buttons.c: 46:     button.status = checkButton(PORTAbits.RA0, up1)
  1351     008D  01F6               	clrf	_checkButtons$219
  1352     008E  0AF6               	incf	_checkButtons$219,f
  1353     008F                     l1109:
  1354     008F  3002               	movlw	(low (fp__up1-fpbase))& (0+255)
  1355     0090  00F3               	movwf	checkButton@action
  1356     0091  1283               	bcf	3,5	;RP0=0, select bank0
  1357     0092  1303               	bcf	3,6	;RP1=0, select bank0
  1358     0093  0805               	movf	5,w	;volatile
  1359     0094  3901               	andlw	1
  1360     0095  218F               	fcall	_checkButton
  1361     0096  3A00               	xorlw	0
  1362     0097  1D03               	skipz
  1363     0098  289A               	goto	u721
  1364     0099  289B               	goto	u720
  1365     009A                     u721:
  1366     009A  28DF               	goto	l1123
  1367     009B                     u720:
  1368     009B                     l1111:
  1369     009B  3003               	movlw	(low (fp__up2-fpbase))& (0+255)
  1370     009C  00F3               	movwf	checkButton@action
  1371     009D  1283               	bcf	3,5	;RP0=0, select bank0
  1372     009E  1303               	bcf	3,6	;RP1=0, select bank0
  1373     009F  0C05               	rrf	5,w	;volatile
  1374     00A0  00F5               	movwf	??_checkButtons
  1375     00A1  0C75               	rrf	??_checkButtons,w
  1376     00A2  3901               	andlw	1
  1377     00A3  218F               	fcall	_checkButton
  1378     00A4  3A00               	xorlw	0
  1379     00A5  1D03               	skipz
  1380     00A6  28A8               	goto	u731
  1381     00A7  28A9               	goto	u730
  1382     00A8                     u731:
  1383     00A8  28DF               	goto	l1123
  1384     00A9                     u730:
  1385     00A9                     l1113:
  1386     00A9  3004               	movlw	(low (fp__down1-fpbase))& (0+255)
  1387     00AA  00F3               	movwf	checkButton@action
  1388     00AB  1283               	bcf	3,5	;RP0=0, select bank0
  1389     00AC  1303               	bcf	3,6	;RP1=0, select bank0
  1390     00AD  0C05               	rrf	5,w	;volatile
  1391     00AE  3901               	andlw	1
  1392     00AF  218F               	fcall	_checkButton
  1393     00B0  3A00               	xorlw	0
  1394     00B1  1D03               	skipz
  1395     00B2  28B4               	goto	u741
  1396     00B3  28B5               	goto	u740
  1397     00B4                     u741:
  1398     00B4  28DF               	goto	l1123
  1399     00B5                     u740:
  1400     00B5                     l1115:
  1401     00B5  3005               	movlw	(low (fp__down2-fpbase))& (0+255)
  1402     00B6  00F3               	movwf	checkButton@action
  1403     00B7  1283               	bcf	3,5	;RP0=0, select bank0
  1404     00B8  1303               	bcf	3,6	;RP1=0, select bank0
  1405     00B9  0C05               	rrf	5,w	;volatile
  1406     00BA  00F5               	movwf	??_checkButtons
  1407     00BB  0CF5               	rrf	??_checkButtons,f
  1408     00BC  0C75               	rrf	??_checkButtons,w
  1409     00BD  3901               	andlw	1
  1410     00BE  218F               	fcall	_checkButton
  1411     00BF  3A00               	xorlw	0
  1412     00C0  1D03               	skipz
  1413     00C1  28C3               	goto	u751
  1414     00C2  28C4               	goto	u750
  1415     00C3                     u751:
  1416     00C3  28DF               	goto	l1123
  1417     00C4                     u750:
  1418     00C4                     l1117:
  1419     00C4  3006               	movlw	(low (fp__change-fpbase))& (0+255)
  1420     00C5  00F3               	movwf	checkButton@action
  1421     00C6  1283               	bcf	3,5	;RP0=0, select bank0
  1422     00C7  1303               	bcf	3,6	;RP1=0, select bank0
  1423     00C8  0E05               	swapf	5,w	;volatile
  1424     00C9  3901               	andlw	1
  1425     00CA  218F               	fcall	_checkButton
  1426     00CB  3A00               	xorlw	0
  1427     00CC  1D03               	skipz
  1428     00CD  28CF               	goto	u761
  1429     00CE  28D0               	goto	u760
  1430     00CF                     u761:
  1431     00CF  28DF               	goto	l1123
  1432     00D0                     u760:
  1433     00D0                     l1119:
  1434     00D0  3001               	movlw	(low (fp__win-fpbase))& (0+255)
  1435     00D1  00F3               	movwf	checkButton@action
  1436     00D2  1283               	bcf	3,5	;RP0=0, select bank0
  1437     00D3  1303               	bcf	3,6	;RP1=0, select bank0
  1438     00D4  0E05               	swapf	5,w	;volatile
  1439     00D5  00F5               	movwf	??_checkButtons
  1440     00D6  0C75               	rrf	??_checkButtons,w
  1441     00D7  3901               	andlw	1
  1442     00D8  218F               	fcall	_checkButton
  1443     00D9  3A00               	xorlw	0
  1444     00DA  1D03               	skipz
  1445     00DB  28DD               	goto	u771
  1446     00DC  28DE               	goto	u770
  1447     00DD                     u771:
  1448     00DD  28DF               	goto	l1123
  1449     00DE                     u770:
  1450     00DE                     l1121:
  1451     00DE  01F6               	clrf	_checkButtons$219
  1452     00DF                     l1123:
  1453     00DF  0876               	movf	_checkButtons$219,w
  1454     00E0  00FA               	movwf	_button
  1455     00E1                     l104:
  1456     00E1  0008               	return
  1457     00E2                     __end_of_checkButtons:
  1458                           
  1459                           	psect	text8
  1460     018F                     __ptext8:	
  1461 ;; *************** function _checkButton *****************
  1462 ;; Defined at:
  1463 ;;		line 3 in file "buttons.c"
  1464 ;; Parameters:    Size  Location     Type
  1465 ;;  btn             1    wreg     unsigned char 
  1466 ;;  action          1    3[COMMON] PTR FTN()void 
  1467 ;;		 -> win(1), change(1), down2(1), down1(1), 
  1468 ;;		 -> up2(1), up1(1), 
  1469 ;; Auto vars:     Size  Location     Type
  1470 ;;  btn             1    4[COMMON] unsigned char 
  1471 ;; Return value:  Size  Location     Type
  1472 ;;                  1    wreg      unsigned char 
  1473 ;; Registers used:
  1474 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1475 ;; Tracked objects:
  1476 ;;		On entry : 0/0
  1477 ;;		On exit  : 0/0
  1478 ;;		Unchanged: 0/0
  1479 ;; Data sizes:     COMMON   BANK0   BANK1
  1480 ;;      Params:         1       0       0
  1481 ;;      Locals:         1       0       0
  1482 ;;      Temps:          0       0       0
  1483 ;;      Totals:         2       0       0
  1484 ;;Total ram usage:        2 bytes
  1485 ;; Hardware stack levels used: 1
  1486 ;; Hardware stack levels required when called: 2
  1487 ;; This function calls:
  1488 ;;		_change
  1489 ;;		_down1
  1490 ;;		_down2
  1491 ;;		_up1
  1492 ;;		_up2
  1493 ;;		_win
  1494 ;; This function is called by:
  1495 ;;		_checkButtons
  1496 ;; This function uses a non-reentrant model
  1497 ;;
  1498                           
  1499     018F                     _checkButton:	
  1500                           ;psect for function _checkButton
  1501                           
  1502                           
  1503                           ;incstack = 0
  1504                           ; Regs used in _checkButton: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1505                           ;checkButton@btn stored from wreg
  1506     018F  00F4               	movwf	checkButton@btn
  1507     0190                     l1051:
  1508                           
  1509                           ;buttons.c: 4:     if (!!(btn || btn)) return 0;
  1510     0190  0874               	movf	checkButton@btn,w
  1511     0191  1D03               	btfss	3,2
  1512     0192  2994               	goto	u641
  1513     0193  2995               	goto	u640
  1514     0194                     u641:
  1515     0194  299A               	goto	l1055
  1516     0195                     u640:
  1517     0195                     l1053:
  1518     0195  0874               	movf	checkButton@btn,w
  1519     0196  1903               	btfsc	3,2
  1520     0197  2999               	goto	u651
  1521     0198  299A               	goto	u650
  1522     0199                     u651:
  1523     0199  299C               	goto	l1059
  1524     019A                     u650:
  1525     019A                     l1055:
  1526     019A  3000               	movlw	0
  1527     019B  29B4               	goto	l69
  1528     019C                     l1059:
  1529                           
  1530                           ;buttons.c: 5:     if (button.status == 0) {
  1531     019C  087A               	movf	_button,w
  1532     019D  1D03               	btfss	3,2
  1533     019E  29A0               	goto	u661
  1534     019F  29A1               	goto	u660
  1535     01A0                     u661:
  1536     01A0  29A8               	goto	l1067
  1537     01A1                     u660:
  1538     01A1                     l1061:
  1539                           
  1540                           ;buttons.c: 6:         timers[1] = 100;
  1541     01A1  3000               	movlw	0
  1542     01A2  1283               	bcf	3,5	;RP0=0, select bank0
  1543     01A3  1303               	bcf	3,6	;RP1=0, select bank0
  1544     01A4  00B3               	movwf	_timers+3	;volatile
  1545     01A5  3064               	movlw	100
  1546     01A6  00B2               	movwf	_timers+2	;volatile
  1547     01A7  299A               	goto	l1055
  1548     01A8                     l1067:
  1549                           
  1550                           ;buttons.c: 9:     if (timers[1])return 0;
  1551     01A8  1283               	bcf	3,5	;RP0=0, select bank0
  1552     01A9  1303               	bcf	3,6	;RP1=0, select bank0
  1553     01AA  0832               	movf	_timers+2,w	;volatile
  1554     01AB  0433               	iorwf	_timers+3,w	;volatile
  1555     01AC  1903               	btfsc	3,2
  1556     01AD  29AF               	goto	u671
  1557     01AE  29B0               	goto	u670
  1558     01AF                     u671:
  1559     01AF  29B1               	goto	l1073
  1560     01B0                     u670:
  1561     01B0  299A               	goto	l1055
  1562     01B1                     l1073:
  1563                           
  1564                           ;buttons.c: 11:     action();
  1565     01B1  0873               	movf	checkButton@action,w
  1566     01B2  201A               	fcall	fptable
  1567     01B3  299A               	goto	l1055
  1568     01B4                     l69:
  1569     01B4  0008               	return
  1570     01B5                     __end_of_checkButton:
  1571                           
  1572                           	psect	text9
  1573     01F2                     __ptext9:	
  1574 ;; *************** function _change *****************
  1575 ;; Defined at:
  1576 ;;		line 31 in file "buttons.c"
  1577 ;; Parameters:    Size  Location     Type
  1578 ;;		None
  1579 ;; Auto vars:     Size  Location     Type
  1580 ;;  aux             1    2[COMMON] unsigned char 
  1581 ;; Return value:  Size  Location     Type
  1582 ;;                  1    wreg      void 
  1583 ;; Registers used:
  1584 ;;		wreg
  1585 ;; Tracked objects:
  1586 ;;		On entry : 0/0
  1587 ;;		On exit  : 0/0
  1588 ;;		Unchanged: 0/0
  1589 ;; Data sizes:     COMMON   BANK0   BANK1
  1590 ;;      Params:         0       0       0
  1591 ;;      Locals:         1       0       0
  1592 ;;      Temps:          0       0       0
  1593 ;;      Totals:         1       0       0
  1594 ;;Total ram usage:        1 bytes
  1595 ;; Hardware stack levels used: 1
  1596 ;; Hardware stack levels required when called: 1
  1597 ;; This function calls:
  1598 ;;		Nothing
  1599 ;; This function is called by:
  1600 ;;		_checkButtons
  1601 ;;		_checkButton
  1602 ;; This function uses a non-reentrant model
  1603 ;;
  1604                           
  1605     01F2                     _change:	
  1606                           ;psect for function _change
  1607                           
  1608     01F2                     l1021:	
  1609                           ;incstack = 0
  1610                           ; Regs used in _change: [wreg]
  1611                           
  1612                           
  1613                           ;buttons.c: 32:     if (score.team1 > 0 || score.team2 > 0) return;
  1614     01F2  1283               	bcf	3,5	;RP0=0, select bank0
  1615     01F3  1303               	bcf	3,6	;RP1=0, select bank0
  1616     01F4  082B               	movf	_score,w
  1617     01F5  3A80               	xorlw	128
  1618     01F6  3E7F               	addlw	-129
  1619     01F7  1803               	skipnc
  1620     01F8  29FA               	goto	u581
  1621     01F9  29FB               	goto	u580
  1622     01FA                     u581:
  1623     01FA  2A09               	goto	l93
  1624     01FB                     u580:
  1625     01FB                     l1023:
  1626     01FB  082C               	movf	_score+1,w
  1627     01FC  3A80               	xorlw	128
  1628     01FD  3E7F               	addlw	-129
  1629     01FE  1C03               	skipc
  1630     01FF  2A01               	goto	u591
  1631     0200  2A02               	goto	u590
  1632     0201                     u591:
  1633     0201  2A03               	goto	l1025
  1634     0202                     u590:
  1635     0202  2A09               	goto	l93
  1636     0203                     l1025:
  1637                           
  1638                           ;buttons.c: 33:     char aux = score.win1;
  1639     0203  082D               	movf	_score+2,w
  1640     0204  00F2               	movwf	change@aux
  1641                           
  1642                           ;buttons.c: 34:     score.win1 = score.win2;
  1643     0205  082E               	movf	_score+3,w
  1644     0206  00AD               	movwf	_score+2
  1645                           
  1646                           ;buttons.c: 35:     score.win2 = aux;
  1647     0207  0872               	movf	change@aux,w
  1648     0208  00AE               	movwf	_score+3
  1649     0209                     l93:
  1650     0209  0008               	return
  1651     020A                     __end_of_change:
  1652                           
  1653                           	psect	text10
  1654     0268                     __ptext10:	
  1655 ;; *************** function _down2 *****************
  1656 ;; Defined at:
  1657 ;;		line 27 in file "buttons.c"
  1658 ;; Parameters:    Size  Location     Type
  1659 ;;		None
  1660 ;; Auto vars:     Size  Location     Type
  1661 ;;		None
  1662 ;; Return value:  Size  Location     Type
  1663 ;;                  1    wreg      void 
  1664 ;; Registers used:
  1665 ;;		wreg, status,2, status,0, btemp+1
  1666 ;; Tracked objects:
  1667 ;;		On entry : 0/0
  1668 ;;		On exit  : 0/0
  1669 ;;		Unchanged: 0/0
  1670 ;; Data sizes:     COMMON   BANK0   BANK1
  1671 ;;      Params:         0       0       0
  1672 ;;      Locals:         0       0       0
  1673 ;;      Temps:          0       0       0
  1674 ;;      Totals:         0       0       0
  1675 ;;Total ram usage:        0 bytes
  1676 ;; Hardware stack levels used: 1
  1677 ;; Hardware stack levels required when called: 1
  1678 ;; This function calls:
  1679 ;;		Nothing
  1680 ;; This function is called by:
  1681 ;;		_checkButtons
  1682 ;;		_checkButton
  1683 ;; This function uses a non-reentrant model
  1684 ;;
  1685                           
  1686     0268                     _down2:	
  1687                           ;psect for function _down2
  1688                           
  1689     0268                     l1017:	
  1690                           ;incstack = 0
  1691                           ; Regs used in _down2: [wreg+status,2+status,0+btemp+1]
  1692                           
  1693                           
  1694                           ;buttons.c: 28:     if (--score.team2 < 0) score.team2 = 0;
  1695     0268  30FF               	movlw	255
  1696     0269  00FF               	movwf	btemp+1
  1697     026A  087F               	movf	btemp+1,w
  1698     026B  1283               	bcf	3,5	;RP0=0, select bank0
  1699     026C  1303               	bcf	3,6	;RP1=0, select bank0
  1700     026D  07AC               	addwf	_score+1,f
  1701     026E  1FAC               	btfss	_score+1,7
  1702     026F  2A71               	goto	u571
  1703     0270  2A72               	goto	u570
  1704     0271                     u571:
  1705     0271  2A73               	goto	l87
  1706     0272                     u570:
  1707     0272                     l1019:
  1708     0272  01AC               	clrf	_score+1
  1709     0273                     l87:
  1710     0273  0008               	return
  1711     0274                     __end_of_down2:
  1712                           
  1713                           	psect	text11
  1714     0274                     __ptext11:	
  1715 ;; *************** function _down1 *****************
  1716 ;; Defined at:
  1717 ;;		line 23 in file "buttons.c"
  1718 ;; Parameters:    Size  Location     Type
  1719 ;;		None
  1720 ;; Auto vars:     Size  Location     Type
  1721 ;;		None
  1722 ;; Return value:  Size  Location     Type
  1723 ;;                  1    wreg      void 
  1724 ;; Registers used:
  1725 ;;		wreg, status,2, status,0, btemp+1
  1726 ;; Tracked objects:
  1727 ;;		On entry : 0/0
  1728 ;;		On exit  : 0/0
  1729 ;;		Unchanged: 0/0
  1730 ;; Data sizes:     COMMON   BANK0   BANK1
  1731 ;;      Params:         0       0       0
  1732 ;;      Locals:         0       0       0
  1733 ;;      Temps:          0       0       0
  1734 ;;      Totals:         0       0       0
  1735 ;;Total ram usage:        0 bytes
  1736 ;; Hardware stack levels used: 1
  1737 ;; Hardware stack levels required when called: 1
  1738 ;; This function calls:
  1739 ;;		Nothing
  1740 ;; This function is called by:
  1741 ;;		_checkButtons
  1742 ;;		_checkButton
  1743 ;; This function uses a non-reentrant model
  1744 ;;
  1745                           
  1746     0274                     _down1:	
  1747                           ;psect for function _down1
  1748                           
  1749     0274                     l1013:	
  1750                           ;incstack = 0
  1751                           ; Regs used in _down1: [wreg+status,2+status,0+btemp+1]
  1752                           
  1753                           
  1754                           ;buttons.c: 24:     if (--score.team1 < 0) score.team1 = 0;
  1755     0274  30FF               	movlw	255
  1756     0275  00FF               	movwf	btemp+1
  1757     0276  087F               	movf	btemp+1,w
  1758     0277  1283               	bcf	3,5	;RP0=0, select bank0
  1759     0278  1303               	bcf	3,6	;RP1=0, select bank0
  1760     0279  07AB               	addwf	_score,f
  1761     027A  1FAB               	btfss	_score,7
  1762     027B  2A7D               	goto	u561
  1763     027C  2A7E               	goto	u560
  1764     027D                     u561:
  1765     027D  2A7F               	goto	l83
  1766     027E                     u560:
  1767     027E                     l1015:
  1768     027E  01AB               	clrf	_score
  1769     027F                     l83:
  1770     027F  0008               	return
  1771     0280                     __end_of_down1:
  1772                           
  1773                           	psect	text12
  1774     0248                     __ptext12:	
  1775 ;; *************** function _up2 *****************
  1776 ;; Defined at:
  1777 ;;		line 19 in file "buttons.c"
  1778 ;; Parameters:    Size  Location     Type
  1779 ;;		None
  1780 ;; Auto vars:     Size  Location     Type
  1781 ;;		None
  1782 ;; Return value:  Size  Location     Type
  1783 ;;                  1    wreg      void 
  1784 ;; Registers used:
  1785 ;;		wreg, status,2, status,0, btemp+1
  1786 ;; Tracked objects:
  1787 ;;		On entry : 0/0
  1788 ;;		On exit  : 0/0
  1789 ;;		Unchanged: 0/0
  1790 ;; Data sizes:     COMMON   BANK0   BANK1
  1791 ;;      Params:         0       0       0
  1792 ;;      Locals:         0       0       0
  1793 ;;      Temps:          0       0       0
  1794 ;;      Totals:         0       0       0
  1795 ;;Total ram usage:        0 bytes
  1796 ;; Hardware stack levels used: 1
  1797 ;; Hardware stack levels required when called: 1
  1798 ;; This function calls:
  1799 ;;		Nothing
  1800 ;; This function is called by:
  1801 ;;		_checkButtons
  1802 ;;		_checkButton
  1803 ;; This function uses a non-reentrant model
  1804 ;;
  1805                           
  1806     0248                     _up2:	
  1807                           ;psect for function _up2
  1808                           
  1809     0248                     l1009:	
  1810                           ;incstack = 0
  1811                           ; Regs used in _up2: [wreg+status,2+status,0+btemp+1]
  1812                           
  1813                           
  1814                           ;buttons.c: 20:     if (++score.team2 > 99) score.team2 = 99;
  1815     0248  3001               	movlw	1
  1816     0249  00FF               	movwf	btemp+1
  1817     024A  087F               	movf	btemp+1,w
  1818     024B  1283               	bcf	3,5	;RP0=0, select bank0
  1819     024C  1303               	bcf	3,6	;RP1=0, select bank0
  1820     024D  07AC               	addwf	_score+1,f
  1821     024E  082C               	movf	_score+1,w
  1822     024F  3A80               	xorlw	128
  1823     0250  3E1C               	addlw	-228
  1824     0251  1C03               	skipc
  1825     0252  2A54               	goto	u551
  1826     0253  2A55               	goto	u550
  1827     0254                     u551:
  1828     0254  2A57               	goto	l79
  1829     0255                     u550:
  1830     0255                     l1011:
  1831     0255  3063               	movlw	99
  1832     0256  00AC               	movwf	_score+1
  1833     0257                     l79:
  1834     0257  0008               	return
  1835     0258                     __end_of_up2:
  1836                           
  1837                           	psect	text13
  1838     0258                     __ptext13:	
  1839 ;; *************** function _up1 *****************
  1840 ;; Defined at:
  1841 ;;		line 15 in file "buttons.c"
  1842 ;; Parameters:    Size  Location     Type
  1843 ;;		None
  1844 ;; Auto vars:     Size  Location     Type
  1845 ;;		None
  1846 ;; Return value:  Size  Location     Type
  1847 ;;                  1    wreg      void 
  1848 ;; Registers used:
  1849 ;;		wreg, status,2, status,0, btemp+1
  1850 ;; Tracked objects:
  1851 ;;		On entry : 0/0
  1852 ;;		On exit  : 0/0
  1853 ;;		Unchanged: 0/0
  1854 ;; Data sizes:     COMMON   BANK0   BANK1
  1855 ;;      Params:         0       0       0
  1856 ;;      Locals:         0       0       0
  1857 ;;      Temps:          0       0       0
  1858 ;;      Totals:         0       0       0
  1859 ;;Total ram usage:        0 bytes
  1860 ;; Hardware stack levels used: 1
  1861 ;; Hardware stack levels required when called: 1
  1862 ;; This function calls:
  1863 ;;		Nothing
  1864 ;; This function is called by:
  1865 ;;		_checkButtons
  1866 ;;		_checkButton
  1867 ;; This function uses a non-reentrant model
  1868 ;;
  1869                           
  1870     0258                     _up1:	
  1871                           ;psect for function _up1
  1872                           
  1873     0258                     l1005:	
  1874                           ;incstack = 0
  1875                           ; Regs used in _up1: [wreg+status,2+status,0+btemp+1]
  1876                           
  1877                           
  1878                           ;buttons.c: 16:     if (++score.team1 > 99) score.team1 = 99;
  1879     0258  3001               	movlw	1
  1880     0259  00FF               	movwf	btemp+1
  1881     025A  087F               	movf	btemp+1,w
  1882     025B  1283               	bcf	3,5	;RP0=0, select bank0
  1883     025C  1303               	bcf	3,6	;RP1=0, select bank0
  1884     025D  07AB               	addwf	_score,f
  1885     025E  082B               	movf	_score,w
  1886     025F  3A80               	xorlw	128
  1887     0260  3E1C               	addlw	-228
  1888     0261  1C03               	skipc
  1889     0262  2A64               	goto	u541
  1890     0263  2A65               	goto	u540
  1891     0264                     u541:
  1892     0264  2A67               	goto	l75
  1893     0265                     u540:
  1894     0265                     l1007:
  1895     0265  3063               	movlw	99
  1896     0266  00AB               	movwf	_score
  1897     0267                     l75:
  1898     0267  0008               	return
  1899     0268                     __end_of_up1:
  1900                           
  1901                           	psect	text14
  1902     0167                     __ptext14:	
  1903 ;; *************** function _win *****************
  1904 ;; Defined at:
  1905 ;;		line 38 in file "buttons.c"
  1906 ;; Parameters:    Size  Location     Type
  1907 ;;		None
  1908 ;; Auto vars:     Size  Location     Type
  1909 ;;		None
  1910 ;; Return value:  Size  Location     Type
  1911 ;;                  1    wreg      void 
  1912 ;; Registers used:
  1913 ;;		wreg, status,2, status,0, btemp+1
  1914 ;; Tracked objects:
  1915 ;;		On entry : 0/0
  1916 ;;		On exit  : 0/0
  1917 ;;		Unchanged: 0/0
  1918 ;; Data sizes:     COMMON   BANK0   BANK1
  1919 ;;      Params:         0       0       0
  1920 ;;      Locals:         0       0       0
  1921 ;;      Temps:          1       0       0
  1922 ;;      Totals:         1       0       0
  1923 ;;Total ram usage:        1 bytes
  1924 ;; Hardware stack levels used: 1
  1925 ;; Hardware stack levels required when called: 1
  1926 ;; This function calls:
  1927 ;;		Nothing
  1928 ;; This function is called by:
  1929 ;;		_checkButtons
  1930 ;;		_checkButton
  1931 ;; This function uses a non-reentrant model
  1932 ;;
  1933                           
  1934     0167                     _win:	
  1935                           ;psect for function _win
  1936                           
  1937     0167                     l1027:	
  1938                           ;incstack = 0
  1939                           ; Regs used in _win: [wreg+status,2+status,0+btemp+1]
  1940                           
  1941                           
  1942                           ;buttons.c: 39:     if (score.team1 == score.team2) return;
  1943     0167  1283               	bcf	3,5	;RP0=0, select bank0
  1944     0168  1303               	bcf	3,6	;RP1=0, select bank0
  1945     0169  082C               	movf	_score+1,w
  1946     016A  062B               	xorwf	_score,w
  1947     016B  1D03               	skipz
  1948     016C  296E               	goto	u601
  1949     016D  296F               	goto	u600
  1950     016E                     u601:
  1951     016E  2970               	goto	l1031
  1952     016F                     u600:
  1953     016F  298E               	goto	l97
  1954     0170                     l1031:
  1955                           
  1956                           ;buttons.c: 40:     if (score.team1 > score.team2) score.win1++;
  1957     0170  082C               	movf	_score+1,w
  1958     0171  3A80               	xorlw	128
  1959     0172  00F2               	movwf	??_win
  1960     0173  082B               	movf	_score,w
  1961     0174  3A80               	xorlw	128
  1962     0175  02F2               	subwf	??_win,f
  1963     0176  1803               	skipnc
  1964     0177  2979               	goto	u611
  1965     0178  297A               	goto	u610
  1966     0179                     u611:
  1967     0179  297E               	goto	l1035
  1968     017A                     u610:
  1969     017A                     l1033:
  1970     017A  3001               	movlw	1
  1971     017B  00FF               	movwf	btemp+1
  1972     017C  087F               	movf	btemp+1,w
  1973     017D  07AD               	addwf	_score+2,f
  1974     017E                     l1035:
  1975                           
  1976                           ;buttons.c: 41:     if (score.team2 > score.team1) score.win2++;
  1977     017E  082B               	movf	_score,w
  1978     017F  3A80               	xorlw	128
  1979     0180  00F2               	movwf	??_win
  1980     0181  082C               	movf	_score+1,w
  1981     0182  3A80               	xorlw	128
  1982     0183  02F2               	subwf	??_win,f
  1983     0184  1803               	skipnc
  1984     0185  2987               	goto	u621
  1985     0186  2988               	goto	u620
  1986     0187                     u621:
  1987     0187  298C               	goto	l1039
  1988     0188                     u620:
  1989     0188                     l1037:
  1990     0188  3001               	movlw	1
  1991     0189  00FF               	movwf	btemp+1
  1992     018A  087F               	movf	btemp+1,w
  1993     018B  07AE               	addwf	_score+3,f
  1994     018C                     l1039:
  1995                           
  1996                           ;buttons.c: 42:     score.team1 = score.team2 = 0;
  1997     018C  01AC               	clrf	_score+1
  1998     018D  01AB               	clrf	_score
  1999     018E                     l97:
  2000     018E  0008               	return
  2001     018F                     __end_of_win:
  2002                           
  2003                           	psect	text15
  2004     0114                     __ptext15:	
  2005 ;; *************** function _isr *****************
  2006 ;; Defined at:
  2007 ;;		line 3 in file "interrupt.c"
  2008 ;; Parameters:    Size  Location     Type
  2009 ;;		None
  2010 ;; Auto vars:     Size  Location     Type
  2011 ;;		None
  2012 ;; Return value:  Size  Location     Type
  2013 ;;                  1    wreg      void 
  2014 ;; Registers used:
  2015 ;;		wreg, status,2, status,0
  2016 ;; Tracked objects:
  2017 ;;		On entry : 0/0
  2018 ;;		On exit  : 0/0
  2019 ;;		Unchanged: 0/0
  2020 ;; Data sizes:     COMMON   BANK0   BANK1
  2021 ;;      Params:         0       0       0
  2022 ;;      Locals:         0       0       0
  2023 ;;      Temps:          2       0       0
  2024 ;;      Totals:         2       0       0
  2025 ;;Total ram usage:        2 bytes
  2026 ;; Hardware stack levels used: 1
  2027 ;; This function calls:
  2028 ;;		Nothing
  2029 ;; This function is called by:
  2030 ;;		Interrupt level 1
  2031 ;; This function uses a non-reentrant model
  2032 ;;
  2033                           
  2034     0114                     _isr:	
  2035                           ;psect for function _isr
  2036                           
  2037     0114                     i1l1147:
  2038                           
  2039                           ;interrupt.c: 4:     if (PIR1bits.TMR1IF) {
  2040     0114  1283               	bcf	3,5	;RP0=0, select bank0
  2041     0115  1303               	bcf	3,6	;RP1=0, select bank0
  2042     0116  1C0C               	btfss	12,0	;volatile
  2043     0117  2919               	goto	u80_21
  2044     0118  291A               	goto	u80_20
  2045     0119                     u80_21:
  2046     0119  2937               	goto	i1l159
  2047     011A                     u80_20:
  2048     011A                     i1l1149:
  2049                           
  2050                           ;interrupt.c: 5:         PIR1bits.TMR1IF = 0;
  2051     011A  100C               	bcf	12,0	;volatile
  2052     011B                     i1l1151:
  2053                           
  2054                           ;interrupt.c: 6:         if (timers[0]) timers[0]--;
  2055     011B  0830               	movf	_timers,w	;volatile
  2056     011C  0431               	iorwf	_timers+1,w	;volatile
  2057     011D  1903               	btfsc	3,2
  2058     011E  2920               	goto	u81_21
  2059     011F  2921               	goto	u81_20
  2060     0120                     u81_21:
  2061     0120  2927               	goto	i1l1155
  2062     0121                     u81_20:
  2063     0121                     i1l1153:
  2064     0121  3001               	movlw	1
  2065     0122  02B0               	subwf	_timers,f	;volatile
  2066     0123  3000               	movlw	0
  2067     0124  1C03               	skipc
  2068     0125  03B1               	decf	_timers+1,f	;volatile
  2069     0126  02B1               	subwf	_timers+1,f	;volatile
  2070     0127                     i1l1155:
  2071                           
  2072                           ;interrupt.c: 7:         if (timers[1]) timers[1]--;
  2073     0127  0832               	movf	_timers+2,w	;volatile
  2074     0128  0433               	iorwf	_timers+3,w	;volatile
  2075     0129  1903               	btfsc	3,2
  2076     012A  292C               	goto	u82_21
  2077     012B  292D               	goto	u82_20
  2078     012C                     u82_21:
  2079     012C  2933               	goto	i1l1159
  2080     012D                     u82_20:
  2081     012D                     i1l1157:
  2082     012D  3001               	movlw	1
  2083     012E  02B2               	subwf	_timers+2,f	;volatile
  2084     012F  3000               	movlw	0
  2085     0130  1C03               	skipc
  2086     0131  03B3               	decf	_timers+3,f	;volatile
  2087     0132  02B3               	subwf	_timers+3,f	;volatile
  2088     0133                     i1l1159:
  2089                           
  2090                           ;interrupt.c: 8:         TMR1 = 65535 - 3200;
  2091     0133  30F3               	movlw	243
  2092     0134  008F               	movwf	15	;volatile
  2093     0135  307F               	movlw	127
  2094     0136  008E               	movwf	14	;volatile
  2095     0137                     i1l159:
  2096     0137  0871               	movf	??_isr+1,w
  2097     0138  008A               	movwf	10
  2098     0139  0E70               	swapf	??_isr,w
  2099     013A  0083               	movwf	3
  2100     013B  0EFE               	swapf	btemp,f
  2101     013C  0E7E               	swapf	btemp,w
  2102     013D  0009               	retfie
  2103     013E                     __end_of_isr:
  2104     000C                     
  2105                           	psect	intentry
  2106     0004                     __pintentry:	
  2107                           ;incstack = 0
  2108                           ; Regs used in _isr: [wreg+status,2+status,0]
  2109                           
  2110     0004                     interrupt_function:
  2111     007E                     saved_w	set	btemp
  2112     0004  00FE               	movwf	btemp
  2113     0005  0E03               	swapf	3,w
  2114     0006  00F0               	movwf	??_isr
  2115     0007  080A               	movf	10,w
  2116     0008  00F1               	movwf	??_isr+1
  2117     0009  2914               	ljmp	_isr
  2118                           
  2119                           	psect	functab
  2120     001A                     __pfunctab:
  2121     001A                     __fptable:
  2122     001A                     fptable:
  2123     001A  00FF               	movwf	(btemp+1)& (0+127)
  2124     001B  3000               	movlw	high fptable
  2125     001C  008A               	movwf	10
  2126     001D  087F               	movf	(btemp+1)& (0+127),w
  2127     001E  0782               	addwf	2,f
  2128     001F                     fpbase:
  2129     001F  281F               	goto	fpbase	; Call via a null pointer and you will get stuck here.
  2130     0020                     fp__win:
  2131     0020  2967               	ljmp	_win
  2132     0021                     fp__up1:
  2133     0021  2A58               	ljmp	_up1
  2134     0022                     fp__up2:
  2135     0022  2A48               	ljmp	_up2
  2136     0023                     fp__down1:
  2137     0023  2A74               	ljmp	_down1
  2138     0024                     fp__down2:
  2139     0024  2A68               	ljmp	_down2
  2140     0025                     fp__change:
  2141     0025  29F2               	ljmp	_change
  2142     0026                     __end_of__fptable:
  2143     007E                     btemp	set	126	;btemp
  2144     007E                     wtemp0	set	126
  2145                           
  2146                           	psect	config
  2147                           
  2148                           ;Config register CONFIG @ 0x2007
  2149                           ;	Oscillator Selection bits
  2150                           ;	FOSC = HS, HS oscillator
  2151                           ;	Watchdog Timer Enable bit
  2152                           ;	WDTE = OFF, WDT disabled
  2153                           ;	Power-up Timer Enable bit
  2154                           ;	PWRTE = OFF, PWRT disabled
  2155                           ;	FLASH Program Memory Code Protection bits
  2156                           ;	CP = OFF, Code protection off
  2157                           ;	Brown-out Reset Enable bit
  2158                           ;	BOREN = OFF, BOR disabled
  2159                           ;	Low Voltage In-Circuit Serial Programming Enable bit
  2160                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  2161                           ;	Data EE Memory Code Protection
  2162                           ;	CPD = OFF, Code Protection off
  2163                           ;	FLASH Program Memory Write Enable
  2164                           ;	WRT = ALL, Unprotected program memory may be written to by EECON control
  2165                           ;	In-Circuit Debugger Mode bit
  2166                           ;	DEBUG = 0x1, unprogrammed default
  2167     2007                     	org	8199
  2168     2007  3F3A               	dw	16186

Data Sizes:
    Strings     0
    Constant    16
    Data        0
    BSS         11
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     11      20
    BANK1            32      0       0

Pointer List with Targets:

    checkButton@action	PTR FTN()void  size(1) Largest target is 1
		 -> change(), down1(), down2(), up1(), 
		 -> up2(), win(), 


Critical Paths under _main in COMMON

    _calcDigit->___awdiv
    _checkButtons->_checkButton
    _checkButton->_change
    _checkButton->_win

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _getNumber->_calcDigit

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1598
                                              8 BANK0      3     3      0
                       _checkButtons
                              _setup
                      _updateDisplay
 ---------------------------------------------------------------------------------
 (1) _updateDisplay                                        0     0      0    1029
                          _getNumber
 ---------------------------------------------------------------------------------
 (2) _getNumber                                            0     0      0    1029
                          _calcDigit
 ---------------------------------------------------------------------------------
 (3) _calcDigit                                            8     7      1    1029
                                              0 BANK0      8     7      1
                            ___awdiv
                             ___bmul
 ---------------------------------------------------------------------------------
 (4) ___bmul                                               3     2      1     168
                                              2 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     452
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checkButtons                                         2     2      0     569
                                              5 COMMON     2     2      0
                        _checkButton
 ---------------------------------------------------------------------------------
 (2) _checkButton                                          2     1      1     545
                                              3 COMMON     2     1      1
                             _change *
                              _down1 *
                              _down2 *
                                _up1 *
                                _up2 *
                                _win *
 ---------------------------------------------------------------------------------
 (3) _win                                                  1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _up2                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _up1                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _down2                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _down1                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _change                                               1     1      0      23
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _checkButtons
     _checkButton
       _change *
       _down1 *
       _down2 *
       _up1 *
       _up2 *
       _win *
   _setup
   _updateDisplay
     _getNumber
       _calcDigit
         ___awdiv
         ___bmul

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA              40      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      20       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      B      14       5       25.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            20      0       0       6        0.0%
BANK1               20      0       0       7        0.0%
DATA                 0      0      20       8        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Thu Jul 18 18:19:26 2024

   __end_of_checkButtons 00E2                        pc 0002           ___bmul@product 0073  
                     l43 01F1                       l75 0267                       l83 027F  
                     l93 0209                       l69 01B4                       l79 0257  
                     l87 0273                       l97 018E             ___awdiv@sign 0077  
                     fsr 0004                      l104 00E1                      l124 0112  
                    l125 0113                      l136 01D9                      l129 0166  
                    l271 0234                      l398 008C                      l871 01E0  
                    l951 022A                      l881 01E7                      l873 01E3  
                    l865 01DA                      l961 0026                      l953 022C  
                    l945 0221                      l883 01E8                      l875 01E4  
                    l867 01DE                      l971 0036                      l963 0027  
                    l955 022E                      l947 0222                      l885 01EE  
                    l877 01E5                      l869 01DF                      l981 004A  
                    l973 003B                      l965 002B                      l957 0233  
                    l949 0226                      l887 01EF                      l879 01E6  
                    l991 0070                      l983 0051                      l975 003F  
                    l967 0030                      l889 01F0                      l993 0071  
                    l985 0055                      l977 0041                      l969 0032  
                    l995 0078                      l987 0059                      l979 0047  
                    _GIE 005F                      l989 006A                      l997 007E  
                    l999 0083                      u500 006A                      u420 0226  
                    u501 0069                      u421 0225                      u430 0233  
                    u431 0232                      u600 016F                      u520 007E  
                    u440 002B                      u601 016E                      u521 007D  
                    u505 0066                      u441 002A                      u610 017A  
                    u530 0083                      u450 0036                      u611 0179  
                    u531 0082                      u515 0072                      u451 0035  
                    u620 0188                      u540 0265                      u460 0047  
                    u621 0187                      u541 0264                      u461 0046  
                    u550 0255                      u551 0254                      u560 027E  
                    u640 0195                      u720 009B                      u480 0059  
                    u561 027D                      u641 0194                      u721 009A  
                    u481 0058                      u570 0272                      u650 019A  
                    u730 00A9                      u571 0271                      u651 0199  
                    u731 00A8                      u475 004B                      u580 01FB  
                    u660 01A1                      u740 00B5                      u581 01FA  
                    u661 01A0                      u741 00B4                      u590 0202  
                    u670 01B0                      u750 00C4                      u830 0103  
                    u591 0201                      u671 01AF                      u751 00C3  
                    u495 005A                      u831 0102                      u760 00D0  
                    u840 0146                      u761 00CF                      u841 0145  
                    u770 00DE                      u850 0150                      u771 00DD  
                    u851 014F                      u907 023E                      u860 015B  
                    u861 015A                      u870 0163                      u871 0162  
                    u880 01BD                      u881 01BC                      u890 01CC  
                    u891 01CB                      _up1 0258                      _up2 0248  
                    _isr 0114                      fsr0 0004                      _win 0167  
                   l1001 0088                     l1011 0255                     l1005 0258  
                   l1013 0274                     l1021 01F2                     l1031 0170  
                   l1007 0265                     l1015 027E                     l1023 01FB  
                   l1111 009B                     l1033 017A                     l1009 0248  
                   l1017 0268                     l1025 0203                     l1121 00DE  
                   l1113 00A9                     l1035 017E                     l1027 0167  
                   l1019 0272                     l1051 0190                     l1115 00B5  
                   l1123 00DF                     l1107 008D                     l1211 01D4  
                   l1203 01BE                     l1037 0188                     l1061 01A1  
                   l1053 0195                     l1117 00C4                     l1109 008F  
                   l1205 01C2                     l1213 0235                     l1039 018C  
                   l1055 019A                     l1119 00D0                     l1207 01CC  
                   l1215 0236                     l1073 01B1                     l1161 00E5  
                   l1209 01CD                     l1217 0244                     l1067 01A8  
                   l1059 019C                     l1163 00FD                     l1171 013E  
                   l1219 0245                     l1165 0103                     l1173 0146  
                   l1167 010B                     l1191 0163                     l1183 0155  
                   l1185 015B                     l1177 014A                     l1195 0165  
                   l1179 0150                     l1189 015D                     l1199 01B5  
                   ?_up1 0070                     ?_up2 0070                     ?_isr 0070  
                   ?_win 0070                     _PEIE 005E                     _TMR1 000E  
         ?_updateDisplay 0070          __end_of_NUMBERS 021A                     _main 0235  
                   btemp 007E                     start 000A        ___bmul@multiplier 0074  
                  ??_up1 0072                    ??_up2 0072                    ??_isr 0070  
                  ??_win 0072                    ?_main 0070          __end_of___awdiv 008D  
        ___awdiv@divisor 0072                    _T1CON 0010                    i1l159 0137  
        ___awdiv@counter 0076                    _PORTB 0006                    _PORTC 0007  
                  u80_20 011A                    u80_21 0119                    u81_20 0121  
                  u81_21 0120                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    u82_20 012D                    u82_21 012C  
                  _down1 0274                    _down2 0268                    _score 002B  
                  _setup 01DA                    fpbase 001F                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000B  
           __end_of_main 0248                   ??_main 0028                   _ADCON0 001F  
                 ?_down1 0070                   ?_down2 0070          ??_updateDisplay 007A  
       ___awdiv@dividend 0074                   ?_setup 0070                   _DIGITS 021A  
                 i1l1151 011B                   i1l1153 0121                   i1l1155 0127  
                 i1l1147 0114                   i1l1157 012D                   i1l1149 011A  
                 i1l1159 0133         __end_of__fptable 0026                   ___bmul 0220  
              ??___awdiv 0076                   _change 01F2                   _button 007A  
       ___awdiv@quotient 0078                   _timers 0030                   fp__up1 0021  
                 fp__up2 0022                   fp__win 0020                   fptable 001A  
                 fptotal 000C                   saved_w 007E            _calcDigit$241 0024  
           _checkButtons 008D  __end_of__initialization 0018      ___bmul@multiplicand 0072  
         __pcstackCOMMON 0070            __end_of_down1 0280            __end_of_down2 0274  
          __end_of_setup 01F2                  ??_down1 0072                  ??_down2 0072  
                ??_setup 0072               __pbssBANK0 002B               __pmaintext 0235  
                ?___bmul 0072                  ?_change 0070               __pintentry 0004  
             calcDigit@d 0027               calcDigit@u 0023        __end_of_calcDigit 0114  
                _NUMBERS 0210               __stringtab 020A        __end_of_getNumber 0167  
                ___awdiv 0026            ??_checkButton 0074                  __ptext1 01B5  
                __ptext2 013E                  __ptext3 00E2                  __ptext4 0220  
                __ptext5 0026                  __ptext6 01DA                  __ptext7 008D  
                __ptext8 018F                  __ptext9 01F2                _T1CONbits 0010  
         checkButton@btn 0074        checkButton@action 0073     end_of_initialization 0018  
              _PORTAbits 0005      __end_of_checkButton 01B5    __end_of_updateDisplay 01DA  
         __end_of_DIGITS 0220           calcDigit@digit 0020           calcDigit@value 0026  
         __end_of___bmul 0235           __end_of_change 020A      start_initialization 000B  
            __end_of_up1 0268              __end_of_up2 0258              __end_of_isr 013E  
            __end_of_win 018F                 ??___bmul 0073                 ??_change 0072  
            _checkButton 018F              __pbssCOMMON 007A                ___latbits 0000  
          __pcstackBANK0 0020        __size_of__fptable 000C                _calcDigit 00E2  
              __pfunctab 001A                 ?___awdiv 0072                _getNumber 013E  
              __pstrings 020A                change@aux 0072               ?_calcDigit 0020  
      interrupt_function 0004                 _PIE1bits 008C                 _PIR1bits 000C  
             ?_getNumber 0070                fp__change 0025              __stringbase 020F  
             _ADCON1bits 009F            ?_checkButtons 0070         _checkButtons$219 0076  
     __end_of__stringtab 0210                 __fptable 001A           ??_checkButtons 0075  
               __ptext10 0268                 __ptext11 0274                 __ptext12 0248  
               __ptext13 0258                 __ptext14 0167                 __ptext15 0114  
            ??_calcDigit 0021                 fp__down1 0023                 fp__down2 0024  
            ??_getNumber 007A             ?_checkButton 0073                 intlevel1 001A  
              stringcode 020A                 stringdir 020A                 stringtab 020A  
          _updateDisplay 01B5  
