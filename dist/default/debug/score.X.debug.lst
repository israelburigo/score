

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Mon Jul 22 13:57:23 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F870
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	intentry,global,class=CODE,delta=2
    27                           	psect	functab,global,class=ENTRY,delta=2
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    29                           	dabs	1,0x7E,2
    30     0000                     
    31                           ; Generated 12/10/2023 GMT
    32                           ; 
    33                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution. Publication is not required when
    47                           ;        this file is used in an embedded application.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F870 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65     0000                     	;# 
    66     0001                     	;# 
    67     0002                     	;# 
    68     0003                     	;# 
    69     0004                     	;# 
    70     0005                     	;# 
    71     0006                     	;# 
    72     0007                     	;# 
    73     000A                     	;# 
    74     000B                     	;# 
    75     000C                     	;# 
    76     000D                     	;# 
    77     000E                     	;# 
    78     000E                     	;# 
    79     000F                     	;# 
    80     0010                     	;# 
    81     0011                     	;# 
    82     0012                     	;# 
    83     0015                     	;# 
    84     0015                     	;# 
    85     0016                     	;# 
    86     0017                     	;# 
    87     0018                     	;# 
    88     0019                     	;# 
    89     001A                     	;# 
    90     001E                     	;# 
    91     001F                     	;# 
    92     0081                     	;# 
    93     0085                     	;# 
    94     0086                     	;# 
    95     0087                     	;# 
    96     008C                     	;# 
    97     008D                     	;# 
    98     008E                     	;# 
    99     0092                     	;# 
   100     0098                     	;# 
   101     0099                     	;# 
   102     009E                     	;# 
   103     009F                     	;# 
   104     010C                     	;# 
   105     010D                     	;# 
   106     010E                     	;# 
   107     010F                     	;# 
   108     018C                     	;# 
   109     018D                     	;# 
   110     0000                     	;# 
   111     0001                     	;# 
   112     0002                     	;# 
   113     0003                     	;# 
   114     0004                     	;# 
   115     0005                     	;# 
   116     0006                     	;# 
   117     0007                     	;# 
   118     000A                     	;# 
   119     000B                     	;# 
   120     000C                     	;# 
   121     000D                     	;# 
   122     000E                     	;# 
   123     000E                     	;# 
   124     000F                     	;# 
   125     0010                     	;# 
   126     0011                     	;# 
   127     0012                     	;# 
   128     0015                     	;# 
   129     0015                     	;# 
   130     0016                     	;# 
   131     0017                     	;# 
   132     0018                     	;# 
   133     0019                     	;# 
   134     001A                     	;# 
   135     001E                     	;# 
   136     001F                     	;# 
   137     0081                     	;# 
   138     0085                     	;# 
   139     0086                     	;# 
   140     0087                     	;# 
   141     008C                     	;# 
   142     008D                     	;# 
   143     008E                     	;# 
   144     0092                     	;# 
   145     0098                     	;# 
   146     0099                     	;# 
   147     009E                     	;# 
   148     009F                     	;# 
   149     010C                     	;# 
   150     010D                     	;# 
   151     010E                     	;# 
   152     010F                     	;# 
   153     018C                     	;# 
   154     018D                     	;# 
   155     0000                     	;# 
   156     0001                     	;# 
   157     0002                     	;# 
   158     0003                     	;# 
   159     0004                     	;# 
   160     0005                     	;# 
   161     0006                     	;# 
   162     0007                     	;# 
   163     000A                     	;# 
   164     000B                     	;# 
   165     000C                     	;# 
   166     000D                     	;# 
   167     000E                     	;# 
   168     000E                     	;# 
   169     000F                     	;# 
   170     0010                     	;# 
   171     0011                     	;# 
   172     0012                     	;# 
   173     0015                     	;# 
   174     0015                     	;# 
   175     0016                     	;# 
   176     0017                     	;# 
   177     0018                     	;# 
   178     0019                     	;# 
   179     001A                     	;# 
   180     001E                     	;# 
   181     001F                     	;# 
   182     0081                     	;# 
   183     0085                     	;# 
   184     0086                     	;# 
   185     0087                     	;# 
   186     008C                     	;# 
   187     008D                     	;# 
   188     008E                     	;# 
   189     0092                     	;# 
   190     0098                     	;# 
   191     0099                     	;# 
   192     009E                     	;# 
   193     009F                     	;# 
   194     010C                     	;# 
   195     010D                     	;# 
   196     010E                     	;# 
   197     010F                     	;# 
   198     018C                     	;# 
   199     018D                     	;# 
   200     0000                     	;# 
   201     0001                     	;# 
   202     0002                     	;# 
   203     0003                     	;# 
   204     0004                     	;# 
   205     0005                     	;# 
   206     0006                     	;# 
   207     0007                     	;# 
   208     000A                     	;# 
   209     000B                     	;# 
   210     000C                     	;# 
   211     000D                     	;# 
   212     000E                     	;# 
   213     000E                     	;# 
   214     000F                     	;# 
   215     0010                     	;# 
   216     0011                     	;# 
   217     0012                     	;# 
   218     0015                     	;# 
   219     0015                     	;# 
   220     0016                     	;# 
   221     0017                     	;# 
   222     0018                     	;# 
   223     0019                     	;# 
   224     001A                     	;# 
   225     001E                     	;# 
   226     001F                     	;# 
   227     0081                     	;# 
   228     0085                     	;# 
   229     0086                     	;# 
   230     0087                     	;# 
   231     008C                     	;# 
   232     008D                     	;# 
   233     008E                     	;# 
   234     0092                     	;# 
   235     0098                     	;# 
   236     0099                     	;# 
   237     009E                     	;# 
   238     009F                     	;# 
   239     010C                     	;# 
   240     010D                     	;# 
   241     010E                     	;# 
   242     010F                     	;# 
   243     018C                     	;# 
   244     018D                     	;# 
   245     0000                     	;# 
   246     0001                     	;# 
   247     0002                     	;# 
   248     0003                     	;# 
   249     0004                     	;# 
   250     0005                     	;# 
   251     0006                     	;# 
   252     0007                     	;# 
   253     000A                     	;# 
   254     000B                     	;# 
   255     000C                     	;# 
   256     000D                     	;# 
   257     000E                     	;# 
   258     000E                     	;# 
   259     000F                     	;# 
   260     0010                     	;# 
   261     0011                     	;# 
   262     0012                     	;# 
   263     0015                     	;# 
   264     0015                     	;# 
   265     0016                     	;# 
   266     0017                     	;# 
   267     0018                     	;# 
   268     0019                     	;# 
   269     001A                     	;# 
   270     001E                     	;# 
   271     001F                     	;# 
   272     0081                     	;# 
   273     0085                     	;# 
   274     0086                     	;# 
   275     0087                     	;# 
   276     008C                     	;# 
   277     008D                     	;# 
   278     008E                     	;# 
   279     0092                     	;# 
   280     0098                     	;# 
   281     0099                     	;# 
   282     009E                     	;# 
   283     009F                     	;# 
   284     010C                     	;# 
   285     010D                     	;# 
   286     010E                     	;# 
   287     010F                     	;# 
   288     018C                     	;# 
   289     018D                     	;# 
   290                           
   291                           	psect	strings
   292     020F                     __pstrings:
   293     020F                     stringtab:
   294     020F                     __stringtab:
   295     020F                     stringcode:	
   296                           ;	String table - string pointers are 1 byte each
   297                           
   298     020F                     stringdir:
   299     020F  3002               	movlw	high stringdir
   300     0210  008A               	movwf	10
   301     0211  0804               	movf	4,w
   302     0212  0A84               	incf	4,f
   303     0213  0782               	addwf	2,f
   304     0214                     __stringbase:
   305     0214  3400               	retlw	0
   306     0215                     __end_of__stringtab:
   307     0215                     _NUMBERS:
   308     0215  347E               	retlw	126
   309     0216  340C               	retlw	12
   310     0217  34B6               	retlw	182
   311     0218  349E               	retlw	158
   312     0219  34CC               	retlw	204
   313     021A  34DA               	retlw	218
   314     021B  34FA               	retlw	250
   315     021C  340E               	retlw	14
   316     021D  34FE               	retlw	254
   317     021E  349E               	retlw	158
   318     021F                     __end_of_NUMBERS:
   319     021F                     _DIGITS:
   320     021F  343E               	retlw	62
   321     0220  343D               	retlw	61
   322     0221  343B               	retlw	59
   323     0222  3437               	retlw	55
   324     0223  342F               	retlw	47
   325     0224  341F               	retlw	31
   326     0225                     __end_of_DIGITS:
   327     000E                     _TMR1	set	14
   328     000C                     _PIR1bits	set	12
   329     0005                     _PORTAbits	set	5
   330     001F                     _ADCON0	set	31
   331     0010                     _T1CONbits	set	16
   332     0010                     _T1CON	set	16
   333     0007                     _PORTC	set	7
   334     0006                     _PORTB	set	6
   335     005F                     _GIE	set	95
   336     005E                     _PEIE	set	94
   337     008C                     _PIE1bits	set	140
   338     009F                     _ADCON1bits	set	159
   339     0087                     _TRISC	set	135
   340     0086                     _TRISB	set	134
   341     0085                     _TRISA	set	133
   342                           
   343                           	psect	cinit
   344     000B                     start_initialization:	
   345                           ; #config settings
   346                           
   347     000B                     __initialization:
   348                           
   349                           ; Clear objects allocated to COMMON
   350     000B  01FB               	clrf	__pbssCOMMON& (0+127)
   351                           
   352                           ; Clear objects allocated to BANK0
   353     000C  1283               	bcf	3,5	;RP0=0, select bank0
   354     000D  1303               	bcf	3,6	;RP1=0, select bank0
   355     000E  01AC               	clrf	__pbssBANK0& (0+127)
   356     000F  01AD               	clrf	(__pbssBANK0+1)& (0+127)
   357     0010  01AE               	clrf	(__pbssBANK0+2)& (0+127)
   358     0011  01AF               	clrf	(__pbssBANK0+3)& (0+127)
   359     0012  01B0               	clrf	(__pbssBANK0+4)& (0+127)
   360     0013  01B1               	clrf	(__pbssBANK0+5)& (0+127)
   361     0014  01B2               	clrf	(__pbssBANK0+6)& (0+127)
   362     0015  01B3               	clrf	(__pbssBANK0+7)& (0+127)
   363     0016  01B4               	clrf	(__pbssBANK0+8)& (0+127)
   364     0017                     end_of_initialization:	
   365                           ;End of C runtime variable initialization code
   366                           
   367     0017                     __end_of__initialization:
   368     0017  0183               	clrf	3
   369     0018  2A3A               	ljmp	_main	;jump to C main() function
   370                           
   371                           	psect	bssCOMMON
   372     007B                     __pbssCOMMON:
   373     007B                     _button:
   374     007B                     	ds	1
   375                           
   376                           	psect	bssBANK0
   377     002C                     __pbssBANK0:
   378     002C                     _score:
   379     002C                     	ds	5
   380     0031                     _timers:
   381     0031                     	ds	4
   382                           
   383                           	psect	cstackCOMMON
   384     0070                     __pcstackCOMMON:
   385     0070                     ?_checkButtons:
   386     0070                     ?_updateDisplay:	
   387                           ; 1 bytes @ 0x0
   388                           
   389     0070                     ?_setup:	
   390                           ; 1 bytes @ 0x0
   391                           
   392     0070                     ?_main:	
   393                           ; 1 bytes @ 0x0
   394                           
   395     0070                     ?_up1:	
   396                           ; 1 bytes @ 0x0
   397                           
   398     0070                     ?_up2:	
   399                           ; 1 bytes @ 0x0
   400                           
   401     0070                     ?_down1:	
   402                           ; 1 bytes @ 0x0
   403                           
   404     0070                     ?_down2:	
   405                           ; 1 bytes @ 0x0
   406                           
   407     0070                     ?_change:	
   408                           ; 1 bytes @ 0x0
   409                           
   410     0070                     ?_win:	
   411                           ; 1 bytes @ 0x0
   412                           
   413     0070                     ?_getNumber:	
   414                           ; 1 bytes @ 0x0
   415                           
   416     0070                     ?_isr:	
   417                           ; 1 bytes @ 0x0
   418                           
   419     0070                     ??_isr:	
   420                           ; 1 bytes @ 0x0
   421                           
   422                           
   423                           ; 1 bytes @ 0x0
   424     0070                     	ds	2
   425     0072                     ??_setup:
   426     0072                     ??_up1:	
   427                           ; 1 bytes @ 0x2
   428                           
   429     0072                     ??_up2:	
   430                           ; 1 bytes @ 0x2
   431                           
   432     0072                     ??_down1:	
   433                           ; 1 bytes @ 0x2
   434                           
   435     0072                     ??_down2:	
   436                           ; 1 bytes @ 0x2
   437                           
   438     0072                     ??_change:	
   439                           ; 1 bytes @ 0x2
   440                           
   441     0072                     ??_win:	
   442                           ; 1 bytes @ 0x2
   443                           
   444     0072                     ?___bmul:	
   445                           ; 1 bytes @ 0x2
   446                           
   447     0072                     ?___awdiv:	
   448                           ; 1 bytes @ 0x2
   449                           
   450     0072                     change@aux:	
   451                           ; 2 bytes @ 0x2
   452                           
   453     0072                     ___bmul@multiplicand:	
   454                           ; 1 bytes @ 0x2
   455                           
   456     0072                     ___awdiv@divisor:	
   457                           ; 1 bytes @ 0x2
   458                           
   459                           
   460                           ; 2 bytes @ 0x2
   461     0072                     	ds	1
   462     0073                     ?_checkButton:
   463     0073                     ??___bmul:	
   464                           ; 1 bytes @ 0x3
   465                           
   466     0073                     checkButton@action:	
   467                           ; 1 bytes @ 0x3
   468                           
   469     0073                     ___bmul@product:	
   470                           ; 1 bytes @ 0x3
   471                           
   472                           
   473                           ; 1 bytes @ 0x3
   474     0073                     	ds	1
   475     0074                     ??_checkButton:
   476     0074                     checkButton@btn:	
   477                           ; 1 bytes @ 0x4
   478                           
   479     0074                     ___bmul@multiplier:	
   480                           ; 1 bytes @ 0x4
   481                           
   482     0074                     ___awdiv@dividend:	
   483                           ; 1 bytes @ 0x4
   484                           
   485                           
   486                           ; 2 bytes @ 0x4
   487     0074                     	ds	1
   488     0075                     ??_checkButtons:
   489                           
   490                           ; 1 bytes @ 0x5
   491     0075                     	ds	1
   492     0076                     ??___awdiv:
   493     0076                     _checkButtons$216:	
   494                           ; 1 bytes @ 0x6
   495                           
   496     0076                     ___awdiv@counter:	
   497                           ; 1 bytes @ 0x6
   498                           
   499                           
   500                           ; 1 bytes @ 0x6
   501     0076                     	ds	1
   502     0077                     ___awdiv@sign:
   503                           
   504                           ; 1 bytes @ 0x7
   505     0077                     	ds	1
   506     0078                     ___awdiv@quotient:
   507                           
   508                           ; 2 bytes @ 0x8
   509     0078                     	ds	2
   510     007A                     ?_calcDigit:
   511     007A                     calcDigit@dozen:	
   512                           ; 1 bytes @ 0xA
   513                           
   514                           
   515                           ; 1 bytes @ 0xA
   516     007A                     	ds	1
   517     007B                     ??_updateDisplay:
   518     007B                     ??_getNumber:	
   519                           ; 1 bytes @ 0xB
   520                           
   521                           
   522                           	psect	cstackBANK0
   523     0020                     __pcstackBANK0:	
   524                           ; 1 bytes @ 0xB
   525                           
   526     0020                     ??_calcDigit:
   527                           
   528                           ; 1 bytes @ 0x0
   529     0020                     	ds	2
   530     0022                     _calcDigit$237:
   531                           
   532                           ; 2 bytes @ 0x2
   533     0022                     	ds	2
   534     0024                     calcDigit@u:
   535                           
   536                           ; 1 bytes @ 0x4
   537     0024                     	ds	1
   538     0025                     calcDigit@value:
   539                           
   540                           ; 1 bytes @ 0x5
   541     0025                     	ds	1
   542     0026                     calcDigit@d:
   543                           
   544                           ; 1 bytes @ 0x6
   545     0026                     	ds	1
   546     0027                     updateDisplay@number:
   547                           
   548                           ; 1 bytes @ 0x7
   549     0027                     	ds	1
   550     0028                     updateDisplay@digit:
   551                           
   552                           ; 1 bytes @ 0x8
   553     0028                     	ds	1
   554     0029                     ??_main:
   555                           
   556                           ; 1 bytes @ 0x9
   557     0029                     	ds	3
   558                           
   559                           	psect	maintext
   560     023A                     __pmaintext:	
   561 ;;
   562 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   563 ;;
   564 ;; *************** function _main *****************
   565 ;; Defined at:
   566 ;;		line 22 in file "main.c"
   567 ;; Parameters:    Size  Location     Type
   568 ;;		None
   569 ;; Auto vars:     Size  Location     Type
   570 ;;		None
   571 ;; Return value:  Size  Location     Type
   572 ;;                  1    wreg      void 
   573 ;; Registers used:
   574 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   575 ;; Tracked objects:
   576 ;;		On entry : B00/0
   577 ;;		On exit  : 0/0
   578 ;;		Unchanged: 0/0
   579 ;; Data sizes:     COMMON   BANK0   BANK1
   580 ;;      Params:         0       0       0
   581 ;;      Locals:         0       0       0
   582 ;;      Temps:          0       3       0
   583 ;;      Totals:         0       3       0
   584 ;;Total ram usage:        3 bytes
   585 ;; Hardware stack levels required when called: 5
   586 ;; This function calls:
   587 ;;		_checkButtons
   588 ;;		_setup
   589 ;;		_updateDisplay
   590 ;; This function is called by:
   591 ;;		Startup code after reset
   592 ;; This function uses a non-reentrant model
   593 ;;
   594                           
   595     023A                     _main:	
   596                           ;psect for function _main
   597                           
   598     023A                     l1145:	
   599                           ;incstack = 0
   600                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   601                           
   602                           
   603                           ;main.c: 24:     setup();
   604     023A  21DE               	fcall	_setup
   605     023B                     l1147:
   606                           
   607                           ;main.c: 26:     _delay((unsigned long)((500)*(12800000L/4000.0)));
   608     023B  3009               	movlw	9
   609     023C  1283               	bcf	3,5	;RP0=0, select bank0
   610     023D  1303               	bcf	3,6	;RP1=0, select bank0
   611     023E  00AB               	movwf	??_main+2
   612     023F  301E               	movlw	30
   613     0240  00AA               	movwf	??_main+1
   614     0241  30E4               	movlw	228
   615     0242  00A9               	movwf	??_main
   616     0243                     u837:
   617     0243  0BA9               	decfsz	??_main,f
   618     0244  2A43               	goto	u837
   619     0245  0BAA               	decfsz	??_main+1,f
   620     0246  2A43               	goto	u837
   621     0247  0BAB               	decfsz	??_main+2,f
   622     0248  2A43               	goto	u837
   623     0249                     l1149:
   624                           
   625                           ;main.c: 29:         checkButtons();
   626     0249  208C               	fcall	_checkButtons
   627     024A                     l1151:
   628                           
   629                           ;main.c: 30:         updateDisplay();
   630     024A  213D               	fcall	_updateDisplay
   631     024B  2A49               	goto	l1149
   632     024C  280A               	ljmp	start
   633     024D                     __end_of_main:
   634                           
   635                           	psect	text1
   636     013D                     __ptext1:	
   637 ;; *************** function _updateDisplay *****************
   638 ;; Defined at:
   639 ;;		line 17 in file "display.c"
   640 ;; Parameters:    Size  Location     Type
   641 ;;		None
   642 ;; Auto vars:     Size  Location     Type
   643 ;;  digit           1    8[BANK0 ] unsigned char 
   644 ;;  number          1    7[BANK0 ] unsigned char 
   645 ;; Return value:  Size  Location     Type
   646 ;;                  1    wreg      void 
   647 ;; Registers used:
   648 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   649 ;; Tracked objects:
   650 ;;		On entry : 0/0
   651 ;;		On exit  : 0/0
   652 ;;		Unchanged: 0/0
   653 ;; Data sizes:     COMMON   BANK0   BANK1
   654 ;;      Params:         0       0       0
   655 ;;      Locals:         0       2       0
   656 ;;      Temps:          0       0       0
   657 ;;      Totals:         0       2       0
   658 ;;Total ram usage:        2 bytes
   659 ;; Hardware stack levels used: 1
   660 ;; Hardware stack levels required when called: 4
   661 ;; This function calls:
   662 ;;		_getNumber
   663 ;; This function is called by:
   664 ;;		_main
   665 ;; This function uses a non-reentrant model
   666 ;;
   667                           
   668     013D                     _updateDisplay:	
   669                           ;psect for function _updateDisplay
   670                           
   671     013D                     l1127:	
   672                           ;incstack = 0
   673                           ; Regs used in _updateDisplay: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   674                           
   675                           
   676                           ;display.c: 18:     if (timers[0]) return;
   677     013D  1283               	bcf	3,5	;RP0=0, select bank0
   678     013E  1303               	bcf	3,6	;RP1=0, select bank0
   679     013F  0831               	movf	_timers,w	;volatile
   680     0140  0432               	iorwf	_timers+1,w	;volatile
   681     0141  1903               	btfsc	3,2
   682     0142  2944               	goto	u781
   683     0143  2945               	goto	u780
   684     0144                     u781:
   685     0144  2946               	goto	l1131
   686     0145                     u780:
   687     0145  2965               	goto	l136
   688     0146                     l1131:
   689                           
   690                           ;display.c: 19:     timers[0] = 10;
   691     0146  300A               	movlw	10
   692     0147  00B1               	movwf	_timers	;volatile
   693     0148  3000               	movlw	0
   694     0149  00B2               	movwf	_timers+1	;volatile
   695     014A                     l1133:
   696                           
   697                           ;display.c: 21:     if (++score.digit > 5) score.digit = 0;
   698     014A  3001               	movlw	1
   699     014B  00FF               	movwf	btemp+1
   700     014C  087F               	movf	btemp+1,w
   701     014D  07B0               	addwf	_score+4,f
   702     014E  3006               	movlw	6
   703     014F  0230               	subwf	_score+4,w
   704     0150  1C03               	skipc
   705     0151  2953               	goto	u791
   706     0152  2954               	goto	u790
   707     0153                     u791:
   708     0153  2955               	goto	l1137
   709     0154                     u790:
   710     0154                     l1135:
   711     0154  01B0               	clrf	_score+4
   712     0155                     l1137:
   713                           
   714                           ;display.c: 23:     char number = NUMBERS[getNumber()];
   715     0155  2166               	fcall	_getNumber
   716     0156  3E01               	addlw	low ((_NUMBERS-__stringbase)| (0+32768))
   717     0157  0084               	movwf	4
   718     0158  220F               	fcall	stringdir
   719     0159  1283               	bcf	3,5	;RP0=0, select bank0
   720     015A  1303               	bcf	3,6	;RP1=0, select bank0
   721     015B  00A7               	movwf	updateDisplay@number
   722     015C                     l1139:
   723                           
   724                           ;display.c: 24:     char digit = DIGITS[score.digit];
   725     015C  0830               	movf	_score+4,w
   726     015D  3E0B               	addlw	low ((_DIGITS-__stringbase)| (0+32768))
   727     015E  0084               	movwf	4
   728     015F  220F               	fcall	stringdir
   729     0160  00A8               	movwf	updateDisplay@digit
   730     0161                     l1141:
   731                           
   732                           ;display.c: 26:     PORTC = digit;
   733     0161  0828               	movf	updateDisplay@digit,w
   734     0162  0087               	movwf	7	;volatile
   735     0163                     l1143:
   736                           
   737                           ;display.c: 27:     PORTB = number;
   738     0163  0827               	movf	updateDisplay@number,w
   739     0164  0086               	movwf	6	;volatile
   740     0165                     l136:
   741     0165  0008               	return
   742     0166                     __end_of_updateDisplay:
   743                           
   744                           	psect	text2
   745     0166                     __ptext2:	
   746 ;; *************** function _getNumber *****************
   747 ;; Defined at:
   748 ;;		line 9 in file "display.c"
   749 ;; Parameters:    Size  Location     Type
   750 ;;		None
   751 ;; Auto vars:     Size  Location     Type
   752 ;;		None
   753 ;; Return value:  Size  Location     Type
   754 ;;                  1    wreg      unsigned char 
   755 ;; Registers used:
   756 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   757 ;; Tracked objects:
   758 ;;		On entry : 0/0
   759 ;;		On exit  : 0/0
   760 ;;		Unchanged: 0/0
   761 ;; Data sizes:     COMMON   BANK0   BANK1
   762 ;;      Params:         0       0       0
   763 ;;      Locals:         0       0       0
   764 ;;      Temps:          0       0       0
   765 ;;      Totals:         0       0       0
   766 ;;Total ram usage:        0 bytes
   767 ;; Hardware stack levels used: 1
   768 ;; Hardware stack levels required when called: 3
   769 ;; This function calls:
   770 ;;		_calcDigit
   771 ;; This function is called by:
   772 ;;		_updateDisplay
   773 ;; This function uses a non-reentrant model
   774 ;;
   775                           
   776     0166                     _getNumber:	
   777                           ;psect for function _getNumber
   778                           
   779     0166                     l1081:	
   780                           ;incstack = 0
   781                           ; Regs used in _getNumber: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   782                           
   783                           
   784                           ;display.c: 10:     if (score.digit < 2) return calcDigit(score.team1, 0);
   785     0166  3002               	movlw	2
   786     0167  1283               	bcf	3,5	;RP0=0, select bank0
   787     0168  1303               	bcf	3,6	;RP1=0, select bank0
   788     0169  0230               	subwf	_score+4,w
   789     016A  1803               	skipnc
   790     016B  296D               	goto	u681
   791     016C  296E               	goto	u680
   792     016D                     u681:
   793     016D  2972               	goto	l1087
   794     016E                     u680:
   795     016E                     l1083:
   796     016E  01FA               	clrf	calcDigit@dozen
   797     016F  082C               	movf	_score,w
   798     0170  20E1               	fcall	_calcDigit
   799     0171  298E               	goto	l129
   800     0172                     l1087:
   801                           
   802                           ;display.c: 11:     if (score.digit < 4) return calcDigit(score.team2, 2);
   803     0172  3004               	movlw	4
   804     0173  0230               	subwf	_score+4,w
   805     0174  1803               	skipnc
   806     0175  2977               	goto	u691
   807     0176  2978               	goto	u690
   808     0177                     u691:
   809     0177  297D               	goto	l1093
   810     0178                     u690:
   811     0178                     l1089:
   812     0178  3002               	movlw	2
   813     0179  00FA               	movwf	calcDigit@dozen
   814     017A  082D               	movf	_score+1,w
   815     017B  20E1               	fcall	_calcDigit
   816     017C  298E               	goto	l129
   817     017D                     l1093:
   818                           
   819                           ;display.c: 12:     if (score.digit == 4) return score.win1;
   820     017D  3004               	movlw	4
   821     017E  0630               	xorwf	_score+4,w
   822     017F  1D03               	btfss	3,2
   823     0180  2982               	goto	u701
   824     0181  2983               	goto	u700
   825     0182                     u701:
   826     0182  2985               	goto	l1099
   827     0183                     u700:
   828     0183                     l1095:
   829     0183  082E               	movf	_score+2,w
   830     0184  298E               	goto	l129
   831     0185                     l1099:
   832                           
   833                           ;display.c: 13:     if (score.digit == 5) return score.win2;
   834     0185  3005               	movlw	5
   835     0186  0630               	xorwf	_score+4,w
   836     0187  1D03               	btfss	3,2
   837     0188  298A               	goto	u711
   838     0189  298B               	goto	u710
   839     018A                     u711:
   840     018A  298D               	goto	l1105
   841     018B                     u710:
   842     018B                     l1101:
   843     018B  082F               	movf	_score+3,w
   844     018C  298E               	goto	l129
   845     018D                     l1105:
   846                           
   847                           ;display.c: 14:     return 0;
   848     018D  3000               	movlw	0
   849     018E                     l129:
   850     018E  0008               	return
   851     018F                     __end_of_getNumber:
   852                           
   853                           	psect	text3
   854     00E1                     __ptext3:	
   855 ;; *************** function _calcDigit *****************
   856 ;; Defined at:
   857 ;;		line 3 in file "display.c"
   858 ;; Parameters:    Size  Location     Type
   859 ;;  value           1    wreg     char 
   860 ;;  dozen           1   10[COMMON] unsigned char 
   861 ;; Auto vars:     Size  Location     Type
   862 ;;  value           1    5[BANK0 ] char 
   863 ;;  d               1    6[BANK0 ] unsigned char 
   864 ;;  u               1    4[BANK0 ] unsigned char 
   865 ;; Return value:  Size  Location     Type
   866 ;;                  1    wreg      unsigned char 
   867 ;; Registers used:
   868 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   869 ;; Tracked objects:
   870 ;;		On entry : 0/0
   871 ;;		On exit  : 0/0
   872 ;;		Unchanged: 0/0
   873 ;; Data sizes:     COMMON   BANK0   BANK1
   874 ;;      Params:         1       0       0
   875 ;;      Locals:         0       5       0
   876 ;;      Temps:          0       2       0
   877 ;;      Totals:         1       7       0
   878 ;;Total ram usage:        8 bytes
   879 ;; Hardware stack levels used: 1
   880 ;; Hardware stack levels required when called: 2
   881 ;; This function calls:
   882 ;;		___awdiv
   883 ;;		___bmul
   884 ;; This function is called by:
   885 ;;		_getNumber
   886 ;; This function uses a non-reentrant model
   887 ;;
   888                           
   889     00E1                     _calcDigit:	
   890                           ;psect for function _calcDigit
   891                           
   892                           
   893                           ;incstack = 0
   894                           ; Regs used in _calcDigit: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   895                           ;calcDigit@value stored from wreg
   896     00E1  1283               	bcf	3,5	;RP0=0, select bank0
   897     00E2  1303               	bcf	3,6	;RP1=0, select bank0
   898     00E3  00A5               	movwf	calcDigit@value
   899     00E4                     l1043:
   900                           
   901                           ;display.c: 4:     char d = (char)value / 10;
   902     00E4  300A               	movlw	10
   903     00E5  00F2               	movwf	___awdiv@divisor
   904     00E6  3000               	movlw	0
   905     00E7  00F3               	movwf	___awdiv@divisor+1
   906     00E8  0825               	movf	calcDigit@value,w
   907     00E9  00A0               	movwf	??_calcDigit
   908     00EA  01A1               	clrf	??_calcDigit+1
   909     00EB  0820               	movf	??_calcDigit,w
   910     00EC  00F4               	movwf	___awdiv@dividend
   911     00ED  0821               	movf	??_calcDigit+1,w
   912     00EE  00F5               	movwf	___awdiv@dividend+1
   913     00EF  2025               	fcall	___awdiv
   914     00F0  0872               	movf	?___awdiv,w
   915     00F1  1283               	bcf	3,5	;RP0=0, select bank0
   916     00F2  1303               	bcf	3,6	;RP1=0, select bank0
   917     00F3  00A6               	movwf	calcDigit@d
   918                           
   919                           ;display.c: 5:     char u = (char)value - d * 10;
   920     00F4  30F6               	movlw	246
   921     00F5  00F2               	movwf	___bmul@multiplicand
   922     00F6  0826               	movf	calcDigit@d,w
   923     00F7  2225               	fcall	___bmul
   924     00F8  1283               	bcf	3,5	;RP0=0, select bank0
   925     00F9  1303               	bcf	3,6	;RP1=0, select bank0
   926     00FA  0725               	addwf	calcDigit@value,w
   927     00FB  00A4               	movwf	calcDigit@u
   928     00FC                     l1045:
   929                           
   930                           ;display.c: 6:     return score.digit == dozen ? d : u;
   931     00FC  0830               	movf	_score+4,w
   932     00FD  067A               	xorwf	calcDigit@dozen,w
   933     00FE  1903               	skipnz
   934     00FF  2901               	goto	u631
   935     0100  2902               	goto	u630
   936     0101                     u631:
   937     0101  290A               	goto	l1049
   938     0102                     u630:
   939     0102                     l1047:
   940     0102  0824               	movf	calcDigit@u,w
   941     0103  00A0               	movwf	??_calcDigit
   942     0104  01A1               	clrf	??_calcDigit+1
   943     0105  0820               	movf	??_calcDigit,w
   944     0106  00A2               	movwf	_calcDigit$237
   945     0107  0821               	movf	??_calcDigit+1,w
   946     0108  00A3               	movwf	_calcDigit$237+1
   947     0109  2911               	goto	l124
   948     010A                     l1049:
   949     010A  0826               	movf	calcDigit@d,w
   950     010B  00A0               	movwf	??_calcDigit
   951     010C  01A1               	clrf	??_calcDigit+1
   952     010D  0820               	movf	??_calcDigit,w
   953     010E  00A2               	movwf	_calcDigit$237
   954     010F  0821               	movf	??_calcDigit+1,w
   955     0110  00A3               	movwf	_calcDigit$237+1
   956     0111                     l124:
   957     0111  0822               	movf	_calcDigit$237,w
   958     0112                     l125:
   959     0112  0008               	return
   960     0113                     __end_of_calcDigit:
   961                           
   962                           	psect	text4
   963     0225                     __ptext4:	
   964 ;; *************** function ___bmul *****************
   965 ;; Defined at:
   966 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul8.c"
   967 ;; Parameters:    Size  Location     Type
   968 ;;  multiplier      1    wreg     unsigned char 
   969 ;;  multiplicand    1    2[COMMON] unsigned char 
   970 ;; Auto vars:     Size  Location     Type
   971 ;;  multiplier      1    4[COMMON] unsigned char 
   972 ;;  product         1    3[COMMON] unsigned char 
   973 ;; Return value:  Size  Location     Type
   974 ;;                  1    wreg      unsigned char 
   975 ;; Registers used:
   976 ;;		wreg, status,2, status,0, btemp+1
   977 ;; Tracked objects:
   978 ;;		On entry : 0/0
   979 ;;		On exit  : 0/0
   980 ;;		Unchanged: 0/0
   981 ;; Data sizes:     COMMON   BANK0   BANK1
   982 ;;      Params:         1       0       0
   983 ;;      Locals:         2       0       0
   984 ;;      Temps:          0       0       0
   985 ;;      Totals:         3       0       0
   986 ;;Total ram usage:        3 bytes
   987 ;; Hardware stack levels used: 1
   988 ;; Hardware stack levels required when called: 1
   989 ;; This function calls:
   990 ;;		Nothing
   991 ;; This function is called by:
   992 ;;		_calcDigit
   993 ;; This function uses a non-reentrant model
   994 ;;
   995                           
   996     0225                     ___bmul:	
   997                           ;psect for function ___bmul
   998                           
   999                           
  1000                           ;incstack = 0
  1001                           ; Regs used in ___bmul: [wreg+status,2+status,0+btemp+1]
  1002                           ;___bmul@multiplier stored from wreg
  1003     0225  00F4               	movwf	___bmul@multiplier
  1004     0226                     l947:
  1005     0226  01F3               	clrf	___bmul@product
  1006     0227                     l949:
  1007     0227  1C74               	btfss	___bmul@multiplier,0
  1008     0228  2A2A               	goto	u421
  1009     0229  2A2B               	goto	u420
  1010     022A                     u421:
  1011     022A  2A2F               	goto	l953
  1012     022B                     u420:
  1013     022B                     l951:
  1014     022B  0872               	movf	___bmul@multiplicand,w
  1015     022C  00FF               	movwf	btemp+1
  1016     022D  087F               	movf	btemp+1,w
  1017     022E  07F3               	addwf	___bmul@product,f
  1018     022F                     l953:
  1019     022F  1003               	clrc
  1020     0230  0DF2               	rlf	___bmul@multiplicand,f
  1021     0231                     l955:
  1022     0231  1003               	clrc
  1023     0232  0CF4               	rrf	___bmul@multiplier,f
  1024     0233                     l957:
  1025     0233  0874               	movf	___bmul@multiplier,w
  1026     0234  1D03               	btfss	3,2
  1027     0235  2A37               	goto	u431
  1028     0236  2A38               	goto	u430
  1029     0237                     u431:
  1030     0237  2A27               	goto	l949
  1031     0238                     u430:
  1032     0238                     l959:
  1033     0238  0873               	movf	___bmul@product,w
  1034     0239                     l271:
  1035     0239  0008               	return
  1036     023A                     __end_of___bmul:
  1037                           
  1038                           	psect	text5
  1039     0025                     __ptext5:	
  1040 ;; *************** function ___awdiv *****************
  1041 ;; Defined at:
  1042 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
  1043 ;; Parameters:    Size  Location     Type
  1044 ;;  divisor         2    2[COMMON] int 
  1045 ;;  dividend        2    4[COMMON] int 
  1046 ;; Auto vars:     Size  Location     Type
  1047 ;;  quotient        2    8[COMMON] int 
  1048 ;;  sign            1    7[COMMON] unsigned char 
  1049 ;;  counter         1    6[COMMON] unsigned char 
  1050 ;; Return value:  Size  Location     Type
  1051 ;;                  2    2[COMMON] int 
  1052 ;; Registers used:
  1053 ;;		wreg, status,2, status,0, btemp+1
  1054 ;; Tracked objects:
  1055 ;;		On entry : 0/0
  1056 ;;		On exit  : 0/0
  1057 ;;		Unchanged: 0/0
  1058 ;; Data sizes:     COMMON   BANK0   BANK1
  1059 ;;      Params:         4       0       0
  1060 ;;      Locals:         4       0       0
  1061 ;;      Temps:          0       0       0
  1062 ;;      Totals:         8       0       0
  1063 ;;Total ram usage:        8 bytes
  1064 ;; Hardware stack levels used: 1
  1065 ;; Hardware stack levels required when called: 1
  1066 ;; This function calls:
  1067 ;;		Nothing
  1068 ;; This function is called by:
  1069 ;;		_calcDigit
  1070 ;; This function uses a non-reentrant model
  1071 ;;
  1072                           
  1073     0025                     ___awdiv:	
  1074                           ;psect for function ___awdiv
  1075                           
  1076     0025                     l963:	
  1077                           ;incstack = 0
  1078                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  1079                           
  1080     0025  01F7               	clrf	___awdiv@sign
  1081     0026                     l965:
  1082     0026  1FF3               	btfss	___awdiv@divisor+1,7
  1083     0027  2829               	goto	u441
  1084     0028  282A               	goto	u440
  1085     0029                     u441:
  1086     0029  2831               	goto	l971
  1087     002A                     u440:
  1088     002A                     l967:
  1089     002A  09F2               	comf	___awdiv@divisor,f
  1090     002B  09F3               	comf	___awdiv@divisor+1,f
  1091     002C  0AF2               	incf	___awdiv@divisor,f
  1092     002D  1903               	skipnz
  1093     002E  0AF3               	incf	___awdiv@divisor+1,f
  1094     002F                     l969:
  1095     002F  01F7               	clrf	___awdiv@sign
  1096     0030  0AF7               	incf	___awdiv@sign,f
  1097     0031                     l971:
  1098     0031  1FF5               	btfss	___awdiv@dividend+1,7
  1099     0032  2834               	goto	u451
  1100     0033  2835               	goto	u450
  1101     0034                     u451:
  1102     0034  283E               	goto	l977
  1103     0035                     u450:
  1104     0035                     l973:
  1105     0035  09F4               	comf	___awdiv@dividend,f
  1106     0036  09F5               	comf	___awdiv@dividend+1,f
  1107     0037  0AF4               	incf	___awdiv@dividend,f
  1108     0038  1903               	skipnz
  1109     0039  0AF5               	incf	___awdiv@dividend+1,f
  1110     003A                     l975:
  1111     003A  3001               	movlw	1
  1112     003B  00FF               	movwf	btemp+1
  1113     003C  087F               	movf	btemp+1,w
  1114     003D  06F7               	xorwf	___awdiv@sign,f
  1115     003E                     l977:
  1116     003E  01F8               	clrf	___awdiv@quotient
  1117     003F  01F9               	clrf	___awdiv@quotient+1
  1118     0040                     l979:
  1119     0040  0872               	movf	___awdiv@divisor,w
  1120     0041  0473               	iorwf	___awdiv@divisor+1,w
  1121     0042  1903               	btfsc	3,2
  1122     0043  2845               	goto	u461
  1123     0044  2846               	goto	u460
  1124     0045                     u461:
  1125     0045  287D               	goto	l999
  1126     0046                     u460:
  1127     0046                     l981:
  1128     0046  01F6               	clrf	___awdiv@counter
  1129     0047  0AF6               	incf	___awdiv@counter,f
  1130     0048  2854               	goto	l987
  1131     0049                     l983:
  1132     0049  3001               	movlw	1
  1133     004A                     u475:
  1134     004A  1003               	clrc
  1135     004B  0DF2               	rlf	___awdiv@divisor,f
  1136     004C  0DF3               	rlf	___awdiv@divisor+1,f
  1137     004D  3EFF               	addlw	-1
  1138     004E  1D03               	skipz
  1139     004F  284A               	goto	u475
  1140     0050                     l985:
  1141     0050  3001               	movlw	1
  1142     0051  00FF               	movwf	btemp+1
  1143     0052  087F               	movf	btemp+1,w
  1144     0053  07F6               	addwf	___awdiv@counter,f
  1145     0054                     l987:
  1146     0054  1FF3               	btfss	___awdiv@divisor+1,7
  1147     0055  2857               	goto	u481
  1148     0056  2858               	goto	u480
  1149     0057                     u481:
  1150     0057  2849               	goto	l983
  1151     0058                     u480:
  1152     0058                     l989:
  1153     0058  3001               	movlw	1
  1154     0059                     u495:
  1155     0059  1003               	clrc
  1156     005A  0DF8               	rlf	___awdiv@quotient,f
  1157     005B  0DF9               	rlf	___awdiv@quotient+1,f
  1158     005C  3EFF               	addlw	-1
  1159     005D  1D03               	skipz
  1160     005E  2859               	goto	u495
  1161     005F  0873               	movf	___awdiv@divisor+1,w
  1162     0060  0275               	subwf	___awdiv@dividend+1,w
  1163     0061  1D03               	skipz
  1164     0062  2865               	goto	u505
  1165     0063  0872               	movf	___awdiv@divisor,w
  1166     0064  0274               	subwf	___awdiv@dividend,w
  1167     0065                     u505:
  1168     0065  1C03               	skipc
  1169     0066  2868               	goto	u501
  1170     0067  2869               	goto	u500
  1171     0068                     u501:
  1172     0068  2870               	goto	l995
  1173     0069                     u500:
  1174     0069                     l991:
  1175     0069  0872               	movf	___awdiv@divisor,w
  1176     006A  02F4               	subwf	___awdiv@dividend,f
  1177     006B  0873               	movf	___awdiv@divisor+1,w
  1178     006C  1C03               	skipc
  1179     006D  03F5               	decf	___awdiv@dividend+1,f
  1180     006E  02F5               	subwf	___awdiv@dividend+1,f
  1181     006F                     l993:
  1182     006F  1478               	bsf	___awdiv@quotient,0
  1183     0070                     l995:
  1184     0070  3001               	movlw	1
  1185     0071                     u515:
  1186     0071  1003               	clrc
  1187     0072  0CF3               	rrf	___awdiv@divisor+1,f
  1188     0073  0CF2               	rrf	___awdiv@divisor,f
  1189     0074  3EFF               	addlw	-1
  1190     0075  1D03               	skipz
  1191     0076  2871               	goto	u515
  1192     0077                     l997:
  1193     0077  3001               	movlw	1
  1194     0078  02F6               	subwf	___awdiv@counter,f
  1195     0079  1D03               	btfss	3,2
  1196     007A  287C               	goto	u521
  1197     007B  287D               	goto	u520
  1198     007C                     u521:
  1199     007C  2858               	goto	l989
  1200     007D                     u520:
  1201     007D                     l999:
  1202     007D  0877               	movf	___awdiv@sign,w
  1203     007E  1903               	btfsc	3,2
  1204     007F  2881               	goto	u531
  1205     0080  2882               	goto	u530
  1206     0081                     u531:
  1207     0081  2887               	goto	l1003
  1208     0082                     u530:
  1209     0082                     l1001:
  1210     0082  09F8               	comf	___awdiv@quotient,f
  1211     0083  09F9               	comf	___awdiv@quotient+1,f
  1212     0084  0AF8               	incf	___awdiv@quotient,f
  1213     0085  1903               	skipnz
  1214     0086  0AF9               	incf	___awdiv@quotient+1,f
  1215     0087                     l1003:
  1216     0087  0879               	movf	___awdiv@quotient+1,w
  1217     0088  00F3               	movwf	?___awdiv+1
  1218     0089  0878               	movf	___awdiv@quotient,w
  1219     008A  00F2               	movwf	?___awdiv
  1220     008B                     l398:
  1221     008B  0008               	return
  1222     008C                     __end_of___awdiv:
  1223                           
  1224                           	psect	text6
  1225     01DE                     __ptext6:	
  1226 ;; *************** function _setup *****************
  1227 ;; Defined at:
  1228 ;;		line 3 in file "main.c"
  1229 ;; Parameters:    Size  Location     Type
  1230 ;;		None
  1231 ;; Auto vars:     Size  Location     Type
  1232 ;;		None
  1233 ;; Return value:  Size  Location     Type
  1234 ;;                  1    wreg      void 
  1235 ;; Registers used:
  1236 ;;		wreg, status,2, status,0
  1237 ;; Tracked objects:
  1238 ;;		On entry : 0/0
  1239 ;;		On exit  : 0/0
  1240 ;;		Unchanged: 0/0
  1241 ;; Data sizes:     COMMON   BANK0   BANK1
  1242 ;;      Params:         0       0       0
  1243 ;;      Locals:         0       0       0
  1244 ;;      Temps:          0       0       0
  1245 ;;      Totals:         0       0       0
  1246 ;;Total ram usage:        0 bytes
  1247 ;; Hardware stack levels used: 1
  1248 ;; Hardware stack levels required when called: 1
  1249 ;; This function calls:
  1250 ;;		Nothing
  1251 ;; This function is called by:
  1252 ;;		_main
  1253 ;; This function uses a non-reentrant model
  1254 ;;
  1255                           
  1256     01DE                     _setup:	
  1257                           ;psect for function _setup
  1258                           
  1259     01DE                     l865:	
  1260                           ;incstack = 0
  1261                           ; Regs used in _setup: [wreg+status,2+status,0]
  1262                           
  1263                           
  1264                           ;main.c: 4:     TRISA = 0b11111111;
  1265     01DE  30FF               	movlw	255
  1266     01DF  1683               	bsf	3,5	;RP0=1, select bank1
  1267     01E0  1303               	bcf	3,6	;RP1=0, select bank1
  1268     01E1  0085               	movwf	5	;volatile
  1269                           
  1270                           ;main.c: 5:     TRISB = 0b00000001;
  1271     01E2  3001               	movlw	1
  1272     01E3  0086               	movwf	6	;volatile
  1273     01E4                     l867:
  1274                           
  1275                           ;main.c: 6:     TRISC = 0b00000000;
  1276     01E4  0187               	clrf	7	;volatile
  1277     01E5                     l869:
  1278                           
  1279                           ;main.c: 7:     PORTB = 0;
  1280     01E5  1283               	bcf	3,5	;RP0=0, select bank0
  1281     01E6  1303               	bcf	3,6	;RP1=0, select bank0
  1282     01E7  0186               	clrf	6	;volatile
  1283     01E8                     l871:
  1284                           
  1285                           ;main.c: 8:     PORTC = 0;
  1286     01E8  0187               	clrf	7	;volatile
  1287     01E9                     l873:
  1288                           
  1289                           ;main.c: 10:     T1CON = 0;
  1290     01E9  0190               	clrf	16	;volatile
  1291     01EA                     l875:
  1292                           
  1293                           ;main.c: 11:     T1CONbits.TMR1CS = 0;
  1294     01EA  1090               	bcf	16,1	;volatile
  1295     01EB                     l877:
  1296                           
  1297                           ;main.c: 12:     T1CONbits.TMR1ON = 1;
  1298     01EB  1410               	bsf	16,0	;volatile
  1299     01EC                     l879:
  1300                           
  1301                           ;main.c: 14:     ADCON0 = 0;
  1302     01EC  019F               	clrf	31	;volatile
  1303     01ED                     l881:
  1304                           
  1305                           ;main.c: 15:     ADCON1bits.PCFG = 0b0110;
  1306     01ED  1683               	bsf	3,5	;RP0=1, select bank1
  1307     01EE  1303               	bcf	3,6	;RP1=0, select bank1
  1308     01EF  081F               	movf	31,w	;volatile
  1309     01F0  39F0               	andlw	-16
  1310     01F1  3806               	iorlw	6
  1311     01F2  009F               	movwf	31	;volatile
  1312     01F3                     l883:
  1313                           
  1314                           ;main.c: 17:     PIE1bits.TMR1IE = 1;
  1315     01F3  140C               	bsf	12,0	;volatile
  1316     01F4                     l885:
  1317                           
  1318                           ;main.c: 18:     PEIE = 1;
  1319     01F4  170B               	bsf	11,6	;volatile
  1320     01F5                     l887:
  1321                           
  1322                           ;main.c: 19:     GIE = 1;
  1323     01F5  178B               	bsf	11,7	;volatile
  1324     01F6                     l43:
  1325     01F6  0008               	return
  1326     01F7                     __end_of_setup:
  1327                           
  1328                           	psect	text7
  1329     008C                     __ptext7:	
  1330 ;; *************** function _checkButtons *****************
  1331 ;; Defined at:
  1332 ;;		line 45 in file "buttons.c"
  1333 ;; Parameters:    Size  Location     Type
  1334 ;;		None
  1335 ;; Auto vars:     Size  Location     Type
  1336 ;;		None
  1337 ;; Return value:  Size  Location     Type
  1338 ;;                  1    wreg      void 
  1339 ;; Registers used:
  1340 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1341 ;; Tracked objects:
  1342 ;;		On entry : 0/0
  1343 ;;		On exit  : 0/0
  1344 ;;		Unchanged: 0/0
  1345 ;; Data sizes:     COMMON   BANK0   BANK1
  1346 ;;      Params:         0       0       0
  1347 ;;      Locals:         1       0       0
  1348 ;;      Temps:          1       0       0
  1349 ;;      Totals:         2       0       0
  1350 ;;Total ram usage:        2 bytes
  1351 ;; Hardware stack levels used: 1
  1352 ;; Hardware stack levels required when called: 3
  1353 ;; This function calls:
  1354 ;;		_checkButton
  1355 ;; This function is called by:
  1356 ;;		_main
  1357 ;; This function uses a non-reentrant model
  1358 ;;
  1359                           
  1360     008C                     _checkButtons:	
  1361                           ;psect for function _checkButtons
  1362                           
  1363     008C                     l1109:	
  1364                           ;incstack = 0
  1365                           ; Regs used in _checkButtons: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1366                           
  1367                           
  1368                           ;buttons.c: 46:     button.status = checkButton(PORTAbits.RA0, up1)
  1369     008C  01F6               	clrf	_checkButtons$216
  1370     008D  0AF6               	incf	_checkButtons$216,f
  1371     008E                     l1111:
  1372     008E  3002               	movlw	(low (fp__up1-fpbase))& (0+255)
  1373     008F  00F3               	movwf	checkButton@action
  1374     0090  1283               	bcf	3,5	;RP0=0, select bank0
  1375     0091  1303               	bcf	3,6	;RP1=0, select bank0
  1376     0092  0805               	movf	5,w	;volatile
  1377     0093  3901               	andlw	1
  1378     0094  21B7               	fcall	_checkButton
  1379     0095  3A00               	xorlw	0
  1380     0096  1D03               	skipz
  1381     0097  2899               	goto	u721
  1382     0098  289A               	goto	u720
  1383     0099                     u721:
  1384     0099  28DE               	goto	l1125
  1385     009A                     u720:
  1386     009A                     l1113:
  1387     009A  3003               	movlw	(low (fp__up2-fpbase))& (0+255)
  1388     009B  00F3               	movwf	checkButton@action
  1389     009C  1283               	bcf	3,5	;RP0=0, select bank0
  1390     009D  1303               	bcf	3,6	;RP1=0, select bank0
  1391     009E  0C05               	rrf	5,w	;volatile
  1392     009F  00F5               	movwf	??_checkButtons
  1393     00A0  0C75               	rrf	??_checkButtons,w
  1394     00A1  3901               	andlw	1
  1395     00A2  21B7               	fcall	_checkButton
  1396     00A3  3A00               	xorlw	0
  1397     00A4  1D03               	skipz
  1398     00A5  28A7               	goto	u731
  1399     00A6  28A8               	goto	u730
  1400     00A7                     u731:
  1401     00A7  28DE               	goto	l1125
  1402     00A8                     u730:
  1403     00A8                     l1115:
  1404     00A8  3004               	movlw	(low (fp__down1-fpbase))& (0+255)
  1405     00A9  00F3               	movwf	checkButton@action
  1406     00AA  1283               	bcf	3,5	;RP0=0, select bank0
  1407     00AB  1303               	bcf	3,6	;RP1=0, select bank0
  1408     00AC  0C05               	rrf	5,w	;volatile
  1409     00AD  3901               	andlw	1
  1410     00AE  21B7               	fcall	_checkButton
  1411     00AF  3A00               	xorlw	0
  1412     00B0  1D03               	skipz
  1413     00B1  28B3               	goto	u741
  1414     00B2  28B4               	goto	u740
  1415     00B3                     u741:
  1416     00B3  28DE               	goto	l1125
  1417     00B4                     u740:
  1418     00B4                     l1117:
  1419     00B4  3005               	movlw	(low (fp__down2-fpbase))& (0+255)
  1420     00B5  00F3               	movwf	checkButton@action
  1421     00B6  1283               	bcf	3,5	;RP0=0, select bank0
  1422     00B7  1303               	bcf	3,6	;RP1=0, select bank0
  1423     00B8  0C05               	rrf	5,w	;volatile
  1424     00B9  00F5               	movwf	??_checkButtons
  1425     00BA  0CF5               	rrf	??_checkButtons,f
  1426     00BB  0C75               	rrf	??_checkButtons,w
  1427     00BC  3901               	andlw	1
  1428     00BD  21B7               	fcall	_checkButton
  1429     00BE  3A00               	xorlw	0
  1430     00BF  1D03               	skipz
  1431     00C0  28C2               	goto	u751
  1432     00C1  28C3               	goto	u750
  1433     00C2                     u751:
  1434     00C2  28DE               	goto	l1125
  1435     00C3                     u750:
  1436     00C3                     l1119:
  1437     00C3  3006               	movlw	(low (fp__change-fpbase))& (0+255)
  1438     00C4  00F3               	movwf	checkButton@action
  1439     00C5  1283               	bcf	3,5	;RP0=0, select bank0
  1440     00C6  1303               	bcf	3,6	;RP1=0, select bank0
  1441     00C7  0E05               	swapf	5,w	;volatile
  1442     00C8  3901               	andlw	1
  1443     00C9  21B7               	fcall	_checkButton
  1444     00CA  3A00               	xorlw	0
  1445     00CB  1D03               	skipz
  1446     00CC  28CE               	goto	u761
  1447     00CD  28CF               	goto	u760
  1448     00CE                     u761:
  1449     00CE  28DE               	goto	l1125
  1450     00CF                     u760:
  1451     00CF                     l1121:
  1452     00CF  3001               	movlw	(low (fp__win-fpbase))& (0+255)
  1453     00D0  00F3               	movwf	checkButton@action
  1454     00D1  1283               	bcf	3,5	;RP0=0, select bank0
  1455     00D2  1303               	bcf	3,6	;RP1=0, select bank0
  1456     00D3  0E05               	swapf	5,w	;volatile
  1457     00D4  00F5               	movwf	??_checkButtons
  1458     00D5  0C75               	rrf	??_checkButtons,w
  1459     00D6  3901               	andlw	1
  1460     00D7  21B7               	fcall	_checkButton
  1461     00D8  3A00               	xorlw	0
  1462     00D9  1D03               	skipz
  1463     00DA  28DC               	goto	u771
  1464     00DB  28DD               	goto	u770
  1465     00DC                     u771:
  1466     00DC  28DE               	goto	l1125
  1467     00DD                     u770:
  1468     00DD                     l1123:
  1469     00DD  01F6               	clrf	_checkButtons$216
  1470     00DE                     l1125:
  1471     00DE  0876               	movf	_checkButtons$216,w
  1472     00DF  00FB               	movwf	_button
  1473     00E0                     l104:
  1474     00E0  0008               	return
  1475     00E1                     __end_of_checkButtons:
  1476                           
  1477                           	psect	text8
  1478     01B7                     __ptext8:	
  1479 ;; *************** function _checkButton *****************
  1480 ;; Defined at:
  1481 ;;		line 3 in file "buttons.c"
  1482 ;; Parameters:    Size  Location     Type
  1483 ;;  btn             1    wreg     unsigned char 
  1484 ;;  action          1    3[COMMON] PTR FTN()void 
  1485 ;;		 -> win(1), change(1), down2(1), down1(1), 
  1486 ;;		 -> up2(1), up1(1), 
  1487 ;; Auto vars:     Size  Location     Type
  1488 ;;  btn             1    4[COMMON] unsigned char 
  1489 ;; Return value:  Size  Location     Type
  1490 ;;                  1    wreg      unsigned char 
  1491 ;; Registers used:
  1492 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1493 ;; Tracked objects:
  1494 ;;		On entry : 0/0
  1495 ;;		On exit  : 0/0
  1496 ;;		Unchanged: 0/0
  1497 ;; Data sizes:     COMMON   BANK0   BANK1
  1498 ;;      Params:         1       0       0
  1499 ;;      Locals:         1       0       0
  1500 ;;      Temps:          0       0       0
  1501 ;;      Totals:         2       0       0
  1502 ;;Total ram usage:        2 bytes
  1503 ;; Hardware stack levels used: 1
  1504 ;; Hardware stack levels required when called: 2
  1505 ;; This function calls:
  1506 ;;		_change
  1507 ;;		_down1
  1508 ;;		_down2
  1509 ;;		_up1
  1510 ;;		_up2
  1511 ;;		_win
  1512 ;; This function is called by:
  1513 ;;		_checkButtons
  1514 ;; This function uses a non-reentrant model
  1515 ;;
  1516                           
  1517     01B7                     _checkButton:	
  1518                           ;psect for function _checkButton
  1519                           
  1520                           
  1521                           ;incstack = 0
  1522                           ; Regs used in _checkButton: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1523                           ;checkButton@btn stored from wreg
  1524     01B7  00F4               	movwf	checkButton@btn
  1525     01B8                     l1053:
  1526                           
  1527                           ;buttons.c: 4:     if (!!(btn || btn)) return 0;
  1528     01B8  0874               	movf	checkButton@btn,w
  1529     01B9  1D03               	btfss	3,2
  1530     01BA  29BC               	goto	u641
  1531     01BB  29BD               	goto	u640
  1532     01BC                     u641:
  1533     01BC  29C2               	goto	l1057
  1534     01BD                     u640:
  1535     01BD                     l1055:
  1536     01BD  0874               	movf	checkButton@btn,w
  1537     01BE  1903               	btfsc	3,2
  1538     01BF  29C1               	goto	u651
  1539     01C0  29C2               	goto	u650
  1540     01C1                     u651:
  1541     01C1  29C4               	goto	l1061
  1542     01C2                     u650:
  1543     01C2                     l1057:
  1544     01C2  3000               	movlw	0
  1545     01C3  29DD               	goto	l69
  1546     01C4                     l1061:
  1547                           
  1548                           ;buttons.c: 5:     if (button.status == 1) {
  1549     01C4  037B               	decf	_button,w
  1550     01C5  1D03               	btfss	3,2
  1551     01C6  29C8               	goto	u661
  1552     01C7  29C9               	goto	u660
  1553     01C8                     u661:
  1554     01C8  29D1               	goto	l1069
  1555     01C9                     u660:
  1556     01C9                     l1063:
  1557                           
  1558                           ;buttons.c: 6:         timers[1] = 100;
  1559     01C9  3000               	movlw	0
  1560     01CA  1283               	bcf	3,5	;RP0=0, select bank0
  1561     01CB  1303               	bcf	3,6	;RP1=0, select bank0
  1562     01CC  00B4               	movwf	_timers+3	;volatile
  1563     01CD  3064               	movlw	100
  1564     01CE  00B3               	movwf	_timers+2	;volatile
  1565     01CF                     l1065:
  1566                           
  1567                           ;buttons.c: 7:         return 1;
  1568     01CF  3001               	movlw	1
  1569     01D0  29DD               	goto	l69
  1570     01D1                     l1069:
  1571                           
  1572                           ;buttons.c: 9:     if (timers[1])return 1;
  1573     01D1  1283               	bcf	3,5	;RP0=0, select bank0
  1574     01D2  1303               	bcf	3,6	;RP1=0, select bank0
  1575     01D3  0833               	movf	_timers+2,w	;volatile
  1576     01D4  0434               	iorwf	_timers+3,w	;volatile
  1577     01D5  1903               	btfsc	3,2
  1578     01D6  29D8               	goto	u671
  1579     01D7  29D9               	goto	u670
  1580     01D8                     u671:
  1581     01D8  29DA               	goto	l1075
  1582     01D9                     u670:
  1583     01D9  29CF               	goto	l1065
  1584     01DA                     l1075:
  1585                           
  1586                           ;buttons.c: 11:     action();
  1587     01DA  0873               	movf	checkButton@action,w
  1588     01DB  2019               	fcall	fptable
  1589     01DC  29CF               	goto	l1065
  1590     01DD                     l69:
  1591     01DD  0008               	return
  1592     01DE                     __end_of_checkButton:
  1593                           
  1594                           	psect	text9
  1595     01F7                     __ptext9:	
  1596 ;; *************** function _change *****************
  1597 ;; Defined at:
  1598 ;;		line 31 in file "buttons.c"
  1599 ;; Parameters:    Size  Location     Type
  1600 ;;		None
  1601 ;; Auto vars:     Size  Location     Type
  1602 ;;  aux             1    2[COMMON] unsigned char 
  1603 ;; Return value:  Size  Location     Type
  1604 ;;                  1    wreg      void 
  1605 ;; Registers used:
  1606 ;;		wreg
  1607 ;; Tracked objects:
  1608 ;;		On entry : 0/0
  1609 ;;		On exit  : 0/0
  1610 ;;		Unchanged: 0/0
  1611 ;; Data sizes:     COMMON   BANK0   BANK1
  1612 ;;      Params:         0       0       0
  1613 ;;      Locals:         1       0       0
  1614 ;;      Temps:          0       0       0
  1615 ;;      Totals:         1       0       0
  1616 ;;Total ram usage:        1 bytes
  1617 ;; Hardware stack levels used: 1
  1618 ;; Hardware stack levels required when called: 1
  1619 ;; This function calls:
  1620 ;;		Nothing
  1621 ;; This function is called by:
  1622 ;;		_checkButtons
  1623 ;;		_checkButton
  1624 ;; This function uses a non-reentrant model
  1625 ;;
  1626                           
  1627     01F7                     _change:	
  1628                           ;psect for function _change
  1629                           
  1630     01F7                     l1023:	
  1631                           ;incstack = 0
  1632                           ; Regs used in _change: [wreg]
  1633                           
  1634                           
  1635                           ;buttons.c: 32:     if (score.team1 > 0 || score.team2 > 0) return;
  1636     01F7  1283               	bcf	3,5	;RP0=0, select bank0
  1637     01F8  1303               	bcf	3,6	;RP1=0, select bank0
  1638     01F9  082C               	movf	_score,w
  1639     01FA  3A80               	xorlw	128
  1640     01FB  3E7F               	addlw	-129
  1641     01FC  1803               	skipnc
  1642     01FD  29FF               	goto	u581
  1643     01FE  2A00               	goto	u580
  1644     01FF                     u581:
  1645     01FF  2A0E               	goto	l93
  1646     0200                     u580:
  1647     0200                     l1025:
  1648     0200  082D               	movf	_score+1,w
  1649     0201  3A80               	xorlw	128
  1650     0202  3E7F               	addlw	-129
  1651     0203  1C03               	skipc
  1652     0204  2A06               	goto	u591
  1653     0205  2A07               	goto	u590
  1654     0206                     u591:
  1655     0206  2A08               	goto	l1027
  1656     0207                     u590:
  1657     0207  2A0E               	goto	l93
  1658     0208                     l1027:
  1659                           
  1660                           ;buttons.c: 33:     char aux = score.win1;
  1661     0208  082E               	movf	_score+2,w
  1662     0209  00F2               	movwf	change@aux
  1663                           
  1664                           ;buttons.c: 34:     score.win1 = score.win2;
  1665     020A  082F               	movf	_score+3,w
  1666     020B  00AE               	movwf	_score+2
  1667                           
  1668                           ;buttons.c: 35:     score.win2 = aux;
  1669     020C  0872               	movf	change@aux,w
  1670     020D  00AF               	movwf	_score+3
  1671     020E                     l93:
  1672     020E  0008               	return
  1673     020F                     __end_of_change:
  1674                           
  1675                           	psect	text10
  1676     026D                     __ptext10:	
  1677 ;; *************** function _down2 *****************
  1678 ;; Defined at:
  1679 ;;		line 27 in file "buttons.c"
  1680 ;; Parameters:    Size  Location     Type
  1681 ;;		None
  1682 ;; Auto vars:     Size  Location     Type
  1683 ;;		None
  1684 ;; Return value:  Size  Location     Type
  1685 ;;                  1    wreg      void 
  1686 ;; Registers used:
  1687 ;;		wreg, status,2, status,0, btemp+1
  1688 ;; Tracked objects:
  1689 ;;		On entry : 0/0
  1690 ;;		On exit  : 0/0
  1691 ;;		Unchanged: 0/0
  1692 ;; Data sizes:     COMMON   BANK0   BANK1
  1693 ;;      Params:         0       0       0
  1694 ;;      Locals:         0       0       0
  1695 ;;      Temps:          0       0       0
  1696 ;;      Totals:         0       0       0
  1697 ;;Total ram usage:        0 bytes
  1698 ;; Hardware stack levels used: 1
  1699 ;; Hardware stack levels required when called: 1
  1700 ;; This function calls:
  1701 ;;		Nothing
  1702 ;; This function is called by:
  1703 ;;		_checkButtons
  1704 ;;		_checkButton
  1705 ;; This function uses a non-reentrant model
  1706 ;;
  1707                           
  1708     026D                     _down2:	
  1709                           ;psect for function _down2
  1710                           
  1711     026D                     l1019:	
  1712                           ;incstack = 0
  1713                           ; Regs used in _down2: [wreg+status,2+status,0+btemp+1]
  1714                           
  1715                           
  1716                           ;buttons.c: 28:     if (--score.team2 < 0) score.team2 = 0;
  1717     026D  30FF               	movlw	255
  1718     026E  00FF               	movwf	btemp+1
  1719     026F  087F               	movf	btemp+1,w
  1720     0270  1283               	bcf	3,5	;RP0=0, select bank0
  1721     0271  1303               	bcf	3,6	;RP1=0, select bank0
  1722     0272  07AD               	addwf	_score+1,f
  1723     0273  1FAD               	btfss	_score+1,7
  1724     0274  2A76               	goto	u571
  1725     0275  2A77               	goto	u570
  1726     0276                     u571:
  1727     0276  2A78               	goto	l87
  1728     0277                     u570:
  1729     0277                     l1021:
  1730     0277  01AD               	clrf	_score+1
  1731     0278                     l87:
  1732     0278  0008               	return
  1733     0279                     __end_of_down2:
  1734                           
  1735                           	psect	text11
  1736     0279                     __ptext11:	
  1737 ;; *************** function _down1 *****************
  1738 ;; Defined at:
  1739 ;;		line 23 in file "buttons.c"
  1740 ;; Parameters:    Size  Location     Type
  1741 ;;		None
  1742 ;; Auto vars:     Size  Location     Type
  1743 ;;		None
  1744 ;; Return value:  Size  Location     Type
  1745 ;;                  1    wreg      void 
  1746 ;; Registers used:
  1747 ;;		wreg, status,2, status,0, btemp+1
  1748 ;; Tracked objects:
  1749 ;;		On entry : 0/0
  1750 ;;		On exit  : 0/0
  1751 ;;		Unchanged: 0/0
  1752 ;; Data sizes:     COMMON   BANK0   BANK1
  1753 ;;      Params:         0       0       0
  1754 ;;      Locals:         0       0       0
  1755 ;;      Temps:          0       0       0
  1756 ;;      Totals:         0       0       0
  1757 ;;Total ram usage:        0 bytes
  1758 ;; Hardware stack levels used: 1
  1759 ;; Hardware stack levels required when called: 1
  1760 ;; This function calls:
  1761 ;;		Nothing
  1762 ;; This function is called by:
  1763 ;;		_checkButtons
  1764 ;;		_checkButton
  1765 ;; This function uses a non-reentrant model
  1766 ;;
  1767                           
  1768     0279                     _down1:	
  1769                           ;psect for function _down1
  1770                           
  1771     0279                     l1015:	
  1772                           ;incstack = 0
  1773                           ; Regs used in _down1: [wreg+status,2+status,0+btemp+1]
  1774                           
  1775                           
  1776                           ;buttons.c: 24:     if (--score.team1 < 0) score.team1 = 0;
  1777     0279  30FF               	movlw	255
  1778     027A  00FF               	movwf	btemp+1
  1779     027B  087F               	movf	btemp+1,w
  1780     027C  1283               	bcf	3,5	;RP0=0, select bank0
  1781     027D  1303               	bcf	3,6	;RP1=0, select bank0
  1782     027E  07AC               	addwf	_score,f
  1783     027F  1FAC               	btfss	_score,7
  1784     0280  2A82               	goto	u561
  1785     0281  2A83               	goto	u560
  1786     0282                     u561:
  1787     0282  2A84               	goto	l83
  1788     0283                     u560:
  1789     0283                     l1017:
  1790     0283  01AC               	clrf	_score
  1791     0284                     l83:
  1792     0284  0008               	return
  1793     0285                     __end_of_down1:
  1794                           
  1795                           	psect	text12
  1796     024D                     __ptext12:	
  1797 ;; *************** function _up2 *****************
  1798 ;; Defined at:
  1799 ;;		line 19 in file "buttons.c"
  1800 ;; Parameters:    Size  Location     Type
  1801 ;;		None
  1802 ;; Auto vars:     Size  Location     Type
  1803 ;;		None
  1804 ;; Return value:  Size  Location     Type
  1805 ;;                  1    wreg      void 
  1806 ;; Registers used:
  1807 ;;		wreg, status,2, status,0, btemp+1
  1808 ;; Tracked objects:
  1809 ;;		On entry : 0/0
  1810 ;;		On exit  : 0/0
  1811 ;;		Unchanged: 0/0
  1812 ;; Data sizes:     COMMON   BANK0   BANK1
  1813 ;;      Params:         0       0       0
  1814 ;;      Locals:         0       0       0
  1815 ;;      Temps:          0       0       0
  1816 ;;      Totals:         0       0       0
  1817 ;;Total ram usage:        0 bytes
  1818 ;; Hardware stack levels used: 1
  1819 ;; Hardware stack levels required when called: 1
  1820 ;; This function calls:
  1821 ;;		Nothing
  1822 ;; This function is called by:
  1823 ;;		_checkButtons
  1824 ;;		_checkButton
  1825 ;; This function uses a non-reentrant model
  1826 ;;
  1827                           
  1828     024D                     _up2:	
  1829                           ;psect for function _up2
  1830                           
  1831     024D                     l1011:	
  1832                           ;incstack = 0
  1833                           ; Regs used in _up2: [wreg+status,2+status,0+btemp+1]
  1834                           
  1835                           
  1836                           ;buttons.c: 20:     if (++score.team2 > 99) score.team2 = 99;
  1837     024D  3001               	movlw	1
  1838     024E  00FF               	movwf	btemp+1
  1839     024F  087F               	movf	btemp+1,w
  1840     0250  1283               	bcf	3,5	;RP0=0, select bank0
  1841     0251  1303               	bcf	3,6	;RP1=0, select bank0
  1842     0252  07AD               	addwf	_score+1,f
  1843     0253  082D               	movf	_score+1,w
  1844     0254  3A80               	xorlw	128
  1845     0255  3E1C               	addlw	-228
  1846     0256  1C03               	skipc
  1847     0257  2A59               	goto	u551
  1848     0258  2A5A               	goto	u550
  1849     0259                     u551:
  1850     0259  2A5C               	goto	l79
  1851     025A                     u550:
  1852     025A                     l1013:
  1853     025A  3063               	movlw	99
  1854     025B  00AD               	movwf	_score+1
  1855     025C                     l79:
  1856     025C  0008               	return
  1857     025D                     __end_of_up2:
  1858                           
  1859                           	psect	text13
  1860     025D                     __ptext13:	
  1861 ;; *************** function _up1 *****************
  1862 ;; Defined at:
  1863 ;;		line 15 in file "buttons.c"
  1864 ;; Parameters:    Size  Location     Type
  1865 ;;		None
  1866 ;; Auto vars:     Size  Location     Type
  1867 ;;		None
  1868 ;; Return value:  Size  Location     Type
  1869 ;;                  1    wreg      void 
  1870 ;; Registers used:
  1871 ;;		wreg, status,2, status,0, btemp+1
  1872 ;; Tracked objects:
  1873 ;;		On entry : 0/0
  1874 ;;		On exit  : 0/0
  1875 ;;		Unchanged: 0/0
  1876 ;; Data sizes:     COMMON   BANK0   BANK1
  1877 ;;      Params:         0       0       0
  1878 ;;      Locals:         0       0       0
  1879 ;;      Temps:          0       0       0
  1880 ;;      Totals:         0       0       0
  1881 ;;Total ram usage:        0 bytes
  1882 ;; Hardware stack levels used: 1
  1883 ;; Hardware stack levels required when called: 1
  1884 ;; This function calls:
  1885 ;;		Nothing
  1886 ;; This function is called by:
  1887 ;;		_checkButtons
  1888 ;;		_checkButton
  1889 ;; This function uses a non-reentrant model
  1890 ;;
  1891                           
  1892     025D                     _up1:	
  1893                           ;psect for function _up1
  1894                           
  1895     025D                     l1007:	
  1896                           ;incstack = 0
  1897                           ; Regs used in _up1: [wreg+status,2+status,0+btemp+1]
  1898                           
  1899                           
  1900                           ;buttons.c: 16:     if (++score.team1 > 99) score.team1 = 99;
  1901     025D  3001               	movlw	1
  1902     025E  00FF               	movwf	btemp+1
  1903     025F  087F               	movf	btemp+1,w
  1904     0260  1283               	bcf	3,5	;RP0=0, select bank0
  1905     0261  1303               	bcf	3,6	;RP1=0, select bank0
  1906     0262  07AC               	addwf	_score,f
  1907     0263  082C               	movf	_score,w
  1908     0264  3A80               	xorlw	128
  1909     0265  3E1C               	addlw	-228
  1910     0266  1C03               	skipc
  1911     0267  2A69               	goto	u541
  1912     0268  2A6A               	goto	u540
  1913     0269                     u541:
  1914     0269  2A6C               	goto	l75
  1915     026A                     u540:
  1916     026A                     l1009:
  1917     026A  3063               	movlw	99
  1918     026B  00AC               	movwf	_score
  1919     026C                     l75:
  1920     026C  0008               	return
  1921     026D                     __end_of_up1:
  1922                           
  1923                           	psect	text14
  1924     018F                     __ptext14:	
  1925 ;; *************** function _win *****************
  1926 ;; Defined at:
  1927 ;;		line 38 in file "buttons.c"
  1928 ;; Parameters:    Size  Location     Type
  1929 ;;		None
  1930 ;; Auto vars:     Size  Location     Type
  1931 ;;		None
  1932 ;; Return value:  Size  Location     Type
  1933 ;;                  1    wreg      void 
  1934 ;; Registers used:
  1935 ;;		wreg, status,2, status,0, btemp+1
  1936 ;; Tracked objects:
  1937 ;;		On entry : 0/0
  1938 ;;		On exit  : 0/0
  1939 ;;		Unchanged: 0/0
  1940 ;; Data sizes:     COMMON   BANK0   BANK1
  1941 ;;      Params:         0       0       0
  1942 ;;      Locals:         0       0       0
  1943 ;;      Temps:          1       0       0
  1944 ;;      Totals:         1       0       0
  1945 ;;Total ram usage:        1 bytes
  1946 ;; Hardware stack levels used: 1
  1947 ;; Hardware stack levels required when called: 1
  1948 ;; This function calls:
  1949 ;;		Nothing
  1950 ;; This function is called by:
  1951 ;;		_checkButtons
  1952 ;;		_checkButton
  1953 ;; This function uses a non-reentrant model
  1954 ;;
  1955                           
  1956     018F                     _win:	
  1957                           ;psect for function _win
  1958                           
  1959     018F                     l1029:	
  1960                           ;incstack = 0
  1961                           ; Regs used in _win: [wreg+status,2+status,0+btemp+1]
  1962                           
  1963                           
  1964                           ;buttons.c: 39:     if (score.team1 == score.team2) return;
  1965     018F  1283               	bcf	3,5	;RP0=0, select bank0
  1966     0190  1303               	bcf	3,6	;RP1=0, select bank0
  1967     0191  082D               	movf	_score+1,w
  1968     0192  062C               	xorwf	_score,w
  1969     0193  1D03               	skipz
  1970     0194  2996               	goto	u601
  1971     0195  2997               	goto	u600
  1972     0196                     u601:
  1973     0196  2998               	goto	l1033
  1974     0197                     u600:
  1975     0197  29B6               	goto	l97
  1976     0198                     l1033:
  1977                           
  1978                           ;buttons.c: 40:     if (score.team1 > score.team2) score.win1++;
  1979     0198  082D               	movf	_score+1,w
  1980     0199  3A80               	xorlw	128
  1981     019A  00F2               	movwf	??_win
  1982     019B  082C               	movf	_score,w
  1983     019C  3A80               	xorlw	128
  1984     019D  02F2               	subwf	??_win,f
  1985     019E  1803               	skipnc
  1986     019F  29A1               	goto	u611
  1987     01A0  29A2               	goto	u610
  1988     01A1                     u611:
  1989     01A1  29A6               	goto	l1037
  1990     01A2                     u610:
  1991     01A2                     l1035:
  1992     01A2  3001               	movlw	1
  1993     01A3  00FF               	movwf	btemp+1
  1994     01A4  087F               	movf	btemp+1,w
  1995     01A5  07AE               	addwf	_score+2,f
  1996     01A6                     l1037:
  1997                           
  1998                           ;buttons.c: 41:     if (score.team2 > score.team1) score.win2++;
  1999     01A6  082C               	movf	_score,w
  2000     01A7  3A80               	xorlw	128
  2001     01A8  00F2               	movwf	??_win
  2002     01A9  082D               	movf	_score+1,w
  2003     01AA  3A80               	xorlw	128
  2004     01AB  02F2               	subwf	??_win,f
  2005     01AC  1803               	skipnc
  2006     01AD  29AF               	goto	u621
  2007     01AE  29B0               	goto	u620
  2008     01AF                     u621:
  2009     01AF  29B4               	goto	l1041
  2010     01B0                     u620:
  2011     01B0                     l1039:
  2012     01B0  3001               	movlw	1
  2013     01B1  00FF               	movwf	btemp+1
  2014     01B2  087F               	movf	btemp+1,w
  2015     01B3  07AF               	addwf	_score+3,f
  2016     01B4                     l1041:
  2017                           
  2018                           ;buttons.c: 42:     score.team1 = score.team2 = 0;
  2019     01B4  01AD               	clrf	_score+1
  2020     01B5  01AC               	clrf	_score
  2021     01B6                     l97:
  2022     01B6  0008               	return
  2023     01B7                     __end_of_win:
  2024                           
  2025                           	psect	text15
  2026     0113                     __ptext15:	
  2027 ;; *************** function _isr *****************
  2028 ;; Defined at:
  2029 ;;		line 3 in file "interrupt.c"
  2030 ;; Parameters:    Size  Location     Type
  2031 ;;		None
  2032 ;; Auto vars:     Size  Location     Type
  2033 ;;		None
  2034 ;; Return value:  Size  Location     Type
  2035 ;;                  1    wreg      void 
  2036 ;; Registers used:
  2037 ;;		wreg, status,2, status,0
  2038 ;; Tracked objects:
  2039 ;;		On entry : 0/0
  2040 ;;		On exit  : 0/0
  2041 ;;		Unchanged: 0/0
  2042 ;; Data sizes:     COMMON   BANK0   BANK1
  2043 ;;      Params:         0       0       0
  2044 ;;      Locals:         0       0       0
  2045 ;;      Temps:          2       0       0
  2046 ;;      Totals:         2       0       0
  2047 ;;Total ram usage:        2 bytes
  2048 ;; Hardware stack levels used: 1
  2049 ;; This function calls:
  2050 ;;		Nothing
  2051 ;; This function is called by:
  2052 ;;		Interrupt level 1
  2053 ;; This function uses a non-reentrant model
  2054 ;;
  2055                           
  2056     0113                     _isr:	
  2057                           ;psect for function _isr
  2058                           
  2059     0113                     i1l1153:
  2060                           
  2061                           ;interrupt.c: 4:     if (PIR1bits.TMR1IF) {
  2062     0113  1283               	bcf	3,5	;RP0=0, select bank0
  2063     0114  1303               	bcf	3,6	;RP1=0, select bank0
  2064     0115  1C0C               	btfss	12,0	;volatile
  2065     0116  2918               	goto	u80_21
  2066     0117  2919               	goto	u80_20
  2067     0118                     u80_21:
  2068     0118  2936               	goto	i1l159
  2069     0119                     u80_20:
  2070     0119                     i1l1155:
  2071                           
  2072                           ;interrupt.c: 5:         PIR1bits.TMR1IF = 0;
  2073     0119  100C               	bcf	12,0	;volatile
  2074     011A                     i1l1157:
  2075                           
  2076                           ;interrupt.c: 6:         if (timers[0]) timers[0]--;
  2077     011A  0831               	movf	_timers,w	;volatile
  2078     011B  0432               	iorwf	_timers+1,w	;volatile
  2079     011C  1903               	btfsc	3,2
  2080     011D  291F               	goto	u81_21
  2081     011E  2920               	goto	u81_20
  2082     011F                     u81_21:
  2083     011F  2926               	goto	i1l1161
  2084     0120                     u81_20:
  2085     0120                     i1l1159:
  2086     0120  3001               	movlw	1
  2087     0121  02B1               	subwf	_timers,f	;volatile
  2088     0122  3000               	movlw	0
  2089     0123  1C03               	skipc
  2090     0124  03B2               	decf	_timers+1,f	;volatile
  2091     0125  02B2               	subwf	_timers+1,f	;volatile
  2092     0126                     i1l1161:
  2093                           
  2094                           ;interrupt.c: 7:         if (timers[1]) timers[1]--;
  2095     0126  0833               	movf	_timers+2,w	;volatile
  2096     0127  0434               	iorwf	_timers+3,w	;volatile
  2097     0128  1903               	btfsc	3,2
  2098     0129  292B               	goto	u82_21
  2099     012A  292C               	goto	u82_20
  2100     012B                     u82_21:
  2101     012B  2932               	goto	i1l1165
  2102     012C                     u82_20:
  2103     012C                     i1l1163:
  2104     012C  3001               	movlw	1
  2105     012D  02B3               	subwf	_timers+2,f	;volatile
  2106     012E  3000               	movlw	0
  2107     012F  1C03               	skipc
  2108     0130  03B4               	decf	_timers+3,f	;volatile
  2109     0131  02B4               	subwf	_timers+3,f	;volatile
  2110     0132                     i1l1165:
  2111                           
  2112                           ;interrupt.c: 8:         TMR1 = 65535 - 3200;
  2113     0132  30F3               	movlw	243
  2114     0133  008F               	movwf	15	;volatile
  2115     0134  307F               	movlw	127
  2116     0135  008E               	movwf	14	;volatile
  2117     0136                     i1l159:
  2118     0136  0871               	movf	??_isr+1,w
  2119     0137  008A               	movwf	10
  2120     0138  0E70               	swapf	??_isr,w
  2121     0139  0083               	movwf	3
  2122     013A  0EFE               	swapf	btemp,f
  2123     013B  0E7E               	swapf	btemp,w
  2124     013C  0009               	retfie
  2125     013D                     __end_of_isr:
  2126     000C                     
  2127                           	psect	intentry
  2128     0004                     __pintentry:	
  2129                           ;incstack = 0
  2130                           ; Regs used in _isr: [wreg+status,2+status,0]
  2131                           
  2132     0004                     interrupt_function:
  2133     007E                     saved_w	set	btemp
  2134     0004  00FE               	movwf	btemp
  2135     0005  0E03               	swapf	3,w
  2136     0006  00F0               	movwf	??_isr
  2137     0007  080A               	movf	10,w
  2138     0008  00F1               	movwf	??_isr+1
  2139     0009  2913               	ljmp	_isr
  2140                           
  2141                           	psect	functab
  2142     0019                     __pfunctab:
  2143     0019                     __fptable:
  2144     0019                     fptable:
  2145     0019  00FF               	movwf	(btemp+1)& (0+127)
  2146     001A  3000               	movlw	high fptable
  2147     001B  008A               	movwf	10
  2148     001C  087F               	movf	(btemp+1)& (0+127),w
  2149     001D  0782               	addwf	2,f
  2150     001E                     fpbase:
  2151     001E  281E               	goto	fpbase	; Call via a null pointer and you will get stuck here.
  2152     001F                     fp__win:
  2153     001F  298F               	ljmp	_win
  2154     0020                     fp__up1:
  2155     0020  2A5D               	ljmp	_up1
  2156     0021                     fp__up2:
  2157     0021  2A4D               	ljmp	_up2
  2158     0022                     fp__down1:
  2159     0022  2A79               	ljmp	_down1
  2160     0023                     fp__down2:
  2161     0023  2A6D               	ljmp	_down2
  2162     0024                     fp__change:
  2163     0024  29F7               	ljmp	_change
  2164     0025                     __end_of__fptable:
  2165     007E                     btemp	set	126	;btemp
  2166     007E                     wtemp0	set	126
  2167                           
  2168                           	psect	config
  2169                           
  2170                           ;Config register CONFIG @ 0x2007
  2171                           ;	Oscillator Selection bits
  2172                           ;	FOSC = HS, HS oscillator
  2173                           ;	Watchdog Timer Enable bit
  2174                           ;	WDTE = OFF, WDT disabled
  2175                           ;	Power-up Timer Enable bit
  2176                           ;	PWRTE = OFF, PWRT disabled
  2177                           ;	FLASH Program Memory Code Protection bits
  2178                           ;	CP = OFF, Code protection off
  2179                           ;	Brown-out Reset Enable bit
  2180                           ;	BOREN = OFF, BOR disabled
  2181                           ;	Low Voltage In-Circuit Serial Programming Enable bit
  2182                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  2183                           ;	Data EE Memory Code Protection
  2184                           ;	CPD = OFF, Code Protection off
  2185                           ;	FLASH Program Memory Write Enable
  2186                           ;	WRT = ALL, Unprotected program memory may be written to by EECON control
  2187                           ;	In-Circuit Debugger Mode bit
  2188                           ;	DEBUG = 0x1, unprogrammed default
  2189     2007                     	org	8199
  2190     2007  3F3A               	dw	16186

Data Sizes:
    Strings     0
    Constant    16
    Data        0
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      12
    BANK0            80     12      21
    BANK1            32      0       0

Pointer List with Targets:

    checkButton@action	PTR FTN()void  size(1) Largest target is 1
		 -> change(), down1(), down2(), up1(), 
		 -> up2(), win(), 


Critical Paths under _main in COMMON

    _getNumber->_calcDigit
    _calcDigit->___awdiv
    _checkButtons->_checkButton
    _checkButton->_change
    _checkButton->_win

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_updateDisplay
    _getNumber->_calcDigit

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1545
                                              9 BANK0      3     3      0
                       _checkButtons
                              _setup
                      _updateDisplay
 ---------------------------------------------------------------------------------
 (1) _updateDisplay                                        2     2      0     976
                                              7 BANK0      2     2      0
                          _getNumber
 ---------------------------------------------------------------------------------
 (2) _getNumber                                            0     0      0     930
                          _calcDigit
 ---------------------------------------------------------------------------------
 (3) _calcDigit                                            8     7      1     930
                                             10 COMMON     1     0      1
                                              0 BANK0      7     7      0
                            ___awdiv
                             ___bmul
 ---------------------------------------------------------------------------------
 (4) ___bmul                                               3     2      1     168
                                              2 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     452
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checkButtons                                         2     2      0     569
                                              5 COMMON     2     2      0
                        _checkButton
 ---------------------------------------------------------------------------------
 (2) _checkButton                                          2     1      1     545
                                              3 COMMON     2     1      1
                             _change *
                              _down1 *
                              _down2 *
                                _up1 *
                                _up2 *
                                _win *
 ---------------------------------------------------------------------------------
 (3) _win                                                  1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _up2                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _up1                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _down2                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _down1                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _change                                               1     1      0      23
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _checkButtons
     _checkButton
       _change *
       _down1 *
       _down2 *
       _up1 *
       _up2 *
       _win *
   _setup
   _updateDisplay
     _getNumber
       _calcDigit
         ___awdiv
         ___bmul

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA              40      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      21       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      C      15       5       26.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            20      0       0       6        0.0%
BANK1               20      0       0       7        0.0%
DATA                 0      0      21       8        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Mon Jul 22 13:57:23 2024

   __end_of_checkButtons 00E1                        pc 0002           ___bmul@product 0073  
                     l43 01F6                       l75 026C                       l83 0284  
                     l93 020E                       l69 01DD                       l79 025C  
                     l87 0278                       l97 01B6             ___awdiv@sign 0077  
                     fsr 0004                      l104 00E0                      l124 0111  
                    l125 0112                      l136 0165                      l129 018E  
                    l271 0239                      l398 008B                      l871 01E8  
                    l951 022B                      l881 01ED                      l873 01E9  
                    l865 01DE                      l953 022F                      l883 01F3  
                    l875 01EA                      l867 01E4                      l971 0031  
                    l963 0025                      l955 0231                      l947 0226  
                    l885 01F4                      l877 01EB                      l869 01E5  
                    l981 0046                      l973 0035                      l965 0026  
                    l957 0233                      l949 0227                      l887 01F5  
                    l879 01EC                      l991 0069                      l983 0049  
                    l975 003A                      l967 002A                      l959 0238  
                    l993 006F                      l985 0050                      l977 003E  
                    l969 002F                      l995 0070                      l987 0054  
                    l979 0040                      _GIE 005F                      l997 0077  
                    l989 0058                      l999 007D                      u500 0069  
                    u420 022B                      u501 0068                      u421 022A  
                    u430 0238                      u431 0237                      u600 0197  
                    u520 007D                      u440 002A                      u601 0196  
                    u521 007C                      u505 0065                      u441 0029  
                    u610 01A2                      u530 0082                      u450 0035  
                    u611 01A1                      u531 0081                      u515 0071  
                    u451 0034                      u620 01B0                      u540 026A  
                    u460 0046                      u700 0183                      u621 01AF  
                    u541 0269                      u461 0045                      u701 0182  
                    u550 025A                      u630 0102                      u710 018B  
                    u551 0259                      u631 0101                      u711 018A  
                    u560 0283                      u640 01BD                      u720 009A  
                    u480 0058                      u561 0282                      u641 01BC  
                    u721 0099                      u481 0057                      u570 0277  
                    u650 01C2                      u730 00A8                      u571 0276  
                    u651 01C1                      u731 00A7                      u475 004A  
                    u580 0200                      u660 01C9                      u740 00B4  
                    u581 01FF                      u661 01C8                      u741 00B3  
                    u590 0207                      u670 01D9                      u750 00C3  
                    u591 0206                      u671 01D8                      u751 00C2  
                    u495 0059                      u760 00CF                      u680 016E  
                    u761 00CE                      u681 016D                      u770 00DD  
                    u690 0178                      u771 00DC                      u691 0177  
                    u780 0145                      u781 0144                      u837 0243  
                    u790 0154                      u791 0153                      _up1 025D  
                    _up2 024D                      _isr 0113                      fsr0 0004  
                    _win 018F                     l1001 0082                     l1011 024D  
                   l1003 0087                     l1013 025A                     l1021 0277  
                   l1101 018B                     l1007 025D                     l1015 0279  
                   l1023 01F7                     l1111 008E                     l1041 01B4  
                   l1033 0198                     l1009 026A                     l1017 0283  
                   l1025 0200                     l1121 00CF                     l1113 009A  
                   l1105 018D                     l1035 01A2                     l1019 026D  
                   l1027 0208                     l1123 00DD                     l1115 00A8  
                   l1043 00E4                     l1131 0146                     l1037 01A6  
                   l1029 018F                     l1061 01C4                     l1053 01B8  
                   l1117 00B4                     l1125 00DE                     l1109 008C  
                   l1045 00FC                     l1141 0161                     l1133 014A  
                   l1039 01B0                     l1063 01C9                     l1055 01BD  
                   l1119 00C3                     l1047 0102                     l1143 0163  
                   l1135 0154                     l1127 013D                     l1151 024A  
                   l1065 01CF                     l1057 01C2                     l1049 010A  
                   l1081 0166                     l1137 0155                     l1145 023A  
                   l1075 01DA                     l1083 016E                     l1139 015C  
                   l1147 023B                     l1069 01D1                     l1093 017D  
                   l1149 0249                     l1095 0183                     l1087 0172  
                   l1089 0178                     l1099 0185                     ?_up1 0070  
                   ?_up2 0070                     ?_isr 0070                     ?_win 0070  
                   _PEIE 005E                     _TMR1 000E           ?_updateDisplay 0070  
        __end_of_NUMBERS 021F                     _main 023A                     btemp 007E  
                   start 000A        ___bmul@multiplier 0074                    ??_up1 0072  
                  ??_up2 0072                    ??_isr 0070                    ??_win 0072  
                  ?_main 0070          __end_of___awdiv 008C          ___awdiv@divisor 0072  
                  _T1CON 0010                    i1l159 0136          ___awdiv@counter 0076  
                  _PORTB 0006                    _PORTC 0007                    u80_20 0119  
                  u80_21 0118                    u81_20 0120                    u81_21 011F  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  u82_20 012C                    u82_21 012B                    _down1 0279  
                  _down2 026D                    _score 002C                    _setup 01DE  
                  fpbase 001E                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 000B             __end_of_main 024D  
                 ??_main 0029                   _ADCON0 001F                   ?_down1 0070  
                 ?_down2 0070          ??_updateDisplay 007B         ___awdiv@dividend 0074  
                 ?_setup 0070                   _DIGITS 021F                   i1l1161 0126  
                 i1l1153 0113                   i1l1163 012C                   i1l1155 0119  
                 i1l1165 0132                   i1l1157 011A                   i1l1159 0120  
       __end_of__fptable 0025      updateDisplay@number 0027                   ___bmul 0225  
              ??___awdiv 0076                   _change 01F7                   _button 007B  
       ___awdiv@quotient 0078                   _timers 0031                   fp__up1 0020  
                 fp__up2 0021                   fp__win 001F                   fptable 0019  
                 fptotal 000C                   saved_w 007E            _calcDigit$237 0022  
           _checkButtons 008C  __end_of__initialization 0017      ___bmul@multiplicand 0072  
         __pcstackCOMMON 0070            __end_of_down1 0285            __end_of_down2 0279  
          __end_of_setup 01F7                  ??_down1 0072                  ??_down2 0072  
                ??_setup 0072               __pbssBANK0 002C               __pmaintext 023A  
                ?___bmul 0072                  ?_change 0070               __pintentry 0004  
             calcDigit@d 0026               calcDigit@u 0024        __end_of_calcDigit 0113  
                _NUMBERS 0215               __stringtab 020F        __end_of_getNumber 018F  
                ___awdiv 0025            ??_checkButton 0074                  __ptext1 013D  
                __ptext2 0166                  __ptext3 00E1                  __ptext4 0225  
                __ptext5 0025                  __ptext6 01DE                  __ptext7 008C  
                __ptext8 01B7                  __ptext9 01F7                _T1CONbits 0010  
         checkButton@btn 0074        checkButton@action 0073     end_of_initialization 0017  
              _PORTAbits 0005      __end_of_checkButton 01DE    __end_of_updateDisplay 0166  
         __end_of_DIGITS 0225           calcDigit@dozen 007A           calcDigit@value 0025  
         __end_of___bmul 023A           __end_of_change 020F      start_initialization 000B  
            __end_of_up1 026D              __end_of_up2 025D              __end_of_isr 013D  
            __end_of_win 01B7       updateDisplay@digit 0028                 ??___bmul 0073  
               ??_change 0072              _checkButton 01B7              __pbssCOMMON 007B  
              ___latbits 0000            __pcstackBANK0 0020        __size_of__fptable 000C  
              _calcDigit 00E1                __pfunctab 0019                 ?___awdiv 0072  
              _getNumber 0166                __pstrings 020F                change@aux 0072  
             ?_calcDigit 007A        interrupt_function 0004                 _PIE1bits 008C  
               _PIR1bits 000C               ?_getNumber 0070                fp__change 0024  
            __stringbase 0214               _ADCON1bits 009F            ?_checkButtons 0070  
       _checkButtons$216 0076       __end_of__stringtab 0215                 __fptable 0019  
         ??_checkButtons 0075                 __ptext10 026D                 __ptext11 0279  
               __ptext12 024D                 __ptext13 025D                 __ptext14 018F  
               __ptext15 0113              ??_calcDigit 0020                 fp__down1 0022  
               fp__down2 0023              ??_getNumber 007B             ?_checkButton 0073  
               intlevel1 0019                stringcode 020F                 stringdir 020F  
               stringtab 020F            _updateDisplay 013D  
