

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Thu Jul 18 18:23:07 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F870
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	intentry,global,class=CODE,delta=2
    27                           	psect	functab,global,class=ENTRY,delta=2
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    29                           	dabs	1,0x7E,2
    30     0000                     
    31                           ; Generated 12/10/2023 GMT
    32                           ; 
    33                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution. Publication is not required when
    47                           ;        this file is used in an embedded application.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F870 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65     0000                     	;# 
    66     0001                     	;# 
    67     0002                     	;# 
    68     0003                     	;# 
    69     0004                     	;# 
    70     0005                     	;# 
    71     0006                     	;# 
    72     0007                     	;# 
    73     000A                     	;# 
    74     000B                     	;# 
    75     000C                     	;# 
    76     000D                     	;# 
    77     000E                     	;# 
    78     000E                     	;# 
    79     000F                     	;# 
    80     0010                     	;# 
    81     0011                     	;# 
    82     0012                     	;# 
    83     0015                     	;# 
    84     0015                     	;# 
    85     0016                     	;# 
    86     0017                     	;# 
    87     0018                     	;# 
    88     0019                     	;# 
    89     001A                     	;# 
    90     001E                     	;# 
    91     001F                     	;# 
    92     0081                     	;# 
    93     0085                     	;# 
    94     0086                     	;# 
    95     0087                     	;# 
    96     008C                     	;# 
    97     008D                     	;# 
    98     008E                     	;# 
    99     0092                     	;# 
   100     0098                     	;# 
   101     0099                     	;# 
   102     009E                     	;# 
   103     009F                     	;# 
   104     010C                     	;# 
   105     010D                     	;# 
   106     010E                     	;# 
   107     010F                     	;# 
   108     018C                     	;# 
   109     018D                     	;# 
   110     0000                     	;# 
   111     0001                     	;# 
   112     0002                     	;# 
   113     0003                     	;# 
   114     0004                     	;# 
   115     0005                     	;# 
   116     0006                     	;# 
   117     0007                     	;# 
   118     000A                     	;# 
   119     000B                     	;# 
   120     000C                     	;# 
   121     000D                     	;# 
   122     000E                     	;# 
   123     000E                     	;# 
   124     000F                     	;# 
   125     0010                     	;# 
   126     0011                     	;# 
   127     0012                     	;# 
   128     0015                     	;# 
   129     0015                     	;# 
   130     0016                     	;# 
   131     0017                     	;# 
   132     0018                     	;# 
   133     0019                     	;# 
   134     001A                     	;# 
   135     001E                     	;# 
   136     001F                     	;# 
   137     0081                     	;# 
   138     0085                     	;# 
   139     0086                     	;# 
   140     0087                     	;# 
   141     008C                     	;# 
   142     008D                     	;# 
   143     008E                     	;# 
   144     0092                     	;# 
   145     0098                     	;# 
   146     0099                     	;# 
   147     009E                     	;# 
   148     009F                     	;# 
   149     010C                     	;# 
   150     010D                     	;# 
   151     010E                     	;# 
   152     010F                     	;# 
   153     018C                     	;# 
   154     018D                     	;# 
   155     0000                     	;# 
   156     0001                     	;# 
   157     0002                     	;# 
   158     0003                     	;# 
   159     0004                     	;# 
   160     0005                     	;# 
   161     0006                     	;# 
   162     0007                     	;# 
   163     000A                     	;# 
   164     000B                     	;# 
   165     000C                     	;# 
   166     000D                     	;# 
   167     000E                     	;# 
   168     000E                     	;# 
   169     000F                     	;# 
   170     0010                     	;# 
   171     0011                     	;# 
   172     0012                     	;# 
   173     0015                     	;# 
   174     0015                     	;# 
   175     0016                     	;# 
   176     0017                     	;# 
   177     0018                     	;# 
   178     0019                     	;# 
   179     001A                     	;# 
   180     001E                     	;# 
   181     001F                     	;# 
   182     0081                     	;# 
   183     0085                     	;# 
   184     0086                     	;# 
   185     0087                     	;# 
   186     008C                     	;# 
   187     008D                     	;# 
   188     008E                     	;# 
   189     0092                     	;# 
   190     0098                     	;# 
   191     0099                     	;# 
   192     009E                     	;# 
   193     009F                     	;# 
   194     010C                     	;# 
   195     010D                     	;# 
   196     010E                     	;# 
   197     010F                     	;# 
   198     018C                     	;# 
   199     018D                     	;# 
   200     0000                     	;# 
   201     0001                     	;# 
   202     0002                     	;# 
   203     0003                     	;# 
   204     0004                     	;# 
   205     0005                     	;# 
   206     0006                     	;# 
   207     0007                     	;# 
   208     000A                     	;# 
   209     000B                     	;# 
   210     000C                     	;# 
   211     000D                     	;# 
   212     000E                     	;# 
   213     000E                     	;# 
   214     000F                     	;# 
   215     0010                     	;# 
   216     0011                     	;# 
   217     0012                     	;# 
   218     0015                     	;# 
   219     0015                     	;# 
   220     0016                     	;# 
   221     0017                     	;# 
   222     0018                     	;# 
   223     0019                     	;# 
   224     001A                     	;# 
   225     001E                     	;# 
   226     001F                     	;# 
   227     0081                     	;# 
   228     0085                     	;# 
   229     0086                     	;# 
   230     0087                     	;# 
   231     008C                     	;# 
   232     008D                     	;# 
   233     008E                     	;# 
   234     0092                     	;# 
   235     0098                     	;# 
   236     0099                     	;# 
   237     009E                     	;# 
   238     009F                     	;# 
   239     010C                     	;# 
   240     010D                     	;# 
   241     010E                     	;# 
   242     010F                     	;# 
   243     018C                     	;# 
   244     018D                     	;# 
   245     0000                     	;# 
   246     0001                     	;# 
   247     0002                     	;# 
   248     0003                     	;# 
   249     0004                     	;# 
   250     0005                     	;# 
   251     0006                     	;# 
   252     0007                     	;# 
   253     000A                     	;# 
   254     000B                     	;# 
   255     000C                     	;# 
   256     000D                     	;# 
   257     000E                     	;# 
   258     000E                     	;# 
   259     000F                     	;# 
   260     0010                     	;# 
   261     0011                     	;# 
   262     0012                     	;# 
   263     0015                     	;# 
   264     0015                     	;# 
   265     0016                     	;# 
   266     0017                     	;# 
   267     0018                     	;# 
   268     0019                     	;# 
   269     001A                     	;# 
   270     001E                     	;# 
   271     001F                     	;# 
   272     0081                     	;# 
   273     0085                     	;# 
   274     0086                     	;# 
   275     0087                     	;# 
   276     008C                     	;# 
   277     008D                     	;# 
   278     008E                     	;# 
   279     0092                     	;# 
   280     0098                     	;# 
   281     0099                     	;# 
   282     009E                     	;# 
   283     009F                     	;# 
   284     010C                     	;# 
   285     010D                     	;# 
   286     010E                     	;# 
   287     010F                     	;# 
   288     018C                     	;# 
   289     018D                     	;# 
   290                           
   291                           	psect	strings
   292     020A                     __pstrings:
   293     020A                     stringtab:
   294     020A                     __stringtab:
   295     020A                     stringcode:	
   296                           ;	String table - string pointers are 1 byte each
   297                           
   298     020A                     stringdir:
   299     020A  3002               	movlw	high stringdir
   300     020B  008A               	movwf	10
   301     020C  0804               	movf	4,w
   302     020D  0A84               	incf	4,f
   303     020E  0782               	addwf	2,f
   304     020F                     __stringbase:
   305     020F  3400               	retlw	0
   306     0210                     __end_of__stringtab:
   307     0210                     _NUMBERS:
   308     0210  343F               	retlw	63
   309     0211  3406               	retlw	6
   310     0212  345B               	retlw	91
   311     0213  344F               	retlw	79
   312     0214  3466               	retlw	102
   313     0215  346D               	retlw	109
   314     0216  347D               	retlw	125
   315     0217  3407               	retlw	7
   316     0218  347F               	retlw	127
   317     0219  344F               	retlw	79
   318     021A                     __end_of_NUMBERS:
   319     021A                     _DIGITS:
   320     021A  343E               	retlw	62
   321     021B  343D               	retlw	61
   322     021C  343B               	retlw	59
   323     021D  3437               	retlw	55
   324     021E  342F               	retlw	47
   325     021F  341F               	retlw	31
   326     0220                     __end_of_DIGITS:
   327     000E                     _TMR1	set	14
   328     000C                     _PIR1bits	set	12
   329     0005                     _PORTAbits	set	5
   330     001F                     _ADCON0	set	31
   331     0010                     _T1CONbits	set	16
   332     0010                     _T1CON	set	16
   333     0007                     _PORTC	set	7
   334     0006                     _PORTB	set	6
   335     005F                     _GIE	set	95
   336     005E                     _PEIE	set	94
   337     008C                     _PIE1bits	set	140
   338     009F                     _ADCON1bits	set	159
   339     0087                     _TRISC	set	135
   340     0086                     _TRISB	set	134
   341     0085                     _TRISA	set	133
   342                           
   343                           	psect	cinit
   344     000B                     start_initialization:	
   345                           ; #config settings
   346                           
   347     000B                     __initialization:
   348                           
   349                           ; Clear objects allocated to COMMON
   350     000B  01FB               	clrf	__pbssCOMMON& (0+127)
   351                           
   352                           ; Clear objects allocated to BANK0
   353     000C  1283               	bcf	3,5	;RP0=0, select bank0
   354     000D  1303               	bcf	3,6	;RP1=0, select bank0
   355     000E  01AA               	clrf	__pbssBANK0& (0+127)
   356     000F  01AB               	clrf	(__pbssBANK0+1)& (0+127)
   357     0010  01AC               	clrf	(__pbssBANK0+2)& (0+127)
   358     0011  01AD               	clrf	(__pbssBANK0+3)& (0+127)
   359     0012  01AE               	clrf	(__pbssBANK0+4)& (0+127)
   360     0013  01AF               	clrf	(__pbssBANK0+5)& (0+127)
   361     0014  01B0               	clrf	(__pbssBANK0+6)& (0+127)
   362     0015  01B1               	clrf	(__pbssBANK0+7)& (0+127)
   363     0016  01B2               	clrf	(__pbssBANK0+8)& (0+127)
   364     0017                     end_of_initialization:	
   365                           ;End of C runtime variable initialization code
   366                           
   367     0017                     __end_of__initialization:
   368     0017  0183               	clrf	3
   369     0018  2A35               	ljmp	_main	;jump to C main() function
   370                           
   371                           	psect	bssCOMMON
   372     007B                     __pbssCOMMON:
   373     007B                     _button:
   374     007B                     	ds	1
   375                           
   376                           	psect	bssBANK0
   377     002A                     __pbssBANK0:
   378     002A                     _score:
   379     002A                     	ds	5
   380     002F                     _timers:
   381     002F                     	ds	4
   382                           
   383                           	psect	cstackCOMMON
   384     0070                     __pcstackCOMMON:
   385     0070                     ?_checkButtons:
   386     0070                     ?_updateDisplay:	
   387                           ; 1 bytes @ 0x0
   388                           
   389     0070                     ?_setup:	
   390                           ; 1 bytes @ 0x0
   391                           
   392     0070                     ?_main:	
   393                           ; 1 bytes @ 0x0
   394                           
   395     0070                     ?_up1:	
   396                           ; 1 bytes @ 0x0
   397                           
   398     0070                     ?_up2:	
   399                           ; 1 bytes @ 0x0
   400                           
   401     0070                     ?_down1:	
   402                           ; 1 bytes @ 0x0
   403                           
   404     0070                     ?_down2:	
   405                           ; 1 bytes @ 0x0
   406                           
   407     0070                     ?_change:	
   408                           ; 1 bytes @ 0x0
   409                           
   410     0070                     ?_win:	
   411                           ; 1 bytes @ 0x0
   412                           
   413     0070                     ?_getNumber:	
   414                           ; 1 bytes @ 0x0
   415                           
   416     0070                     ?_isr:	
   417                           ; 1 bytes @ 0x0
   418                           
   419     0070                     ??_isr:	
   420                           ; 1 bytes @ 0x0
   421                           
   422                           
   423                           ; 1 bytes @ 0x0
   424     0070                     	ds	2
   425     0072                     ??_setup:
   426     0072                     ??_up1:	
   427                           ; 1 bytes @ 0x2
   428                           
   429     0072                     ??_up2:	
   430                           ; 1 bytes @ 0x2
   431                           
   432     0072                     ??_down1:	
   433                           ; 1 bytes @ 0x2
   434                           
   435     0072                     ??_down2:	
   436                           ; 1 bytes @ 0x2
   437                           
   438     0072                     ??_change:	
   439                           ; 1 bytes @ 0x2
   440                           
   441     0072                     ??_win:	
   442                           ; 1 bytes @ 0x2
   443                           
   444     0072                     ?___bmul:	
   445                           ; 1 bytes @ 0x2
   446                           
   447     0072                     ?___awdiv:	
   448                           ; 1 bytes @ 0x2
   449                           
   450     0072                     change@aux:	
   451                           ; 2 bytes @ 0x2
   452                           
   453     0072                     ___bmul@multiplicand:	
   454                           ; 1 bytes @ 0x2
   455                           
   456     0072                     ___awdiv@divisor:	
   457                           ; 1 bytes @ 0x2
   458                           
   459                           
   460                           ; 2 bytes @ 0x2
   461     0072                     	ds	1
   462     0073                     ?_checkButton:
   463     0073                     ??___bmul:	
   464                           ; 1 bytes @ 0x3
   465                           
   466     0073                     checkButton@action:	
   467                           ; 1 bytes @ 0x3
   468                           
   469     0073                     ___bmul@product:	
   470                           ; 1 bytes @ 0x3
   471                           
   472                           
   473                           ; 1 bytes @ 0x3
   474     0073                     	ds	1
   475     0074                     ??_checkButton:
   476     0074                     checkButton@btn:	
   477                           ; 1 bytes @ 0x4
   478                           
   479     0074                     ___bmul@multiplier:	
   480                           ; 1 bytes @ 0x4
   481                           
   482     0074                     ___awdiv@dividend:	
   483                           ; 1 bytes @ 0x4
   484                           
   485                           
   486                           ; 2 bytes @ 0x4
   487     0074                     	ds	1
   488     0075                     ??_checkButtons:
   489                           
   490                           ; 1 bytes @ 0x5
   491     0075                     	ds	1
   492     0076                     ??___awdiv:
   493     0076                     _checkButtons$216:	
   494                           ; 1 bytes @ 0x6
   495                           
   496     0076                     ___awdiv@counter:	
   497                           ; 1 bytes @ 0x6
   498                           
   499                           
   500                           ; 1 bytes @ 0x6
   501     0076                     	ds	1
   502     0077                     ___awdiv@sign:
   503                           
   504                           ; 1 bytes @ 0x7
   505     0077                     	ds	1
   506     0078                     ___awdiv@quotient:
   507                           
   508                           ; 2 bytes @ 0x8
   509     0078                     	ds	2
   510     007A                     ?_calcDigit:
   511     007A                     calcDigit@digit:	
   512                           ; 1 bytes @ 0xA
   513                           
   514                           
   515                           ; 1 bytes @ 0xA
   516     007A                     	ds	1
   517     007B                     ??_updateDisplay:
   518     007B                     ??_getNumber:	
   519                           ; 1 bytes @ 0xB
   520                           
   521                           
   522                           	psect	cstackBANK0
   523     0020                     __pcstackBANK0:	
   524                           ; 1 bytes @ 0xB
   525                           
   526     0020                     ??_calcDigit:
   527                           
   528                           ; 1 bytes @ 0x0
   529     0020                     	ds	2
   530     0022                     _calcDigit$237:
   531                           
   532                           ; 2 bytes @ 0x2
   533     0022                     	ds	2
   534     0024                     calcDigit@u:
   535                           
   536                           ; 1 bytes @ 0x4
   537     0024                     	ds	1
   538     0025                     calcDigit@value:
   539                           
   540                           ; 1 bytes @ 0x5
   541     0025                     	ds	1
   542     0026                     calcDigit@d:
   543                           
   544                           ; 1 bytes @ 0x6
   545     0026                     	ds	1
   546     0027                     ??_main:
   547                           
   548                           ; 1 bytes @ 0x7
   549     0027                     	ds	3
   550                           
   551                           	psect	maintext
   552     0235                     __pmaintext:	
   553 ;;
   554 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   555 ;;
   556 ;; *************** function _main *****************
   557 ;; Defined at:
   558 ;;		line 22 in file "main.c"
   559 ;; Parameters:    Size  Location     Type
   560 ;;		None
   561 ;; Auto vars:     Size  Location     Type
   562 ;;		None
   563 ;; Return value:  Size  Location     Type
   564 ;;                  1    wreg      void 
   565 ;; Registers used:
   566 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   567 ;; Tracked objects:
   568 ;;		On entry : B00/0
   569 ;;		On exit  : 0/0
   570 ;;		Unchanged: 0/0
   571 ;; Data sizes:     COMMON   BANK0   BANK1
   572 ;;      Params:         0       0       0
   573 ;;      Locals:         0       0       0
   574 ;;      Temps:          0       3       0
   575 ;;      Totals:         0       3       0
   576 ;;Total ram usage:        3 bytes
   577 ;; Hardware stack levels required when called: 5
   578 ;; This function calls:
   579 ;;		_checkButtons
   580 ;;		_setup
   581 ;;		_updateDisplay
   582 ;; This function is called by:
   583 ;;		Startup code after reset
   584 ;; This function uses a non-reentrant model
   585 ;;
   586                           
   587     0235                     _main:	
   588                           ;psect for function _main
   589                           
   590     0235                     l1139:	
   591                           ;incstack = 0
   592                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   593                           
   594                           
   595                           ;main.c: 24:     setup();
   596     0235  21DA               	fcall	_setup
   597     0236                     l1141:
   598                           
   599                           ;main.c: 26:     _delay((unsigned long)((500)*(12800000L/4000.0)));
   600     0236  3009               	movlw	9
   601     0237  1283               	bcf	3,5	;RP0=0, select bank0
   602     0238  1303               	bcf	3,6	;RP1=0, select bank0
   603     0239  00A9               	movwf	??_main+2
   604     023A  301E               	movlw	30
   605     023B  00A8               	movwf	??_main+1
   606     023C  30E4               	movlw	228
   607     023D  00A7               	movwf	??_main
   608     023E                     u837:
   609     023E  0BA7               	decfsz	??_main,f
   610     023F  2A3E               	goto	u837
   611     0240  0BA8               	decfsz	??_main+1,f
   612     0241  2A3E               	goto	u837
   613     0242  0BA9               	decfsz	??_main+2,f
   614     0243  2A3E               	goto	u837
   615     0244                     l1143:
   616                           
   617                           ;main.c: 29:         checkButtons();
   618     0244  208C               	fcall	_checkButtons
   619     0245                     l1145:
   620                           
   621                           ;main.c: 30:         updateDisplay();
   622     0245  21B5               	fcall	_updateDisplay
   623     0246  2A44               	goto	l1143
   624     0247  280A               	ljmp	start
   625     0248                     __end_of_main:
   626                           
   627                           	psect	text1
   628     01B5                     __ptext1:	
   629 ;; *************** function _updateDisplay *****************
   630 ;; Defined at:
   631 ;;		line 17 in file "display.c"
   632 ;; Parameters:    Size  Location     Type
   633 ;;		None
   634 ;; Auto vars:     Size  Location     Type
   635 ;;		None
   636 ;; Return value:  Size  Location     Type
   637 ;;                  1    wreg      void 
   638 ;; Registers used:
   639 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   640 ;; Tracked objects:
   641 ;;		On entry : 0/0
   642 ;;		On exit  : 0/0
   643 ;;		Unchanged: 0/0
   644 ;; Data sizes:     COMMON   BANK0   BANK1
   645 ;;      Params:         0       0       0
   646 ;;      Locals:         0       0       0
   647 ;;      Temps:          0       0       0
   648 ;;      Totals:         0       0       0
   649 ;;Total ram usage:        0 bytes
   650 ;; Hardware stack levels used: 1
   651 ;; Hardware stack levels required when called: 4
   652 ;; This function calls:
   653 ;;		_getNumber
   654 ;; This function is called by:
   655 ;;		_main
   656 ;; This function uses a non-reentrant model
   657 ;;
   658                           
   659     01B5                     _updateDisplay:	
   660                           ;psect for function _updateDisplay
   661                           
   662     01B5                     l1125:	
   663                           ;incstack = 0
   664                           ; Regs used in _updateDisplay: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   665                           
   666                           
   667                           ;display.c: 18:     if (timers[0]) return;
   668     01B5  1283               	bcf	3,5	;RP0=0, select bank0
   669     01B6  1303               	bcf	3,6	;RP1=0, select bank0
   670     01B7  082F               	movf	_timers,w	;volatile
   671     01B8  0430               	iorwf	_timers+1,w	;volatile
   672     01B9  1903               	btfsc	3,2
   673     01BA  29BC               	goto	u781
   674     01BB  29BD               	goto	u780
   675     01BC                     u781:
   676     01BC  29BE               	goto	l1129
   677     01BD                     u780:
   678     01BD  29D9               	goto	l136
   679     01BE                     l1129:
   680                           
   681                           ;display.c: 19:     timers[0] = 100;
   682     01BE  3064               	movlw	100
   683     01BF  00AF               	movwf	_timers	;volatile
   684     01C0  3000               	movlw	0
   685     01C1  00B0               	movwf	_timers+1	;volatile
   686     01C2                     l1131:
   687                           
   688                           ;display.c: 21:     if (++score.digit > 5) score.digit = 0;
   689     01C2  3001               	movlw	1
   690     01C3  00FF               	movwf	btemp+1
   691     01C4  087F               	movf	btemp+1,w
   692     01C5  07AE               	addwf	_score+4,f
   693     01C6  3006               	movlw	6
   694     01C7  022E               	subwf	_score+4,w
   695     01C8  1C03               	skipc
   696     01C9  29CB               	goto	u791
   697     01CA  29CC               	goto	u790
   698     01CB                     u791:
   699     01CB  29CD               	goto	l1135
   700     01CC                     u790:
   701     01CC                     l1133:
   702     01CC  01AE               	clrf	_score+4
   703     01CD                     l1135:
   704                           
   705                           ;display.c: 23:     PORTB = NUMBERS[getNumber()];
   706     01CD  213D               	fcall	_getNumber
   707     01CE  3E01               	addlw	low ((_NUMBERS-__stringbase)| (0+32768))
   708     01CF  0084               	movwf	4
   709     01D0  220A               	fcall	stringdir
   710     01D1  1283               	bcf	3,5	;RP0=0, select bank0
   711     01D2  1303               	bcf	3,6	;RP1=0, select bank0
   712     01D3  0086               	movwf	6	;volatile
   713     01D4                     l1137:
   714                           
   715                           ;display.c: 24:     PORTC = DIGITS[score.digit];
   716     01D4  082E               	movf	_score+4,w
   717     01D5  3E0B               	addlw	low ((_DIGITS-__stringbase)| (0+32768))
   718     01D6  0084               	movwf	4
   719     01D7  220A               	fcall	stringdir
   720     01D8  0087               	movwf	7	;volatile
   721     01D9                     l136:
   722     01D9  0008               	return
   723     01DA                     __end_of_updateDisplay:
   724                           
   725                           	psect	text2
   726     013D                     __ptext2:	
   727 ;; *************** function _getNumber *****************
   728 ;; Defined at:
   729 ;;		line 9 in file "display.c"
   730 ;; Parameters:    Size  Location     Type
   731 ;;		None
   732 ;; Auto vars:     Size  Location     Type
   733 ;;		None
   734 ;; Return value:  Size  Location     Type
   735 ;;                  1    wreg      unsigned char 
   736 ;; Registers used:
   737 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   738 ;; Tracked objects:
   739 ;;		On entry : 0/0
   740 ;;		On exit  : 0/0
   741 ;;		Unchanged: 0/0
   742 ;; Data sizes:     COMMON   BANK0   BANK1
   743 ;;      Params:         0       0       0
   744 ;;      Locals:         0       0       0
   745 ;;      Temps:          0       0       0
   746 ;;      Totals:         0       0       0
   747 ;;Total ram usage:        0 bytes
   748 ;; Hardware stack levels used: 1
   749 ;; Hardware stack levels required when called: 3
   750 ;; This function calls:
   751 ;;		_calcDigit
   752 ;; This function is called by:
   753 ;;		_updateDisplay
   754 ;; This function uses a non-reentrant model
   755 ;;
   756                           
   757     013D                     _getNumber:	
   758                           ;psect for function _getNumber
   759                           
   760     013D                     l1079:	
   761                           ;incstack = 0
   762                           ; Regs used in _getNumber: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   763                           
   764                           
   765                           ;display.c: 10:     if (score.digit < 2) return calcDigit(score.team1, 0);
   766     013D  3002               	movlw	2
   767     013E  1283               	bcf	3,5	;RP0=0, select bank0
   768     013F  1303               	bcf	3,6	;RP1=0, select bank0
   769     0140  022E               	subwf	_score+4,w
   770     0141  1803               	skipnc
   771     0142  2944               	goto	u681
   772     0143  2945               	goto	u680
   773     0144                     u681:
   774     0144  2949               	goto	l1085
   775     0145                     u680:
   776     0145                     l1081:
   777     0145  01FA               	clrf	calcDigit@digit
   778     0146  082A               	movf	_score,w
   779     0147  20E1               	fcall	_calcDigit
   780     0148  2965               	goto	l129
   781     0149                     l1085:
   782                           
   783                           ;display.c: 11:     if (score.digit < 4) return calcDigit(score.team2, 2);
   784     0149  3004               	movlw	4
   785     014A  022E               	subwf	_score+4,w
   786     014B  1803               	skipnc
   787     014C  294E               	goto	u691
   788     014D  294F               	goto	u690
   789     014E                     u691:
   790     014E  2954               	goto	l1091
   791     014F                     u690:
   792     014F                     l1087:
   793     014F  3002               	movlw	2
   794     0150  00FA               	movwf	calcDigit@digit
   795     0151  082B               	movf	_score+1,w
   796     0152  20E1               	fcall	_calcDigit
   797     0153  2965               	goto	l129
   798     0154                     l1091:
   799                           
   800                           ;display.c: 12:     if (score.digit == 4) return score.win1;
   801     0154  3004               	movlw	4
   802     0155  062E               	xorwf	_score+4,w
   803     0156  1D03               	btfss	3,2
   804     0157  2959               	goto	u701
   805     0158  295A               	goto	u700
   806     0159                     u701:
   807     0159  295C               	goto	l1097
   808     015A                     u700:
   809     015A                     l1093:
   810     015A  082C               	movf	_score+2,w
   811     015B  2965               	goto	l129
   812     015C                     l1097:
   813                           
   814                           ;display.c: 13:     if (score.digit == 5) return score.win2;
   815     015C  3005               	movlw	5
   816     015D  062E               	xorwf	_score+4,w
   817     015E  1D03               	btfss	3,2
   818     015F  2961               	goto	u711
   819     0160  2962               	goto	u710
   820     0161                     u711:
   821     0161  2964               	goto	l1103
   822     0162                     u710:
   823     0162                     l1099:
   824     0162  082D               	movf	_score+3,w
   825     0163  2965               	goto	l129
   826     0164                     l1103:
   827                           
   828                           ;display.c: 14:     return 0;
   829     0164  3000               	movlw	0
   830     0165                     l129:
   831     0165  0008               	return
   832     0166                     __end_of_getNumber:
   833                           
   834                           	psect	text3
   835     00E1                     __ptext3:	
   836 ;; *************** function _calcDigit *****************
   837 ;; Defined at:
   838 ;;		line 3 in file "display.c"
   839 ;; Parameters:    Size  Location     Type
   840 ;;  value           1    wreg     char 
   841 ;;  digit           1   10[COMMON] unsigned char 
   842 ;; Auto vars:     Size  Location     Type
   843 ;;  value           1    5[BANK0 ] char 
   844 ;;  d               1    6[BANK0 ] unsigned char 
   845 ;;  u               1    4[BANK0 ] unsigned char 
   846 ;; Return value:  Size  Location     Type
   847 ;;                  1    wreg      unsigned char 
   848 ;; Registers used:
   849 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   850 ;; Tracked objects:
   851 ;;		On entry : 0/0
   852 ;;		On exit  : 0/0
   853 ;;		Unchanged: 0/0
   854 ;; Data sizes:     COMMON   BANK0   BANK1
   855 ;;      Params:         1       0       0
   856 ;;      Locals:         0       5       0
   857 ;;      Temps:          0       2       0
   858 ;;      Totals:         1       7       0
   859 ;;Total ram usage:        8 bytes
   860 ;; Hardware stack levels used: 1
   861 ;; Hardware stack levels required when called: 2
   862 ;; This function calls:
   863 ;;		___awdiv
   864 ;;		___bmul
   865 ;; This function is called by:
   866 ;;		_getNumber
   867 ;; This function uses a non-reentrant model
   868 ;;
   869                           
   870     00E1                     _calcDigit:	
   871                           ;psect for function _calcDigit
   872                           
   873                           
   874                           ;incstack = 0
   875                           ; Regs used in _calcDigit: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   876                           ;calcDigit@value stored from wreg
   877     00E1  1283               	bcf	3,5	;RP0=0, select bank0
   878     00E2  1303               	bcf	3,6	;RP1=0, select bank0
   879     00E3  00A5               	movwf	calcDigit@value
   880     00E4                     l1041:
   881                           
   882                           ;display.c: 4:     char d = (char)value / 10;
   883     00E4  300A               	movlw	10
   884     00E5  00F2               	movwf	___awdiv@divisor
   885     00E6  3000               	movlw	0
   886     00E7  00F3               	movwf	___awdiv@divisor+1
   887     00E8  0825               	movf	calcDigit@value,w
   888     00E9  00A0               	movwf	??_calcDigit
   889     00EA  01A1               	clrf	??_calcDigit+1
   890     00EB  0820               	movf	??_calcDigit,w
   891     00EC  00F4               	movwf	___awdiv@dividend
   892     00ED  0821               	movf	??_calcDigit+1,w
   893     00EE  00F5               	movwf	___awdiv@dividend+1
   894     00EF  2025               	fcall	___awdiv
   895     00F0  0872               	movf	?___awdiv,w
   896     00F1  1283               	bcf	3,5	;RP0=0, select bank0
   897     00F2  1303               	bcf	3,6	;RP1=0, select bank0
   898     00F3  00A6               	movwf	calcDigit@d
   899                           
   900                           ;display.c: 5:     char u = (char)value - d * 10;
   901     00F4  30F6               	movlw	246
   902     00F5  00F2               	movwf	___bmul@multiplicand
   903     00F6  0826               	movf	calcDigit@d,w
   904     00F7  2220               	fcall	___bmul
   905     00F8  1283               	bcf	3,5	;RP0=0, select bank0
   906     00F9  1303               	bcf	3,6	;RP1=0, select bank0
   907     00FA  0725               	addwf	calcDigit@value,w
   908     00FB  00A4               	movwf	calcDigit@u
   909     00FC                     l1043:
   910                           
   911                           ;display.c: 6:     return score.digit == digit ? d : u;
   912     00FC  082E               	movf	_score+4,w
   913     00FD  067A               	xorwf	calcDigit@digit,w
   914     00FE  1903               	skipnz
   915     00FF  2901               	goto	u631
   916     0100  2902               	goto	u630
   917     0101                     u631:
   918     0101  290A               	goto	l1047
   919     0102                     u630:
   920     0102                     l1045:
   921     0102  0824               	movf	calcDigit@u,w
   922     0103  00A0               	movwf	??_calcDigit
   923     0104  01A1               	clrf	??_calcDigit+1
   924     0105  0820               	movf	??_calcDigit,w
   925     0106  00A2               	movwf	_calcDigit$237
   926     0107  0821               	movf	??_calcDigit+1,w
   927     0108  00A3               	movwf	_calcDigit$237+1
   928     0109  2911               	goto	l124
   929     010A                     l1047:
   930     010A  0826               	movf	calcDigit@d,w
   931     010B  00A0               	movwf	??_calcDigit
   932     010C  01A1               	clrf	??_calcDigit+1
   933     010D  0820               	movf	??_calcDigit,w
   934     010E  00A2               	movwf	_calcDigit$237
   935     010F  0821               	movf	??_calcDigit+1,w
   936     0110  00A3               	movwf	_calcDigit$237+1
   937     0111                     l124:
   938     0111  0822               	movf	_calcDigit$237,w
   939     0112                     l125:
   940     0112  0008               	return
   941     0113                     __end_of_calcDigit:
   942                           
   943                           	psect	text4
   944     0220                     __ptext4:	
   945 ;; *************** function ___bmul *****************
   946 ;; Defined at:
   947 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul8.c"
   948 ;; Parameters:    Size  Location     Type
   949 ;;  multiplier      1    wreg     unsigned char 
   950 ;;  multiplicand    1    2[COMMON] unsigned char 
   951 ;; Auto vars:     Size  Location     Type
   952 ;;  multiplier      1    4[COMMON] unsigned char 
   953 ;;  product         1    3[COMMON] unsigned char 
   954 ;; Return value:  Size  Location     Type
   955 ;;                  1    wreg      unsigned char 
   956 ;; Registers used:
   957 ;;		wreg, status,2, status,0, btemp+1
   958 ;; Tracked objects:
   959 ;;		On entry : 0/0
   960 ;;		On exit  : 0/0
   961 ;;		Unchanged: 0/0
   962 ;; Data sizes:     COMMON   BANK0   BANK1
   963 ;;      Params:         1       0       0
   964 ;;      Locals:         2       0       0
   965 ;;      Temps:          0       0       0
   966 ;;      Totals:         3       0       0
   967 ;;Total ram usage:        3 bytes
   968 ;; Hardware stack levels used: 1
   969 ;; Hardware stack levels required when called: 1
   970 ;; This function calls:
   971 ;;		Nothing
   972 ;; This function is called by:
   973 ;;		_calcDigit
   974 ;; This function uses a non-reentrant model
   975 ;;
   976                           
   977     0220                     ___bmul:	
   978                           ;psect for function ___bmul
   979                           
   980                           
   981                           ;incstack = 0
   982                           ; Regs used in ___bmul: [wreg+status,2+status,0+btemp+1]
   983                           ;___bmul@multiplier stored from wreg
   984     0220  00F4               	movwf	___bmul@multiplier
   985     0221                     l945:
   986     0221  01F3               	clrf	___bmul@product
   987     0222                     l947:
   988     0222  1C74               	btfss	___bmul@multiplier,0
   989     0223  2A25               	goto	u421
   990     0224  2A26               	goto	u420
   991     0225                     u421:
   992     0225  2A2A               	goto	l951
   993     0226                     u420:
   994     0226                     l949:
   995     0226  0872               	movf	___bmul@multiplicand,w
   996     0227  00FF               	movwf	btemp+1
   997     0228  087F               	movf	btemp+1,w
   998     0229  07F3               	addwf	___bmul@product,f
   999     022A                     l951:
  1000     022A  1003               	clrc
  1001     022B  0DF2               	rlf	___bmul@multiplicand,f
  1002     022C                     l953:
  1003     022C  1003               	clrc
  1004     022D  0CF4               	rrf	___bmul@multiplier,f
  1005     022E                     l955:
  1006     022E  0874               	movf	___bmul@multiplier,w
  1007     022F  1D03               	btfss	3,2
  1008     0230  2A32               	goto	u431
  1009     0231  2A33               	goto	u430
  1010     0232                     u431:
  1011     0232  2A22               	goto	l947
  1012     0233                     u430:
  1013     0233                     l957:
  1014     0233  0873               	movf	___bmul@product,w
  1015     0234                     l271:
  1016     0234  0008               	return
  1017     0235                     __end_of___bmul:
  1018                           
  1019                           	psect	text5
  1020     0025                     __ptext5:	
  1021 ;; *************** function ___awdiv *****************
  1022 ;; Defined at:
  1023 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
  1024 ;; Parameters:    Size  Location     Type
  1025 ;;  divisor         2    2[COMMON] int 
  1026 ;;  dividend        2    4[COMMON] int 
  1027 ;; Auto vars:     Size  Location     Type
  1028 ;;  quotient        2    8[COMMON] int 
  1029 ;;  sign            1    7[COMMON] unsigned char 
  1030 ;;  counter         1    6[COMMON] unsigned char 
  1031 ;; Return value:  Size  Location     Type
  1032 ;;                  2    2[COMMON] int 
  1033 ;; Registers used:
  1034 ;;		wreg, status,2, status,0, btemp+1
  1035 ;; Tracked objects:
  1036 ;;		On entry : 0/0
  1037 ;;		On exit  : 0/0
  1038 ;;		Unchanged: 0/0
  1039 ;; Data sizes:     COMMON   BANK0   BANK1
  1040 ;;      Params:         4       0       0
  1041 ;;      Locals:         4       0       0
  1042 ;;      Temps:          0       0       0
  1043 ;;      Totals:         8       0       0
  1044 ;;Total ram usage:        8 bytes
  1045 ;; Hardware stack levels used: 1
  1046 ;; Hardware stack levels required when called: 1
  1047 ;; This function calls:
  1048 ;;		Nothing
  1049 ;; This function is called by:
  1050 ;;		_calcDigit
  1051 ;; This function uses a non-reentrant model
  1052 ;;
  1053                           
  1054     0025                     ___awdiv:	
  1055                           ;psect for function ___awdiv
  1056                           
  1057     0025                     l961:	
  1058                           ;incstack = 0
  1059                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  1060                           
  1061     0025  01F7               	clrf	___awdiv@sign
  1062     0026                     l963:
  1063     0026  1FF3               	btfss	___awdiv@divisor+1,7
  1064     0027  2829               	goto	u441
  1065     0028  282A               	goto	u440
  1066     0029                     u441:
  1067     0029  2831               	goto	l969
  1068     002A                     u440:
  1069     002A                     l965:
  1070     002A  09F2               	comf	___awdiv@divisor,f
  1071     002B  09F3               	comf	___awdiv@divisor+1,f
  1072     002C  0AF2               	incf	___awdiv@divisor,f
  1073     002D  1903               	skipnz
  1074     002E  0AF3               	incf	___awdiv@divisor+1,f
  1075     002F                     l967:
  1076     002F  01F7               	clrf	___awdiv@sign
  1077     0030  0AF7               	incf	___awdiv@sign,f
  1078     0031                     l969:
  1079     0031  1FF5               	btfss	___awdiv@dividend+1,7
  1080     0032  2834               	goto	u451
  1081     0033  2835               	goto	u450
  1082     0034                     u451:
  1083     0034  283E               	goto	l975
  1084     0035                     u450:
  1085     0035                     l971:
  1086     0035  09F4               	comf	___awdiv@dividend,f
  1087     0036  09F5               	comf	___awdiv@dividend+1,f
  1088     0037  0AF4               	incf	___awdiv@dividend,f
  1089     0038  1903               	skipnz
  1090     0039  0AF5               	incf	___awdiv@dividend+1,f
  1091     003A                     l973:
  1092     003A  3001               	movlw	1
  1093     003B  00FF               	movwf	btemp+1
  1094     003C  087F               	movf	btemp+1,w
  1095     003D  06F7               	xorwf	___awdiv@sign,f
  1096     003E                     l975:
  1097     003E  01F8               	clrf	___awdiv@quotient
  1098     003F  01F9               	clrf	___awdiv@quotient+1
  1099     0040                     l977:
  1100     0040  0872               	movf	___awdiv@divisor,w
  1101     0041  0473               	iorwf	___awdiv@divisor+1,w
  1102     0042  1903               	btfsc	3,2
  1103     0043  2845               	goto	u461
  1104     0044  2846               	goto	u460
  1105     0045                     u461:
  1106     0045  287D               	goto	l997
  1107     0046                     u460:
  1108     0046                     l979:
  1109     0046  01F6               	clrf	___awdiv@counter
  1110     0047  0AF6               	incf	___awdiv@counter,f
  1111     0048  2854               	goto	l985
  1112     0049                     l981:
  1113     0049  3001               	movlw	1
  1114     004A                     u475:
  1115     004A  1003               	clrc
  1116     004B  0DF2               	rlf	___awdiv@divisor,f
  1117     004C  0DF3               	rlf	___awdiv@divisor+1,f
  1118     004D  3EFF               	addlw	-1
  1119     004E  1D03               	skipz
  1120     004F  284A               	goto	u475
  1121     0050                     l983:
  1122     0050  3001               	movlw	1
  1123     0051  00FF               	movwf	btemp+1
  1124     0052  087F               	movf	btemp+1,w
  1125     0053  07F6               	addwf	___awdiv@counter,f
  1126     0054                     l985:
  1127     0054  1FF3               	btfss	___awdiv@divisor+1,7
  1128     0055  2857               	goto	u481
  1129     0056  2858               	goto	u480
  1130     0057                     u481:
  1131     0057  2849               	goto	l981
  1132     0058                     u480:
  1133     0058                     l987:
  1134     0058  3001               	movlw	1
  1135     0059                     u495:
  1136     0059  1003               	clrc
  1137     005A  0DF8               	rlf	___awdiv@quotient,f
  1138     005B  0DF9               	rlf	___awdiv@quotient+1,f
  1139     005C  3EFF               	addlw	-1
  1140     005D  1D03               	skipz
  1141     005E  2859               	goto	u495
  1142     005F  0873               	movf	___awdiv@divisor+1,w
  1143     0060  0275               	subwf	___awdiv@dividend+1,w
  1144     0061  1D03               	skipz
  1145     0062  2865               	goto	u505
  1146     0063  0872               	movf	___awdiv@divisor,w
  1147     0064  0274               	subwf	___awdiv@dividend,w
  1148     0065                     u505:
  1149     0065  1C03               	skipc
  1150     0066  2868               	goto	u501
  1151     0067  2869               	goto	u500
  1152     0068                     u501:
  1153     0068  2870               	goto	l993
  1154     0069                     u500:
  1155     0069                     l989:
  1156     0069  0872               	movf	___awdiv@divisor,w
  1157     006A  02F4               	subwf	___awdiv@dividend,f
  1158     006B  0873               	movf	___awdiv@divisor+1,w
  1159     006C  1C03               	skipc
  1160     006D  03F5               	decf	___awdiv@dividend+1,f
  1161     006E  02F5               	subwf	___awdiv@dividend+1,f
  1162     006F                     l991:
  1163     006F  1478               	bsf	___awdiv@quotient,0
  1164     0070                     l993:
  1165     0070  3001               	movlw	1
  1166     0071                     u515:
  1167     0071  1003               	clrc
  1168     0072  0CF3               	rrf	___awdiv@divisor+1,f
  1169     0073  0CF2               	rrf	___awdiv@divisor,f
  1170     0074  3EFF               	addlw	-1
  1171     0075  1D03               	skipz
  1172     0076  2871               	goto	u515
  1173     0077                     l995:
  1174     0077  3001               	movlw	1
  1175     0078  02F6               	subwf	___awdiv@counter,f
  1176     0079  1D03               	btfss	3,2
  1177     007A  287C               	goto	u521
  1178     007B  287D               	goto	u520
  1179     007C                     u521:
  1180     007C  2858               	goto	l987
  1181     007D                     u520:
  1182     007D                     l997:
  1183     007D  0877               	movf	___awdiv@sign,w
  1184     007E  1903               	btfsc	3,2
  1185     007F  2881               	goto	u531
  1186     0080  2882               	goto	u530
  1187     0081                     u531:
  1188     0081  2887               	goto	l1001
  1189     0082                     u530:
  1190     0082                     l999:
  1191     0082  09F8               	comf	___awdiv@quotient,f
  1192     0083  09F9               	comf	___awdiv@quotient+1,f
  1193     0084  0AF8               	incf	___awdiv@quotient,f
  1194     0085  1903               	skipnz
  1195     0086  0AF9               	incf	___awdiv@quotient+1,f
  1196     0087                     l1001:
  1197     0087  0879               	movf	___awdiv@quotient+1,w
  1198     0088  00F3               	movwf	?___awdiv+1
  1199     0089  0878               	movf	___awdiv@quotient,w
  1200     008A  00F2               	movwf	?___awdiv
  1201     008B                     l398:
  1202     008B  0008               	return
  1203     008C                     __end_of___awdiv:
  1204                           
  1205                           	psect	text6
  1206     01DA                     __ptext6:	
  1207 ;; *************** function _setup *****************
  1208 ;; Defined at:
  1209 ;;		line 3 in file "main.c"
  1210 ;; Parameters:    Size  Location     Type
  1211 ;;		None
  1212 ;; Auto vars:     Size  Location     Type
  1213 ;;		None
  1214 ;; Return value:  Size  Location     Type
  1215 ;;                  1    wreg      void 
  1216 ;; Registers used:
  1217 ;;		wreg, status,2, status,0
  1218 ;; Tracked objects:
  1219 ;;		On entry : 0/0
  1220 ;;		On exit  : 0/0
  1221 ;;		Unchanged: 0/0
  1222 ;; Data sizes:     COMMON   BANK0   BANK1
  1223 ;;      Params:         0       0       0
  1224 ;;      Locals:         0       0       0
  1225 ;;      Temps:          0       0       0
  1226 ;;      Totals:         0       0       0
  1227 ;;Total ram usage:        0 bytes
  1228 ;; Hardware stack levels used: 1
  1229 ;; Hardware stack levels required when called: 1
  1230 ;; This function calls:
  1231 ;;		Nothing
  1232 ;; This function is called by:
  1233 ;;		_main
  1234 ;; This function uses a non-reentrant model
  1235 ;;
  1236                           
  1237     01DA                     _setup:	
  1238                           ;psect for function _setup
  1239                           
  1240     01DA                     l865:	
  1241                           ;incstack = 0
  1242                           ; Regs used in _setup: [wreg+status,2+status,0]
  1243                           
  1244                           
  1245                           ;main.c: 4:     TRISA = 0xFF;
  1246     01DA  30FF               	movlw	255
  1247     01DB  1683               	bsf	3,5	;RP0=1, select bank1
  1248     01DC  1303               	bcf	3,6	;RP1=0, select bank1
  1249     01DD  0085               	movwf	5	;volatile
  1250     01DE                     l867:
  1251                           
  1252                           ;main.c: 5:     TRISB = 0x00;
  1253     01DE  0186               	clrf	6	;volatile
  1254     01DF                     l869:
  1255                           
  1256                           ;main.c: 6:     TRISC = 0x00;
  1257     01DF  0187               	clrf	7	;volatile
  1258     01E0                     l871:
  1259                           
  1260                           ;main.c: 7:     PORTB = 0;
  1261     01E0  1283               	bcf	3,5	;RP0=0, select bank0
  1262     01E1  1303               	bcf	3,6	;RP1=0, select bank0
  1263     01E2  0186               	clrf	6	;volatile
  1264     01E3                     l873:
  1265                           
  1266                           ;main.c: 8:     PORTC = 0;
  1267     01E3  0187               	clrf	7	;volatile
  1268     01E4                     l875:
  1269                           
  1270                           ;main.c: 10:     T1CON = 0;
  1271     01E4  0190               	clrf	16	;volatile
  1272     01E5                     l877:
  1273                           
  1274                           ;main.c: 11:     T1CONbits.TMR1CS = 0;
  1275     01E5  1090               	bcf	16,1	;volatile
  1276     01E6                     l879:
  1277                           
  1278                           ;main.c: 12:     T1CONbits.TMR1ON = 1;
  1279     01E6  1410               	bsf	16,0	;volatile
  1280     01E7                     l881:
  1281                           
  1282                           ;main.c: 14:     ADCON0 = 0;
  1283     01E7  019F               	clrf	31	;volatile
  1284     01E8                     l883:
  1285                           
  1286                           ;main.c: 15:     ADCON1bits.PCFG = 0b0110;
  1287     01E8  1683               	bsf	3,5	;RP0=1, select bank1
  1288     01E9  1303               	bcf	3,6	;RP1=0, select bank1
  1289     01EA  081F               	movf	31,w	;volatile
  1290     01EB  39F0               	andlw	-16
  1291     01EC  3806               	iorlw	6
  1292     01ED  009F               	movwf	31	;volatile
  1293     01EE                     l885:
  1294                           
  1295                           ;main.c: 17:     PIE1bits.TMR1IE = 1;
  1296     01EE  140C               	bsf	12,0	;volatile
  1297     01EF                     l887:
  1298                           
  1299                           ;main.c: 18:     PEIE = 1;
  1300     01EF  170B               	bsf	11,6	;volatile
  1301     01F0                     l889:
  1302                           
  1303                           ;main.c: 19:     GIE = 1;
  1304     01F0  178B               	bsf	11,7	;volatile
  1305     01F1                     l43:
  1306     01F1  0008               	return
  1307     01F2                     __end_of_setup:
  1308                           
  1309                           	psect	text7
  1310     008C                     __ptext7:	
  1311 ;; *************** function _checkButtons *****************
  1312 ;; Defined at:
  1313 ;;		line 45 in file "buttons.c"
  1314 ;; Parameters:    Size  Location     Type
  1315 ;;		None
  1316 ;; Auto vars:     Size  Location     Type
  1317 ;;		None
  1318 ;; Return value:  Size  Location     Type
  1319 ;;                  1    wreg      void 
  1320 ;; Registers used:
  1321 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1322 ;; Tracked objects:
  1323 ;;		On entry : 0/0
  1324 ;;		On exit  : 0/0
  1325 ;;		Unchanged: 0/0
  1326 ;; Data sizes:     COMMON   BANK0   BANK1
  1327 ;;      Params:         0       0       0
  1328 ;;      Locals:         1       0       0
  1329 ;;      Temps:          1       0       0
  1330 ;;      Totals:         2       0       0
  1331 ;;Total ram usage:        2 bytes
  1332 ;; Hardware stack levels used: 1
  1333 ;; Hardware stack levels required when called: 3
  1334 ;; This function calls:
  1335 ;;		_checkButton
  1336 ;; This function is called by:
  1337 ;;		_main
  1338 ;; This function uses a non-reentrant model
  1339 ;;
  1340                           
  1341     008C                     _checkButtons:	
  1342                           ;psect for function _checkButtons
  1343                           
  1344     008C                     l1107:	
  1345                           ;incstack = 0
  1346                           ; Regs used in _checkButtons: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1347                           
  1348                           
  1349                           ;buttons.c: 46:     button.status = checkButton(PORTAbits.RA0, up1)
  1350     008C  01F6               	clrf	_checkButtons$216
  1351     008D  0AF6               	incf	_checkButtons$216,f
  1352     008E                     l1109:
  1353     008E  3002               	movlw	(low (fp__up1-fpbase))& (0+255)
  1354     008F  00F3               	movwf	checkButton@action
  1355     0090  1283               	bcf	3,5	;RP0=0, select bank0
  1356     0091  1303               	bcf	3,6	;RP1=0, select bank0
  1357     0092  0805               	movf	5,w	;volatile
  1358     0093  3901               	andlw	1
  1359     0094  218E               	fcall	_checkButton
  1360     0095  3A00               	xorlw	0
  1361     0096  1D03               	skipz
  1362     0097  2899               	goto	u721
  1363     0098  289A               	goto	u720
  1364     0099                     u721:
  1365     0099  28DE               	goto	l1123
  1366     009A                     u720:
  1367     009A                     l1111:
  1368     009A  3003               	movlw	(low (fp__up2-fpbase))& (0+255)
  1369     009B  00F3               	movwf	checkButton@action
  1370     009C  1283               	bcf	3,5	;RP0=0, select bank0
  1371     009D  1303               	bcf	3,6	;RP1=0, select bank0
  1372     009E  0C05               	rrf	5,w	;volatile
  1373     009F  00F5               	movwf	??_checkButtons
  1374     00A0  0C75               	rrf	??_checkButtons,w
  1375     00A1  3901               	andlw	1
  1376     00A2  218E               	fcall	_checkButton
  1377     00A3  3A00               	xorlw	0
  1378     00A4  1D03               	skipz
  1379     00A5  28A7               	goto	u731
  1380     00A6  28A8               	goto	u730
  1381     00A7                     u731:
  1382     00A7  28DE               	goto	l1123
  1383     00A8                     u730:
  1384     00A8                     l1113:
  1385     00A8  3004               	movlw	(low (fp__down1-fpbase))& (0+255)
  1386     00A9  00F3               	movwf	checkButton@action
  1387     00AA  1283               	bcf	3,5	;RP0=0, select bank0
  1388     00AB  1303               	bcf	3,6	;RP1=0, select bank0
  1389     00AC  0C05               	rrf	5,w	;volatile
  1390     00AD  3901               	andlw	1
  1391     00AE  218E               	fcall	_checkButton
  1392     00AF  3A00               	xorlw	0
  1393     00B0  1D03               	skipz
  1394     00B1  28B3               	goto	u741
  1395     00B2  28B4               	goto	u740
  1396     00B3                     u741:
  1397     00B3  28DE               	goto	l1123
  1398     00B4                     u740:
  1399     00B4                     l1115:
  1400     00B4  3005               	movlw	(low (fp__down2-fpbase))& (0+255)
  1401     00B5  00F3               	movwf	checkButton@action
  1402     00B6  1283               	bcf	3,5	;RP0=0, select bank0
  1403     00B7  1303               	bcf	3,6	;RP1=0, select bank0
  1404     00B8  0C05               	rrf	5,w	;volatile
  1405     00B9  00F5               	movwf	??_checkButtons
  1406     00BA  0CF5               	rrf	??_checkButtons,f
  1407     00BB  0C75               	rrf	??_checkButtons,w
  1408     00BC  3901               	andlw	1
  1409     00BD  218E               	fcall	_checkButton
  1410     00BE  3A00               	xorlw	0
  1411     00BF  1D03               	skipz
  1412     00C0  28C2               	goto	u751
  1413     00C1  28C3               	goto	u750
  1414     00C2                     u751:
  1415     00C2  28DE               	goto	l1123
  1416     00C3                     u750:
  1417     00C3                     l1117:
  1418     00C3  3006               	movlw	(low (fp__change-fpbase))& (0+255)
  1419     00C4  00F3               	movwf	checkButton@action
  1420     00C5  1283               	bcf	3,5	;RP0=0, select bank0
  1421     00C6  1303               	bcf	3,6	;RP1=0, select bank0
  1422     00C7  0E05               	swapf	5,w	;volatile
  1423     00C8  3901               	andlw	1
  1424     00C9  218E               	fcall	_checkButton
  1425     00CA  3A00               	xorlw	0
  1426     00CB  1D03               	skipz
  1427     00CC  28CE               	goto	u761
  1428     00CD  28CF               	goto	u760
  1429     00CE                     u761:
  1430     00CE  28DE               	goto	l1123
  1431     00CF                     u760:
  1432     00CF                     l1119:
  1433     00CF  3001               	movlw	(low (fp__win-fpbase))& (0+255)
  1434     00D0  00F3               	movwf	checkButton@action
  1435     00D1  1283               	bcf	3,5	;RP0=0, select bank0
  1436     00D2  1303               	bcf	3,6	;RP1=0, select bank0
  1437     00D3  0E05               	swapf	5,w	;volatile
  1438     00D4  00F5               	movwf	??_checkButtons
  1439     00D5  0C75               	rrf	??_checkButtons,w
  1440     00D6  3901               	andlw	1
  1441     00D7  218E               	fcall	_checkButton
  1442     00D8  3A00               	xorlw	0
  1443     00D9  1D03               	skipz
  1444     00DA  28DC               	goto	u771
  1445     00DB  28DD               	goto	u770
  1446     00DC                     u771:
  1447     00DC  28DE               	goto	l1123
  1448     00DD                     u770:
  1449     00DD                     l1121:
  1450     00DD  01F6               	clrf	_checkButtons$216
  1451     00DE                     l1123:
  1452     00DE  0876               	movf	_checkButtons$216,w
  1453     00DF  00FB               	movwf	_button
  1454     00E0                     l104:
  1455     00E0  0008               	return
  1456     00E1                     __end_of_checkButtons:
  1457                           
  1458                           	psect	text8
  1459     018E                     __ptext8:	
  1460 ;; *************** function _checkButton *****************
  1461 ;; Defined at:
  1462 ;;		line 3 in file "buttons.c"
  1463 ;; Parameters:    Size  Location     Type
  1464 ;;  btn             1    wreg     unsigned char 
  1465 ;;  action          1    3[COMMON] PTR FTN()void 
  1466 ;;		 -> win(1), change(1), down2(1), down1(1), 
  1467 ;;		 -> up2(1), up1(1), 
  1468 ;; Auto vars:     Size  Location     Type
  1469 ;;  btn             1    4[COMMON] unsigned char 
  1470 ;; Return value:  Size  Location     Type
  1471 ;;                  1    wreg      unsigned char 
  1472 ;; Registers used:
  1473 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1474 ;; Tracked objects:
  1475 ;;		On entry : 0/0
  1476 ;;		On exit  : 0/0
  1477 ;;		Unchanged: 0/0
  1478 ;; Data sizes:     COMMON   BANK0   BANK1
  1479 ;;      Params:         1       0       0
  1480 ;;      Locals:         1       0       0
  1481 ;;      Temps:          0       0       0
  1482 ;;      Totals:         2       0       0
  1483 ;;Total ram usage:        2 bytes
  1484 ;; Hardware stack levels used: 1
  1485 ;; Hardware stack levels required when called: 2
  1486 ;; This function calls:
  1487 ;;		_change
  1488 ;;		_down1
  1489 ;;		_down2
  1490 ;;		_up1
  1491 ;;		_up2
  1492 ;;		_win
  1493 ;; This function is called by:
  1494 ;;		_checkButtons
  1495 ;; This function uses a non-reentrant model
  1496 ;;
  1497                           
  1498     018E                     _checkButton:	
  1499                           ;psect for function _checkButton
  1500                           
  1501                           
  1502                           ;incstack = 0
  1503                           ; Regs used in _checkButton: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1504                           ;checkButton@btn stored from wreg
  1505     018E  00F4               	movwf	checkButton@btn
  1506     018F                     l1051:
  1507                           
  1508                           ;buttons.c: 4:     if (!!(btn || btn)) return 0;
  1509     018F  0874               	movf	checkButton@btn,w
  1510     0190  1D03               	btfss	3,2
  1511     0191  2993               	goto	u641
  1512     0192  2994               	goto	u640
  1513     0193                     u641:
  1514     0193  2999               	goto	l1055
  1515     0194                     u640:
  1516     0194                     l1053:
  1517     0194  0874               	movf	checkButton@btn,w
  1518     0195  1903               	btfsc	3,2
  1519     0196  2998               	goto	u651
  1520     0197  2999               	goto	u650
  1521     0198                     u651:
  1522     0198  299B               	goto	l1059
  1523     0199                     u650:
  1524     0199                     l1055:
  1525     0199  3000               	movlw	0
  1526     019A  29B4               	goto	l69
  1527     019B                     l1059:
  1528                           
  1529                           ;buttons.c: 5:     if (button.status == 1) {
  1530     019B  037B               	decf	_button,w
  1531     019C  1D03               	btfss	3,2
  1532     019D  299F               	goto	u661
  1533     019E  29A0               	goto	u660
  1534     019F                     u661:
  1535     019F  29A8               	goto	l1067
  1536     01A0                     u660:
  1537     01A0                     l1061:
  1538                           
  1539                           ;buttons.c: 6:         timers[1] = 100;
  1540     01A0  3000               	movlw	0
  1541     01A1  1283               	bcf	3,5	;RP0=0, select bank0
  1542     01A2  1303               	bcf	3,6	;RP1=0, select bank0
  1543     01A3  00B2               	movwf	_timers+3	;volatile
  1544     01A4  3064               	movlw	100
  1545     01A5  00B1               	movwf	_timers+2	;volatile
  1546     01A6                     l1063:
  1547                           
  1548                           ;buttons.c: 7:         return 1;
  1549     01A6  3001               	movlw	1
  1550     01A7  29B4               	goto	l69
  1551     01A8                     l1067:
  1552                           
  1553                           ;buttons.c: 9:     if (timers[1])return 1;
  1554     01A8  1283               	bcf	3,5	;RP0=0, select bank0
  1555     01A9  1303               	bcf	3,6	;RP1=0, select bank0
  1556     01AA  0831               	movf	_timers+2,w	;volatile
  1557     01AB  0432               	iorwf	_timers+3,w	;volatile
  1558     01AC  1903               	btfsc	3,2
  1559     01AD  29AF               	goto	u671
  1560     01AE  29B0               	goto	u670
  1561     01AF                     u671:
  1562     01AF  29B1               	goto	l1073
  1563     01B0                     u670:
  1564     01B0  29A6               	goto	l1063
  1565     01B1                     l1073:
  1566                           
  1567                           ;buttons.c: 11:     action();
  1568     01B1  0873               	movf	checkButton@action,w
  1569     01B2  2019               	fcall	fptable
  1570     01B3  29A6               	goto	l1063
  1571     01B4                     l69:
  1572     01B4  0008               	return
  1573     01B5                     __end_of_checkButton:
  1574                           
  1575                           	psect	text9
  1576     01F2                     __ptext9:	
  1577 ;; *************** function _change *****************
  1578 ;; Defined at:
  1579 ;;		line 31 in file "buttons.c"
  1580 ;; Parameters:    Size  Location     Type
  1581 ;;		None
  1582 ;; Auto vars:     Size  Location     Type
  1583 ;;  aux             1    2[COMMON] unsigned char 
  1584 ;; Return value:  Size  Location     Type
  1585 ;;                  1    wreg      void 
  1586 ;; Registers used:
  1587 ;;		wreg
  1588 ;; Tracked objects:
  1589 ;;		On entry : 0/0
  1590 ;;		On exit  : 0/0
  1591 ;;		Unchanged: 0/0
  1592 ;; Data sizes:     COMMON   BANK0   BANK1
  1593 ;;      Params:         0       0       0
  1594 ;;      Locals:         1       0       0
  1595 ;;      Temps:          0       0       0
  1596 ;;      Totals:         1       0       0
  1597 ;;Total ram usage:        1 bytes
  1598 ;; Hardware stack levels used: 1
  1599 ;; Hardware stack levels required when called: 1
  1600 ;; This function calls:
  1601 ;;		Nothing
  1602 ;; This function is called by:
  1603 ;;		_checkButtons
  1604 ;;		_checkButton
  1605 ;; This function uses a non-reentrant model
  1606 ;;
  1607                           
  1608     01F2                     _change:	
  1609                           ;psect for function _change
  1610                           
  1611     01F2                     l1021:	
  1612                           ;incstack = 0
  1613                           ; Regs used in _change: [wreg]
  1614                           
  1615                           
  1616                           ;buttons.c: 32:     if (score.team1 > 0 || score.team2 > 0) return;
  1617     01F2  1283               	bcf	3,5	;RP0=0, select bank0
  1618     01F3  1303               	bcf	3,6	;RP1=0, select bank0
  1619     01F4  082A               	movf	_score,w
  1620     01F5  3A80               	xorlw	128
  1621     01F6  3E7F               	addlw	-129
  1622     01F7  1803               	skipnc
  1623     01F8  29FA               	goto	u581
  1624     01F9  29FB               	goto	u580
  1625     01FA                     u581:
  1626     01FA  2A09               	goto	l93
  1627     01FB                     u580:
  1628     01FB                     l1023:
  1629     01FB  082B               	movf	_score+1,w
  1630     01FC  3A80               	xorlw	128
  1631     01FD  3E7F               	addlw	-129
  1632     01FE  1C03               	skipc
  1633     01FF  2A01               	goto	u591
  1634     0200  2A02               	goto	u590
  1635     0201                     u591:
  1636     0201  2A03               	goto	l1025
  1637     0202                     u590:
  1638     0202  2A09               	goto	l93
  1639     0203                     l1025:
  1640                           
  1641                           ;buttons.c: 33:     char aux = score.win1;
  1642     0203  082C               	movf	_score+2,w
  1643     0204  00F2               	movwf	change@aux
  1644                           
  1645                           ;buttons.c: 34:     score.win1 = score.win2;
  1646     0205  082D               	movf	_score+3,w
  1647     0206  00AC               	movwf	_score+2
  1648                           
  1649                           ;buttons.c: 35:     score.win2 = aux;
  1650     0207  0872               	movf	change@aux,w
  1651     0208  00AD               	movwf	_score+3
  1652     0209                     l93:
  1653     0209  0008               	return
  1654     020A                     __end_of_change:
  1655                           
  1656                           	psect	text10
  1657     0268                     __ptext10:	
  1658 ;; *************** function _down2 *****************
  1659 ;; Defined at:
  1660 ;;		line 27 in file "buttons.c"
  1661 ;; Parameters:    Size  Location     Type
  1662 ;;		None
  1663 ;; Auto vars:     Size  Location     Type
  1664 ;;		None
  1665 ;; Return value:  Size  Location     Type
  1666 ;;                  1    wreg      void 
  1667 ;; Registers used:
  1668 ;;		wreg, status,2, status,0, btemp+1
  1669 ;; Tracked objects:
  1670 ;;		On entry : 0/0
  1671 ;;		On exit  : 0/0
  1672 ;;		Unchanged: 0/0
  1673 ;; Data sizes:     COMMON   BANK0   BANK1
  1674 ;;      Params:         0       0       0
  1675 ;;      Locals:         0       0       0
  1676 ;;      Temps:          0       0       0
  1677 ;;      Totals:         0       0       0
  1678 ;;Total ram usage:        0 bytes
  1679 ;; Hardware stack levels used: 1
  1680 ;; Hardware stack levels required when called: 1
  1681 ;; This function calls:
  1682 ;;		Nothing
  1683 ;; This function is called by:
  1684 ;;		_checkButtons
  1685 ;;		_checkButton
  1686 ;; This function uses a non-reentrant model
  1687 ;;
  1688                           
  1689     0268                     _down2:	
  1690                           ;psect for function _down2
  1691                           
  1692     0268                     l1017:	
  1693                           ;incstack = 0
  1694                           ; Regs used in _down2: [wreg+status,2+status,0+btemp+1]
  1695                           
  1696                           
  1697                           ;buttons.c: 28:     if (--score.team2 < 0) score.team2 = 0;
  1698     0268  30FF               	movlw	255
  1699     0269  00FF               	movwf	btemp+1
  1700     026A  087F               	movf	btemp+1,w
  1701     026B  1283               	bcf	3,5	;RP0=0, select bank0
  1702     026C  1303               	bcf	3,6	;RP1=0, select bank0
  1703     026D  07AB               	addwf	_score+1,f
  1704     026E  1FAB               	btfss	_score+1,7
  1705     026F  2A71               	goto	u571
  1706     0270  2A72               	goto	u570
  1707     0271                     u571:
  1708     0271  2A73               	goto	l87
  1709     0272                     u570:
  1710     0272                     l1019:
  1711     0272  01AB               	clrf	_score+1
  1712     0273                     l87:
  1713     0273  0008               	return
  1714     0274                     __end_of_down2:
  1715                           
  1716                           	psect	text11
  1717     0274                     __ptext11:	
  1718 ;; *************** function _down1 *****************
  1719 ;; Defined at:
  1720 ;;		line 23 in file "buttons.c"
  1721 ;; Parameters:    Size  Location     Type
  1722 ;;		None
  1723 ;; Auto vars:     Size  Location     Type
  1724 ;;		None
  1725 ;; Return value:  Size  Location     Type
  1726 ;;                  1    wreg      void 
  1727 ;; Registers used:
  1728 ;;		wreg, status,2, status,0, btemp+1
  1729 ;; Tracked objects:
  1730 ;;		On entry : 0/0
  1731 ;;		On exit  : 0/0
  1732 ;;		Unchanged: 0/0
  1733 ;; Data sizes:     COMMON   BANK0   BANK1
  1734 ;;      Params:         0       0       0
  1735 ;;      Locals:         0       0       0
  1736 ;;      Temps:          0       0       0
  1737 ;;      Totals:         0       0       0
  1738 ;;Total ram usage:        0 bytes
  1739 ;; Hardware stack levels used: 1
  1740 ;; Hardware stack levels required when called: 1
  1741 ;; This function calls:
  1742 ;;		Nothing
  1743 ;; This function is called by:
  1744 ;;		_checkButtons
  1745 ;;		_checkButton
  1746 ;; This function uses a non-reentrant model
  1747 ;;
  1748                           
  1749     0274                     _down1:	
  1750                           ;psect for function _down1
  1751                           
  1752     0274                     l1013:	
  1753                           ;incstack = 0
  1754                           ; Regs used in _down1: [wreg+status,2+status,0+btemp+1]
  1755                           
  1756                           
  1757                           ;buttons.c: 24:     if (--score.team1 < 0) score.team1 = 0;
  1758     0274  30FF               	movlw	255
  1759     0275  00FF               	movwf	btemp+1
  1760     0276  087F               	movf	btemp+1,w
  1761     0277  1283               	bcf	3,5	;RP0=0, select bank0
  1762     0278  1303               	bcf	3,6	;RP1=0, select bank0
  1763     0279  07AA               	addwf	_score,f
  1764     027A  1FAA               	btfss	_score,7
  1765     027B  2A7D               	goto	u561
  1766     027C  2A7E               	goto	u560
  1767     027D                     u561:
  1768     027D  2A7F               	goto	l83
  1769     027E                     u560:
  1770     027E                     l1015:
  1771     027E  01AA               	clrf	_score
  1772     027F                     l83:
  1773     027F  0008               	return
  1774     0280                     __end_of_down1:
  1775                           
  1776                           	psect	text12
  1777     0248                     __ptext12:	
  1778 ;; *************** function _up2 *****************
  1779 ;; Defined at:
  1780 ;;		line 19 in file "buttons.c"
  1781 ;; Parameters:    Size  Location     Type
  1782 ;;		None
  1783 ;; Auto vars:     Size  Location     Type
  1784 ;;		None
  1785 ;; Return value:  Size  Location     Type
  1786 ;;                  1    wreg      void 
  1787 ;; Registers used:
  1788 ;;		wreg, status,2, status,0, btemp+1
  1789 ;; Tracked objects:
  1790 ;;		On entry : 0/0
  1791 ;;		On exit  : 0/0
  1792 ;;		Unchanged: 0/0
  1793 ;; Data sizes:     COMMON   BANK0   BANK1
  1794 ;;      Params:         0       0       0
  1795 ;;      Locals:         0       0       0
  1796 ;;      Temps:          0       0       0
  1797 ;;      Totals:         0       0       0
  1798 ;;Total ram usage:        0 bytes
  1799 ;; Hardware stack levels used: 1
  1800 ;; Hardware stack levels required when called: 1
  1801 ;; This function calls:
  1802 ;;		Nothing
  1803 ;; This function is called by:
  1804 ;;		_checkButtons
  1805 ;;		_checkButton
  1806 ;; This function uses a non-reentrant model
  1807 ;;
  1808                           
  1809     0248                     _up2:	
  1810                           ;psect for function _up2
  1811                           
  1812     0248                     l1009:	
  1813                           ;incstack = 0
  1814                           ; Regs used in _up2: [wreg+status,2+status,0+btemp+1]
  1815                           
  1816                           
  1817                           ;buttons.c: 20:     if (++score.team2 > 99) score.team2 = 99;
  1818     0248  3001               	movlw	1
  1819     0249  00FF               	movwf	btemp+1
  1820     024A  087F               	movf	btemp+1,w
  1821     024B  1283               	bcf	3,5	;RP0=0, select bank0
  1822     024C  1303               	bcf	3,6	;RP1=0, select bank0
  1823     024D  07AB               	addwf	_score+1,f
  1824     024E  082B               	movf	_score+1,w
  1825     024F  3A80               	xorlw	128
  1826     0250  3E1C               	addlw	-228
  1827     0251  1C03               	skipc
  1828     0252  2A54               	goto	u551
  1829     0253  2A55               	goto	u550
  1830     0254                     u551:
  1831     0254  2A57               	goto	l79
  1832     0255                     u550:
  1833     0255                     l1011:
  1834     0255  3063               	movlw	99
  1835     0256  00AB               	movwf	_score+1
  1836     0257                     l79:
  1837     0257  0008               	return
  1838     0258                     __end_of_up2:
  1839                           
  1840                           	psect	text13
  1841     0258                     __ptext13:	
  1842 ;; *************** function _up1 *****************
  1843 ;; Defined at:
  1844 ;;		line 15 in file "buttons.c"
  1845 ;; Parameters:    Size  Location     Type
  1846 ;;		None
  1847 ;; Auto vars:     Size  Location     Type
  1848 ;;		None
  1849 ;; Return value:  Size  Location     Type
  1850 ;;                  1    wreg      void 
  1851 ;; Registers used:
  1852 ;;		wreg, status,2, status,0, btemp+1
  1853 ;; Tracked objects:
  1854 ;;		On entry : 0/0
  1855 ;;		On exit  : 0/0
  1856 ;;		Unchanged: 0/0
  1857 ;; Data sizes:     COMMON   BANK0   BANK1
  1858 ;;      Params:         0       0       0
  1859 ;;      Locals:         0       0       0
  1860 ;;      Temps:          0       0       0
  1861 ;;      Totals:         0       0       0
  1862 ;;Total ram usage:        0 bytes
  1863 ;; Hardware stack levels used: 1
  1864 ;; Hardware stack levels required when called: 1
  1865 ;; This function calls:
  1866 ;;		Nothing
  1867 ;; This function is called by:
  1868 ;;		_checkButtons
  1869 ;;		_checkButton
  1870 ;; This function uses a non-reentrant model
  1871 ;;
  1872                           
  1873     0258                     _up1:	
  1874                           ;psect for function _up1
  1875                           
  1876     0258                     l1005:	
  1877                           ;incstack = 0
  1878                           ; Regs used in _up1: [wreg+status,2+status,0+btemp+1]
  1879                           
  1880                           
  1881                           ;buttons.c: 16:     if (++score.team1 > 99) score.team1 = 99;
  1882     0258  3001               	movlw	1
  1883     0259  00FF               	movwf	btemp+1
  1884     025A  087F               	movf	btemp+1,w
  1885     025B  1283               	bcf	3,5	;RP0=0, select bank0
  1886     025C  1303               	bcf	3,6	;RP1=0, select bank0
  1887     025D  07AA               	addwf	_score,f
  1888     025E  082A               	movf	_score,w
  1889     025F  3A80               	xorlw	128
  1890     0260  3E1C               	addlw	-228
  1891     0261  1C03               	skipc
  1892     0262  2A64               	goto	u541
  1893     0263  2A65               	goto	u540
  1894     0264                     u541:
  1895     0264  2A67               	goto	l75
  1896     0265                     u540:
  1897     0265                     l1007:
  1898     0265  3063               	movlw	99
  1899     0266  00AA               	movwf	_score
  1900     0267                     l75:
  1901     0267  0008               	return
  1902     0268                     __end_of_up1:
  1903                           
  1904                           	psect	text14
  1905     0166                     __ptext14:	
  1906 ;; *************** function _win *****************
  1907 ;; Defined at:
  1908 ;;		line 38 in file "buttons.c"
  1909 ;; Parameters:    Size  Location     Type
  1910 ;;		None
  1911 ;; Auto vars:     Size  Location     Type
  1912 ;;		None
  1913 ;; Return value:  Size  Location     Type
  1914 ;;                  1    wreg      void 
  1915 ;; Registers used:
  1916 ;;		wreg, status,2, status,0, btemp+1
  1917 ;; Tracked objects:
  1918 ;;		On entry : 0/0
  1919 ;;		On exit  : 0/0
  1920 ;;		Unchanged: 0/0
  1921 ;; Data sizes:     COMMON   BANK0   BANK1
  1922 ;;      Params:         0       0       0
  1923 ;;      Locals:         0       0       0
  1924 ;;      Temps:          1       0       0
  1925 ;;      Totals:         1       0       0
  1926 ;;Total ram usage:        1 bytes
  1927 ;; Hardware stack levels used: 1
  1928 ;; Hardware stack levels required when called: 1
  1929 ;; This function calls:
  1930 ;;		Nothing
  1931 ;; This function is called by:
  1932 ;;		_checkButtons
  1933 ;;		_checkButton
  1934 ;; This function uses a non-reentrant model
  1935 ;;
  1936                           
  1937     0166                     _win:	
  1938                           ;psect for function _win
  1939                           
  1940     0166                     l1027:	
  1941                           ;incstack = 0
  1942                           ; Regs used in _win: [wreg+status,2+status,0+btemp+1]
  1943                           
  1944                           
  1945                           ;buttons.c: 39:     if (score.team1 == score.team2) return;
  1946     0166  1283               	bcf	3,5	;RP0=0, select bank0
  1947     0167  1303               	bcf	3,6	;RP1=0, select bank0
  1948     0168  082B               	movf	_score+1,w
  1949     0169  062A               	xorwf	_score,w
  1950     016A  1D03               	skipz
  1951     016B  296D               	goto	u601
  1952     016C  296E               	goto	u600
  1953     016D                     u601:
  1954     016D  296F               	goto	l1031
  1955     016E                     u600:
  1956     016E  298D               	goto	l97
  1957     016F                     l1031:
  1958                           
  1959                           ;buttons.c: 40:     if (score.team1 > score.team2) score.win1++;
  1960     016F  082B               	movf	_score+1,w
  1961     0170  3A80               	xorlw	128
  1962     0171  00F2               	movwf	??_win
  1963     0172  082A               	movf	_score,w
  1964     0173  3A80               	xorlw	128
  1965     0174  02F2               	subwf	??_win,f
  1966     0175  1803               	skipnc
  1967     0176  2978               	goto	u611
  1968     0177  2979               	goto	u610
  1969     0178                     u611:
  1970     0178  297D               	goto	l1035
  1971     0179                     u610:
  1972     0179                     l1033:
  1973     0179  3001               	movlw	1
  1974     017A  00FF               	movwf	btemp+1
  1975     017B  087F               	movf	btemp+1,w
  1976     017C  07AC               	addwf	_score+2,f
  1977     017D                     l1035:
  1978                           
  1979                           ;buttons.c: 41:     if (score.team2 > score.team1) score.win2++;
  1980     017D  082A               	movf	_score,w
  1981     017E  3A80               	xorlw	128
  1982     017F  00F2               	movwf	??_win
  1983     0180  082B               	movf	_score+1,w
  1984     0181  3A80               	xorlw	128
  1985     0182  02F2               	subwf	??_win,f
  1986     0183  1803               	skipnc
  1987     0184  2986               	goto	u621
  1988     0185  2987               	goto	u620
  1989     0186                     u621:
  1990     0186  298B               	goto	l1039
  1991     0187                     u620:
  1992     0187                     l1037:
  1993     0187  3001               	movlw	1
  1994     0188  00FF               	movwf	btemp+1
  1995     0189  087F               	movf	btemp+1,w
  1996     018A  07AD               	addwf	_score+3,f
  1997     018B                     l1039:
  1998                           
  1999                           ;buttons.c: 42:     score.team1 = score.team2 = 0;
  2000     018B  01AB               	clrf	_score+1
  2001     018C  01AA               	clrf	_score
  2002     018D                     l97:
  2003     018D  0008               	return
  2004     018E                     __end_of_win:
  2005                           
  2006                           	psect	text15
  2007     0113                     __ptext15:	
  2008 ;; *************** function _isr *****************
  2009 ;; Defined at:
  2010 ;;		line 3 in file "interrupt.c"
  2011 ;; Parameters:    Size  Location     Type
  2012 ;;		None
  2013 ;; Auto vars:     Size  Location     Type
  2014 ;;		None
  2015 ;; Return value:  Size  Location     Type
  2016 ;;                  1    wreg      void 
  2017 ;; Registers used:
  2018 ;;		wreg, status,2, status,0
  2019 ;; Tracked objects:
  2020 ;;		On entry : 0/0
  2021 ;;		On exit  : 0/0
  2022 ;;		Unchanged: 0/0
  2023 ;; Data sizes:     COMMON   BANK0   BANK1
  2024 ;;      Params:         0       0       0
  2025 ;;      Locals:         0       0       0
  2026 ;;      Temps:          2       0       0
  2027 ;;      Totals:         2       0       0
  2028 ;;Total ram usage:        2 bytes
  2029 ;; Hardware stack levels used: 1
  2030 ;; This function calls:
  2031 ;;		Nothing
  2032 ;; This function is called by:
  2033 ;;		Interrupt level 1
  2034 ;; This function uses a non-reentrant model
  2035 ;;
  2036                           
  2037     0113                     _isr:	
  2038                           ;psect for function _isr
  2039                           
  2040     0113                     i1l1147:
  2041                           
  2042                           ;interrupt.c: 4:     if (PIR1bits.TMR1IF) {
  2043     0113  1283               	bcf	3,5	;RP0=0, select bank0
  2044     0114  1303               	bcf	3,6	;RP1=0, select bank0
  2045     0115  1C0C               	btfss	12,0	;volatile
  2046     0116  2918               	goto	u80_21
  2047     0117  2919               	goto	u80_20
  2048     0118                     u80_21:
  2049     0118  2936               	goto	i1l159
  2050     0119                     u80_20:
  2051     0119                     i1l1149:
  2052                           
  2053                           ;interrupt.c: 5:         PIR1bits.TMR1IF = 0;
  2054     0119  100C               	bcf	12,0	;volatile
  2055     011A                     i1l1151:
  2056                           
  2057                           ;interrupt.c: 6:         if (timers[0]) timers[0]--;
  2058     011A  082F               	movf	_timers,w	;volatile
  2059     011B  0430               	iorwf	_timers+1,w	;volatile
  2060     011C  1903               	btfsc	3,2
  2061     011D  291F               	goto	u81_21
  2062     011E  2920               	goto	u81_20
  2063     011F                     u81_21:
  2064     011F  2926               	goto	i1l1155
  2065     0120                     u81_20:
  2066     0120                     i1l1153:
  2067     0120  3001               	movlw	1
  2068     0121  02AF               	subwf	_timers,f	;volatile
  2069     0122  3000               	movlw	0
  2070     0123  1C03               	skipc
  2071     0124  03B0               	decf	_timers+1,f	;volatile
  2072     0125  02B0               	subwf	_timers+1,f	;volatile
  2073     0126                     i1l1155:
  2074                           
  2075                           ;interrupt.c: 7:         if (timers[1]) timers[1]--;
  2076     0126  0831               	movf	_timers+2,w	;volatile
  2077     0127  0432               	iorwf	_timers+3,w	;volatile
  2078     0128  1903               	btfsc	3,2
  2079     0129  292B               	goto	u82_21
  2080     012A  292C               	goto	u82_20
  2081     012B                     u82_21:
  2082     012B  2932               	goto	i1l1159
  2083     012C                     u82_20:
  2084     012C                     i1l1157:
  2085     012C  3001               	movlw	1
  2086     012D  02B1               	subwf	_timers+2,f	;volatile
  2087     012E  3000               	movlw	0
  2088     012F  1C03               	skipc
  2089     0130  03B2               	decf	_timers+3,f	;volatile
  2090     0131  02B2               	subwf	_timers+3,f	;volatile
  2091     0132                     i1l1159:
  2092                           
  2093                           ;interrupt.c: 8:         TMR1 = 65535 - 3200;
  2094     0132  30F3               	movlw	243
  2095     0133  008F               	movwf	15	;volatile
  2096     0134  307F               	movlw	127
  2097     0135  008E               	movwf	14	;volatile
  2098     0136                     i1l159:
  2099     0136  0871               	movf	??_isr+1,w
  2100     0137  008A               	movwf	10
  2101     0138  0E70               	swapf	??_isr,w
  2102     0139  0083               	movwf	3
  2103     013A  0EFE               	swapf	btemp,f
  2104     013B  0E7E               	swapf	btemp,w
  2105     013C  0009               	retfie
  2106     013D                     __end_of_isr:
  2107     000C                     
  2108                           	psect	intentry
  2109     0004                     __pintentry:	
  2110                           ;incstack = 0
  2111                           ; Regs used in _isr: [wreg+status,2+status,0]
  2112                           
  2113     0004                     interrupt_function:
  2114     007E                     saved_w	set	btemp
  2115     0004  00FE               	movwf	btemp
  2116     0005  0E03               	swapf	3,w
  2117     0006  00F0               	movwf	??_isr
  2118     0007  080A               	movf	10,w
  2119     0008  00F1               	movwf	??_isr+1
  2120     0009  2913               	ljmp	_isr
  2121                           
  2122                           	psect	functab
  2123     0019                     __pfunctab:
  2124     0019                     __fptable:
  2125     0019                     fptable:
  2126     0019  00FF               	movwf	(btemp+1)& (0+127)
  2127     001A  3000               	movlw	high fptable
  2128     001B  008A               	movwf	10
  2129     001C  087F               	movf	(btemp+1)& (0+127),w
  2130     001D  0782               	addwf	2,f
  2131     001E                     fpbase:
  2132     001E  281E               	goto	fpbase	; Call via a null pointer and you will get stuck here.
  2133     001F                     fp__win:
  2134     001F  2966               	ljmp	_win
  2135     0020                     fp__up1:
  2136     0020  2A58               	ljmp	_up1
  2137     0021                     fp__up2:
  2138     0021  2A48               	ljmp	_up2
  2139     0022                     fp__down1:
  2140     0022  2A74               	ljmp	_down1
  2141     0023                     fp__down2:
  2142     0023  2A68               	ljmp	_down2
  2143     0024                     fp__change:
  2144     0024  29F2               	ljmp	_change
  2145     0025                     __end_of__fptable:
  2146     007E                     btemp	set	126	;btemp
  2147     007E                     wtemp0	set	126
  2148                           
  2149                           	psect	config
  2150                           
  2151                           ;Config register CONFIG @ 0x2007
  2152                           ;	Oscillator Selection bits
  2153                           ;	FOSC = HS, HS oscillator
  2154                           ;	Watchdog Timer Enable bit
  2155                           ;	WDTE = OFF, WDT disabled
  2156                           ;	Power-up Timer Enable bit
  2157                           ;	PWRTE = OFF, PWRT disabled
  2158                           ;	FLASH Program Memory Code Protection bits
  2159                           ;	CP = OFF, Code protection off
  2160                           ;	Brown-out Reset Enable bit
  2161                           ;	BOREN = OFF, BOR disabled
  2162                           ;	Low Voltage In-Circuit Serial Programming Enable bit
  2163                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  2164                           ;	Data EE Memory Code Protection
  2165                           ;	CPD = OFF, Code Protection off
  2166                           ;	FLASH Program Memory Write Enable
  2167                           ;	WRT = ALL, Unprotected program memory may be written to by EECON control
  2168                           ;	In-Circuit Debugger Mode bit
  2169                           ;	DEBUG = 0x1, unprogrammed default
  2170     2007                     	org	8199
  2171     2007  3F3A               	dw	16186

Data Sizes:
    Strings     0
    Constant    16
    Data        0
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      12
    BANK0            80     10      19
    BANK1            32      0       0

Pointer List with Targets:

    checkButton@action	PTR FTN()void  size(1) Largest target is 1
		 -> change(), down1(), down2(), up1(), 
		 -> up2(), win(), 


Critical Paths under _main in COMMON

    _getNumber->_calcDigit
    _calcDigit->___awdiv
    _checkButtons->_checkButton
    _checkButton->_change
    _checkButton->_win

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _getNumber->_calcDigit

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1499
                                              7 BANK0      3     3      0
                       _checkButtons
                              _setup
                      _updateDisplay
 ---------------------------------------------------------------------------------
 (1) _updateDisplay                                        0     0      0     930
                          _getNumber
 ---------------------------------------------------------------------------------
 (2) _getNumber                                            0     0      0     930
                          _calcDigit
 ---------------------------------------------------------------------------------
 (3) _calcDigit                                            8     7      1     930
                                             10 COMMON     1     0      1
                                              0 BANK0      7     7      0
                            ___awdiv
                             ___bmul
 ---------------------------------------------------------------------------------
 (4) ___bmul                                               3     2      1     168
                                              2 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     452
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checkButtons                                         2     2      0     569
                                              5 COMMON     2     2      0
                        _checkButton
 ---------------------------------------------------------------------------------
 (2) _checkButton                                          2     1      1     545
                                              3 COMMON     2     1      1
                             _change *
                              _down1 *
                              _down2 *
                                _up1 *
                                _up2 *
                                _win *
 ---------------------------------------------------------------------------------
 (3) _win                                                  1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _up2                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _up1                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _down2                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _down1                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _change                                               1     1      0      23
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _checkButtons
     _checkButton
       _change *
       _down1 *
       _down2 *
       _up1 *
       _up2 *
       _win *
   _setup
   _updateDisplay
     _getNumber
       _calcDigit
         ___awdiv
         ___bmul

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA              40      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      1F       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      A      13       5       23.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            20      0       0       6        0.0%
BANK1               20      0       0       7        0.0%
DATA                 0      0      1F       8        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Thu Jul 18 18:23:07 2024

   __end_of_checkButtons 00E1                        pc 0002           ___bmul@product 0073  
                     l43 01F1                       l75 0267                       l83 027F  
                     l93 0209                       l69 01B4                       l79 0257  
                     l87 0273                       l97 018D             ___awdiv@sign 0077  
                     fsr 0004                      l104 00E0                      l124 0111  
                    l125 0112                      l136 01D9                      l129 0165  
                    l271 0234                      l398 008B                      l871 01E0  
                    l951 022A                      l881 01E7                      l873 01E3  
                    l865 01DA                      l961 0025                      l953 022C  
                    l945 0221                      l883 01E8                      l875 01E4  
                    l867 01DE                      l971 0035                      l963 0026  
                    l955 022E                      l947 0222                      l885 01EE  
                    l877 01E5                      l869 01DF                      l981 0049  
                    l973 003A                      l965 002A                      l957 0233  
                    l949 0226                      l887 01EF                      l879 01E6  
                    l991 006F                      l983 0050                      l975 003E  
                    l967 002F                      l889 01F0                      l993 0070  
                    l985 0054                      l977 0040                      l969 0031  
                    l995 0077                      l987 0058                      l979 0046  
                    _GIE 005F                      l989 0069                      l997 007D  
                    l999 0082                      u500 0069                      u420 0226  
                    u501 0068                      u421 0225                      u430 0233  
                    u431 0232                      u600 016E                      u520 007D  
                    u440 002A                      u601 016D                      u521 007C  
                    u505 0065                      u441 0029                      u610 0179  
                    u530 0082                      u450 0035                      u611 0178  
                    u531 0081                      u515 0071                      u451 0034  
                    u620 0187                      u540 0265                      u460 0046  
                    u700 015A                      u621 0186                      u541 0264  
                    u461 0045                      u701 0159                      u550 0255  
                    u630 0102                      u710 0162                      u551 0254  
                    u631 0101                      u711 0161                      u560 027E  
                    u640 0194                      u720 009A                      u480 0058  
                    u561 027D                      u641 0193                      u721 0099  
                    u481 0057                      u570 0272                      u650 0199  
                    u730 00A8                      u571 0271                      u651 0198  
                    u731 00A7                      u475 004A                      u580 01FB  
                    u660 01A0                      u740 00B4                      u581 01FA  
                    u661 019F                      u741 00B3                      u590 0202  
                    u670 01B0                      u750 00C3                      u591 0201  
                    u671 01AF                      u751 00C2                      u495 0059  
                    u760 00CF                      u680 0145                      u761 00CE  
                    u681 0144                      u770 00DD                      u690 014F  
                    u771 00DC                      u691 014E                      u780 01BD  
                    u781 01BC                      u837 023E                      u790 01CC  
                    u791 01CB                      _up1 0258                      _up2 0248  
                    _isr 0113                      fsr0 0004                      _win 0166  
                   l1001 0087                     l1011 0255                     l1005 0258  
                   l1013 0274                     l1021 01F2                     l1031 016F  
                   l1007 0265                     l1015 027E                     l1023 01FB  
                   l1111 009A                     l1103 0164                     l1033 0179  
                   l1009 0248                     l1017 0268                     l1025 0203  
                   l1121 00DD                     l1113 00A8                     l1041 00E4  
                   l1035 017D                     l1027 0166                     l1019 0272  
                   l1051 018F                     l1115 00B4                     l1123 00DE  
                   l1107 008C                     l1043 00FC                     l1131 01C2  
                   l1037 0187                     l1061 01A0                     l1053 0194  
                   l1117 00C3                     l1109 008E                     l1045 0102  
                   l1133 01CC                     l1125 01B5                     l1141 0236  
                   l1039 018B                     l1063 01A6                     l1055 0199  
                   l1119 00CF                     l1047 010A                     l1135 01CD  
                   l1143 0244                     l1073 01B1                     l1081 0145  
                   l1137 01D4                     l1129 01BE                     l1145 0245  
                   l1067 01A8                     l1059 019B                     l1091 0154  
                   l1139 0235                     l1093 015A                     l1085 0149  
                   l1087 014F                     l1079 013D                     l1097 015C  
                   l1099 0162                     ?_up1 0070                     ?_up2 0070  
                   ?_isr 0070                     ?_win 0070                     _PEIE 005E  
                   _TMR1 000E           ?_updateDisplay 0070          __end_of_NUMBERS 021A  
                   _main 0235                     btemp 007E                     start 000A  
      ___bmul@multiplier 0074                    ??_up1 0072                    ??_up2 0072  
                  ??_isr 0070                    ??_win 0072                    ?_main 0070  
        __end_of___awdiv 008C          ___awdiv@divisor 0072                    _T1CON 0010  
                  i1l159 0136          ___awdiv@counter 0076                    _PORTB 0006  
                  _PORTC 0007                    u80_20 0119                    u80_21 0118  
                  u81_20 0120                    u81_21 011F                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    u82_20 012C  
                  u82_21 012B                    _down1 0274                    _down2 0268  
                  _score 002A                    _setup 01DA                    fpbase 001E  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 000B             __end_of_main 0248                   ??_main 0027  
                 _ADCON0 001F                   ?_down1 0070                   ?_down2 0070  
        ??_updateDisplay 007B         ___awdiv@dividend 0074                   ?_setup 0070  
                 _DIGITS 021A                   i1l1151 011A                   i1l1153 0120  
                 i1l1155 0126                   i1l1147 0113                   i1l1157 012C  
                 i1l1149 0119                   i1l1159 0132         __end_of__fptable 0025  
                 ___bmul 0220                ??___awdiv 0076                   _change 01F2  
                 _button 007B         ___awdiv@quotient 0078                   _timers 002F  
                 fp__up1 0020                   fp__up2 0021                   fp__win 001F  
                 fptable 0019                   fptotal 000C                   saved_w 007E  
          _calcDigit$237 0022             _checkButtons 008C  __end_of__initialization 0017  
    ___bmul@multiplicand 0072           __pcstackCOMMON 0070            __end_of_down1 0280  
          __end_of_down2 0274            __end_of_setup 01F2                  ??_down1 0072  
                ??_down2 0072                  ??_setup 0072               __pbssBANK0 002A  
             __pmaintext 0235                  ?___bmul 0072                  ?_change 0070  
             __pintentry 0004               calcDigit@d 0026               calcDigit@u 0024  
      __end_of_calcDigit 0113                  _NUMBERS 0210               __stringtab 020A  
      __end_of_getNumber 0166                  ___awdiv 0025            ??_checkButton 0074  
                __ptext1 01B5                  __ptext2 013D                  __ptext3 00E1  
                __ptext4 0220                  __ptext5 0025                  __ptext6 01DA  
                __ptext7 008C                  __ptext8 018E                  __ptext9 01F2  
              _T1CONbits 0010           checkButton@btn 0074        checkButton@action 0073  
   end_of_initialization 0017                _PORTAbits 0005      __end_of_checkButton 01B5  
  __end_of_updateDisplay 01DA           __end_of_DIGITS 0220           calcDigit@digit 007A  
         calcDigit@value 0025           __end_of___bmul 0235           __end_of_change 020A  
    start_initialization 000B              __end_of_up1 0268              __end_of_up2 0258  
            __end_of_isr 013D              __end_of_win 018E                 ??___bmul 0073  
               ??_change 0072              _checkButton 018E              __pbssCOMMON 007B  
              ___latbits 0000            __pcstackBANK0 0020        __size_of__fptable 000C  
              _calcDigit 00E1                __pfunctab 0019                 ?___awdiv 0072  
              _getNumber 013D                __pstrings 020A                change@aux 0072  
             ?_calcDigit 007A        interrupt_function 0004                 _PIE1bits 008C  
               _PIR1bits 000C               ?_getNumber 0070                fp__change 0024  
            __stringbase 020F               _ADCON1bits 009F            ?_checkButtons 0070  
       _checkButtons$216 0076       __end_of__stringtab 0210                 __fptable 0019  
         ??_checkButtons 0075                 __ptext10 0268                 __ptext11 0274  
               __ptext12 0248                 __ptext13 0258                 __ptext14 0166  
               __ptext15 0113              ??_calcDigit 0020                 fp__down1 0022  
               fp__down2 0023              ??_getNumber 007B             ?_checkButton 0073  
               intlevel1 0019                stringcode 020A                 stringdir 020A  
               stringtab 020A            _updateDisplay 01B5  
